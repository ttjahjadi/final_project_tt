%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: d_141-02.eps
%%Creator: Adobe Illustrator(R) 22.1
%%For:  
%%CreationDate: 5/17/2018
%%BoundingBox: 0 0 1000 1219
%%HiResBoundingBox: 0 0 1000 1218.9012
%%CropBox: 0 0 1000 1218.9012
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.1.0 x312 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 108 128 8%%BeginData: 30001 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8
%C1C8C2C8C151FD272751C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8
%C2C8C1C8C2C8C1C8C2C8C1C8CFFFFF9FC8C1C29FC8C1C29FC8C1C29FC8C1
%C29FC8C1C29FC8C1C29FC8C1C29FC8C1C227272027F8272027F8272027F8
%272027F8272027F8272027F8272027F8272027F8272027F827202727C8C1
%C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29F
%CFFFFFC8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8
%C2C8C1C8C251FD272751C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8
%C1C8C2C8C1C8C2C8C1C8C2C8CAFFFFC1C29FC2C1C29FC2C1C29FC2C1C29F
%C2C1C29FC2C1C29FC2C1C29FC2C1C29FC22727F827F827F827F827F827F8
%27F827F827F827F827F827F827F827F827F827F827F827F827F82727C29F
%C2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1
%CFFFFFC8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8
%C2C8C1C8C251FD272751C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8
%C1C8C2C8C1C8C2C8C1C8C2C8CAFFFFC1C29FC8C1C29FC8C1C29FC8C1C29F
%C8C1C29FC8C1C29FC8C1C29FC8C1C29FC82727F8272027F8272027F82720
%27F8272027F8272027F8272027F8272027F8272027F8272027F82727C29F
%C8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1
%CFFFFFC8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8
%C1C8C2C8C151272727A87D27277DA82727A8A8A82752A8A8A87D277DA8A8
%A852A8A8A87D27A87D2727A827272751C2C8C1C8C2C8C1C8C2C8C1C8C2C8
%C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8CAFFFF9FC2C1C29FC2C1C29F
%C2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C22727F827FFFF52
%52FFFF27FF7D7DA8FF52FF7D7DFF7D277D527D27FF7D7DFF7D7DFF5252FF
%27F82727C2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1
%C29FC2C1C29FCFFFFFC8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8
%C2C8C1C8C2C8C1C8C2C8C151272727FFA8FD04FF7DA8272727FF7DFF2727
%A8A8527D7D7D52FF5227FFA8A8FFFF52FF27272751C2C8C1C8C2C8C1C8C2
%C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8CFFFFF9FC8C1C2
%9FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C22727
%2027FF52A8A852FF7DA8F82720FF52FF202776FF52A8A8A827FD04FF52A8
%7DA8FFFF27202727C8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1
%C29FC8C1C29FC8C1C29FCFFFFFC8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8
%C1C8C2C8C1C8C2C8C1C8C2C8C1C8C251272727FF52522752FF52FF7D27A8
%FF76FF5252FF7DFD045227FF7DA8FF27A87D27A8FF27272751C1C8C2C8C1
%C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8CAFFFF
%C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C2
%9FC22727F827FF52F82727FFF87DFFFFA87D27FFFFFFA82752FFFFFF27FF
%2727A8A8A87DF852FF27F82727C29FC2C1C29FC2C1C29FC2C1C29FC2C1C2
%9FC2C1C29FC2C1C29FC2C1C29FC2C1CFFFFFC8C1C8C2C8C1C8C2C8C1C8C2
%C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C251FD272751C1C8C2C8C1
%C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8CAFFFF
%C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C2
%9FC82727F827527DF827527D527D5227F827527D7D7D2727F87D5227F827
%7D7DF852527D7D7D2727F82727C29FC8C1C29FC8C1C29FC8C1C29FC8C1C2
%9FC8C1C29FC8C1C29FC8C1C29FC8C1CFFFFFC8C2C8C1C8C2C8C1C8C2C8C1
%C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C151272727FFA8277DFD04
%A8FF52277DA8A87DA8A82727A8A8522727A87D277DA87DA8A8A827272751
%C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8
%C1C8CAFFFF9FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29F
%C2C1C29FC2C1C22727F827A87D277D7D27F827272752A82727F8527D7DF8
%A8A8A82727A87D27A85227F8522727F82727C2C1C29FC2C1C29FC2C1C29F
%C2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FCFFFFFC8C2C8C1C8C2C8
%C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C151272727FF
%7D52A852FD0527A87DFD04277DA827FD04A827A87D27A8FFA87D52FD0427
%51C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2
%C8C1C8CFFFFF9FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C2
%9FC8C1C29FC8C1C227272027A27D52A827272027F827A87DF827202776A8
%20A87D52A87D7D7D20527DA87DA87D27202727C8C1C29FC8C1C29FC8C1C2
%9FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FCFFFFFC8C1C8C2C8C1
%C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C251272727
%A87D52A87DFD0527A8A8FD0427A87D27A8A8277D7DA87DFD05277DA82727
%2751C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8
%C1C8C2C8CAFFFFC1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29F
%C2C1C29FC2C1C29FC22727F8277D7D27A87D5227277D2752A8525227A8A8
%7DF8A87D27F87DA8A852A8522727A8A827F82727C29FC2C1C29FC2C1C29F
%C2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1CFFFFFC8C1C8C2C8
%C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2512727
%27A87D2727FD05A852277DFD05A82727A87D272727FF7D527DA8A8FFA87D
%27272751C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8
%C2C8C1C8C2C8CAFFFFC1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1
%C29FC8C1C29FC8C1C29FC82727F8272727F827275252522727F827275252
%522027F8522727F8272752F827FD04522027F82727C29FC8C1C29FC8C1C2
%9FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1CFFFFFC8C2C8C1
%C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C151FD
%272751C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1
%C8C2C8C1C8CAFFFF9FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2
%C1C29FC2C1C29FC2C1C22727F827F827F827F827F827F827F827F827F827
%F827F827F827F827F827F827F827F827F827F82727C2C1C29FC2C1C29FC2
%C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FCFFFFFC8C2C8C1
%C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1A075
%767576757675767576757675767576757675767576757675767576757675
%7675767576757675A0C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2
%C8C1C8C2C8C1C8C2C8C1C8CFFFFF9FC8C1C29FC8C1C29FC8C1C29FC8C1C2
%9FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8
%C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C2
%9FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FCF
%FFFFC8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2
%C8C1C8C2C8C1C8C2C8C1C8C2C8C1C2C2C875A0C2C275C89FA0C1C8C2C899
%C8C1A0C1C8C2C8C1A09FC8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2
%C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8CAFFFFC1C29FC2C1C29FC2C1C2
%9FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1A04BA0
%4B9F4BC2755175C24B759F7599754B51754B9F7599519975757526A0C1C2
%9FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2
%C1C29FC2C1CFFFFFC8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1
%C8C2C8C1C8C2C8C1C8C2C8C1C8C2C89F7675514BA0C2764BC29F754BC89F
%A07576517651C875A0757651514B759FC8C1C8C2C8C1C8C2C8C1C8C2C8C1
%C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8CAFFFFC1C29FC8
%C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C2
%9FC8C1C299C89FC29FC29FC29FC8C1A09FC2C1A09FA09FA09FC2C1A09FC2
%9FC299C2C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C2
%9FC8C1C29FC8C1C29FC8C1CFFFFFC8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1
%C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2
%C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1
%C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8CA
%FFFF9FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C2
%9FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2
%C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C2
%9FC2C1C29FC2C1C29FC2C1C29FC2C1C29FCFFFFFC8C2C8C1C8C2C8C1C8C2
%C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1
%C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2
%C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1
%C8C2C8C1C8CFFFFF9FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8
%C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C2
%9FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8
%C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FCFFFFFC8C1C8C2
%C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1
%C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2
%C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1
%C8C2C8C1C8C2C8C1C8C2C8CAFFFFC1C29FC2C1C29FC2C1C29FC2C1C29FC2
%C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C2
%9FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2
%C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1CF
%FFFFC8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2
%C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1
%C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C17C9FC8C1C8C2
%C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8CAFFFFC1C29FC8C1C29FC8C1C2
%9FC8C1C29FC8C1C29FA0999F75A099C29FC8C1C29FC8C1C29FC8C1C29FC8
%C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C2
%9FC8C1C29FC8C1C29FC8C1A027529FC29FC8C1C29FC8C1C29FC8C1C29FC8
%C1C29FC8C1CFFFFFC8C2C8C1C8C2C8C1C8C2C8C1C8C2C89F752727274B27
%4BFD04274BA0C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C176
%9FC8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C84BA8
%A876C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8CAFFFF9FC2C1C29F
%C2C1C29FC2C1C29FC29F2726514B5127514B75514B2727209FC1C29FC2C1
%C29FC2C1C29FC2C1C29FC2C1C29FC2C17526279FC29FC2C1C29FC2C1C29F
%C2C1C29FC2C1C29FC2C1C29FC2C1A027A8FFFF27A0C1C29FC2C1C29FC2C1
%C29FC2C1C29FC2C1C29FCFFFFFC8C2C8C1C8C2C8C1C8C2C8C1C8C27527A0
%9FC8C1A075C89FA0C2C2757627C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8
%C1C8C2A027A0514B9FC8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8
%C2C87576FFFFFFA8527CC1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8CFFF
%FF9FC8C1C29FC8C1C29FC8C1C29FC8994B9FC84B519FA04B27274B75C275
%75C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FA0277575754B279FC8C1
%C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8752752FD04FFA851C29FC8
%C1C29FC8C1C29FC8C1C29FC8C1C29FCFFFFFC8C1C8C2C8C1C8C2C8C1C8C2
%C8C1C87551C17527C84B52A8FFCA5251519FC8C2C8C1C8C2C8C1C8C2C8C1
%C8C2C8C1C8C2A027769F7599765151C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2
%C8C1C8C2C22752FD04FFA8527DA827A0C1C8C2C8C1C8C2C8C1C8C2C8C1C8
%C2C8CAFFFFC1C29FC2C1C29FC2C1C29FC2C1C29FC227C299A07552FD04FF
%A82775C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FA027759F519FC97575
%27519FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2752727A8FFFF52272727
%7D52F8279FC2C1C29FC2C1C29FC2C1C29FC2C1CFFFFFC8C1C8C2C8C1C8C2
%C8C1C8C2C8C1C89F52277D2752A87D527DA8FF527CC1C8C2C8C1C8C2C8C1
%C8C2C8C1C8C2C8C1C2277575CFC9767576757C27A0C2C8C1C8C2C8C1C8C2
%C8C1C8C2C8C1C8C2FD042752272752A8FD0527C2C2C8C1C8C2C8C1C8C2C8
%C1C8C2C8CAFFFFC1C29FC8C1C29FC8C1C29FC8C1C29F7652FF7D7DA85251
%C97527A8A875C29FC8C1C29FC8C1C29FC8C1C29FC8C1A02675759F51C951
%9F51A0757526A0C1C29FC8C1C29FC8C1C29FC8C1C29FC82727F8272027F8
%7D7D27F82720279FC8C1C29FC8C1C29FC8C1C29FC8C1CFFFFFC8C2C8C1C8
%C2C8C1C8C2C8C1C8C2C8277DA8C9A87D4BC8C2FF7C7DA87CC2C8C1C8C2C8
%C1C8C2C8C1C8C2C8C1C8272727512751275127512751272727C2C2C8C1C8
%C2C8C1C8C2C8C1C8C2C8C1C2FD0C2775C8C1C8C2C8C1C8C2C8C1C8C2C8C1
%C8CAFFFF9FC2C1C29FC2C1C29FC2C1C29FC2C1517CA1FFFF7D52C1C2A0A0
%7DA851C2C1C29FC2C1C29FC2C1C29FC2C1C2A7FD0FFFA7C2C1C29FC2C1C2
%9FC2C1C29FC2C1C29F76A1A7F8A852CF7D27A87C75C2C1C29FC2C1C29FC2
%C1C29FC2C1C29FCFFFFFC8C2C8C1C8C2C8C1C8C2C8C1C8C2C89F7C7DFF52
%FF27A0C1C827A87DA0C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1A051524B527D
%FF525251524B5251524BA0C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C89F7DCF
%CACACFCFCF52CF4BC8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8CFFFFF9FC8
%C1C29FC8C1C29FC8C1C29FC8C1C227FD047DA8275127A8FF5275C8C1C29F
%C8C1C29FC8C1C29FC8C1C2C9CFC9CFA776277DC9CFCACACAFFC9CFC9C8C1
%C29FC8C1C29FC8C1C29FC8C1C29FC24BCFC9CFCAFFCACFC94B9FC8C1C29F
%C8C1C29FC8C1C29FC8C1C29FCFFFFFC8C1C8C2C8C1C8C2C8C1C8C2C8C1C8
%C25127C9A8FD05FFCAFF27A0C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C9C9FF
%C9CFCACFCACFC9CFCFCFC9CFCAC9C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8
%C151CACFCAFFCFCFC9A852C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8CAFF
%FFC1C29FC2C1C29FC2C1C29FC2C1C29FC227A02752A1A77DFFC9A1525275
%C29FC2C1C29FC2C1C29FC2C1C29FC2514B4B27277526274B27207527274B
%5151C29FC2C1C29FC2C1C29FC2C1C29FC2C1C24BA7CAFFCACFC9CF527CC1
%C29FC2C1C29FC2C1C29FC2C1C29FC2C1CFFFFFC8C1C8C2C8C1C8C2C8C1C8
%C2C8C1C8C2519FC227527D7DFF7D7D524BC2C1C8C2C8C1C8C2C8C1C8C2C8
%C1C8C276FD0F2776C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1A07DFFCFCF
%CACFCF529FC8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8CAFFFFC1C29FC8C1
%C29FC8C1C29FC8C1C29FC89F51275127275252524B27A0C1C29FC8C1C29F
%C8C1C29FC8C1C29FC89F7551757575517575755175757551759FC29FC8C1
%C29FC8C1C29FC8C1C29FC8C1A02727274B274B274B27519FC29FC8C1C29F
%C8C1C29FC8C1C29FC8C1CFFFFFC8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8
%C2C8C1C89FA075A0C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8
%C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8
%C2C8C1C2C2C29FC89FC8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8CAFF
%FF9FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29F
%C2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1
%C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29F754B75757BC1C29F
%C2C1C29FC2C1C29FC2C1C29FC2C1C29FCFFFFFC8C2C8C1C8C2C8C1C8C2C8
%C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8
%C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8
%C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8
%C2C8C1C8CFFFFF9FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1
%C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29F
%C8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1
%C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FCFFFFFC8C1C8C2C8
%C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8
%C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8
%C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8
%C2C8C1C8C2C8C1C8C2C8CAFFFFC1C29FC2C1C29FC2C1C29FC2C1C29FC2C1
%C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29F
%C2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1
%C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1CFFF
%FFC8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8
%C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8
%C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8
%C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8CAFFFFC1C29FC8C1C29FC8C1C29F
%C8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1
%C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29F
%C8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1
%C29FC8C1CFFFFFC8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8
%C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8
%C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8
%C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8CAFFFF9FC2C1C29F
%C2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1
%C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29F
%C2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1
%C29FC2C1C29FC2C1C29FCFFFFFC8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8
%C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8
%C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8
%C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8CFFF
%FF9FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29F
%C8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1
%C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29F
%C8C1C29FC8C1C29FC8C1C29FC8C1C29FCFFFFFC8C1C8C2C8C1C8C2C8C1C8
%C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8
%C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8
%C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8
%C1C8C2C8CAFFFFC1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29F
%C2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1
%C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29F
%C2CAC29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1CFFFFFC8C1C8C2C8
%C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8
%C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8
%C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C8FFC1C8C2C8C1C8C2C8C1C8
%C2C8C1C8C2C8C1C8C2C8CAFFFFC1C29FC8C1C29FC8C1C29FC8C1C29FC8C1
%C29FC8C9C8C9C8C9C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29F
%A0FD06272627279F9FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8
%C1C275A1A7C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1CFFFFFC8C2
%C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C2FFC2FFC2CFC2C8C1C8C2C8C1
%C8C2C8C1C8C2C8C1C8C2C8C1C8C27527277D7D527D527C52522775C1C8C2
%C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1A02775524B75C8C1C8C2C8C1
%C8C2C8C1C8C2C8C1C8C2C8C1C8CAFFFF9FC2C1C29FC2C1C29FC2C1C29FC2
%C1C29FC2C1C8CAC8CAC9A7C2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C2
%9FC22052527C5176517D7D75525120A09FC2C1C29FC2C1C29FC2C1C29FC2
%C1C29FC2C1C226C2C1FF9F4B9FC29FC2C1C29FC2C1C29FC2C1C29FC2C1C2
%9FCFFFFFC8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1CFC2CFC2CFC2
%C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C85127277D7D7D7552525227
%5175274BC8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2A02776C2C9CAC875
%519FC8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8CFFFFF9FC8C1C29FC8C1C2
%9FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8
%C1C29FC8C1C29F272027F852522776272027F82720279FC8C1C29FC8C1C2
%9FC8C1C29FC8C1C29FA0274B27524B522752275175C8C1C29FC8C1C29FC8
%C1C29FC8C1C29FCFFFFFC8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C175274B4B
%2727274BFD0427A0C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C97D2752A87D27
%52A852277DA852277DC9C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C87552FD09
%2776C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8CAFFFFC1C29FC2C1C29FC2C1
%C29FC2C1C29F515127994B754B75754B754BA027C29FC2C1C29FC2C1C29F
%C2C1C29FC2C1A7A8CAC2C9A8CAC2C9A8C9C2CAA8A7C1C29FC2C1C29FC2C1
%C29FC2C1C29FC2C1C27575C1C8CAC2C1C251A0C1C29FC2C1C29FC2C1C29F
%C2C1C29FC2C1CFFFFFC8C1C8C2C8C1C8C2C8C1C8C2C8C1C227C9A0C9A0C9
%A0C9A0C9A0C9C8A075C8C2C8C1C8C2C8C1C8C2C8C1C8C2C2515251524B52
%51524B529FC8515251C2C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1A075C8
%C9CFC2C9C17C9FC8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8CAFFFFC1C29F
%C8C1C29FC8C1C29FC8C1C24B4B525227525252275252522752275199C8C1
%C29FC8C1C29FC8C1C29FC875A8FD08FFA852277DFFA84BC29FC8C1C29FC8
%C1C29FC8C1C29FC8C1C27576CACFCACFCACF27C2C1C29FC8C1C29FC8C1C2
%9FC8C1C29FC8C1CFFFFFC8C2C8C1C8C2C8C1C8C2C8C1C84BA77D7D7C7D7C
%7D7C7D7C7D7C7D7C7DA152A0C8C2C8C1C8C2C8C1C8C2C8C17C527DFD0752
%7D52527D7D5276C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C84BCFCACFCA
%CFCA52C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8CAFFFF9FC2C1C29FC2
%C1C29FC2C1C29F527DA77CA7A1A17DA7A1A67DA7A1A17DA751A09FC2C1C2
%9FC2C1C29FC2C1C29F5175755127F827F827759F75A075279FC2C1C29FC2
%C1C29FC2C1C29FC2C1C29FC2C151A7CFCACAA7CF27C29FC2C1C29FC2C1C2
%9FC2C1C29FC2C1C29FCFFFFFC8C2C8C1C8C2C8C1C8C2C8C1C8C27CFD0727
%51C151FD0527A0C1C8C2C8C1C8C2C8C1C8C2C8C1C87576C1C875279F759F
%C84B5175C24BC8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C827CFCACFCA
%CFCA4BC1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8CFFFFF9FC8C1C29FC8
%C1C29FC8C1C29FC8C127F8272027F82727C226272027F875C1C29FC8C1C2
%9FC8C1C29FC8C1C29FC227A09FC275C29FC8C1C29FC2279F9FC8C1C29FC8
%C1C29FC8C1C29FC8C1C29FC8C151CACFCACFC9CF27C29FC8C1C29FC8C1C2
%9FC8C1C29FC8C1C29FCFFFFFC8C1C8C2C8C1C8C2C8C1C8C2C8C1C89FFD0C
%2751C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1A027757576757575767575
%27A0C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C84BCFCACFCACFCA52
%C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8CAFFFFC1C29FC2C1C29FC2C1
%C29FC2C1C29FC29F754B514B514B514B514BA0C1C29FC2C1C29FC2C1C29F
%C2C1C29FC2C1C29FC2757551755175517575C29FC2C1C29FC2C1C29FC2C1
%C29FC2C1C29FC2C1C29F51A7CAA7CFC9A727C2C1C29FC2C1C29FC2C1C29F
%C2C1C29FC2C1CFFFFFC8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8
%C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8
%C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C22751
%4B514B512751C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8CAFFFFC1C29F
%C8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1
%C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29F
%C8C1C29FC8C1C29FC8C1C29FC8C1C29FA0274B2751274B75C8C1C29FC8C1
%C29FC8C1C29FC8C1C29FC8C1CFFFFFC8C2C8C1C8C2C8C1C8C2C8C1C8C2C8
%C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8
%C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8
%C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8
%CAFFFF9FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1
%C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29F
%C2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1
%C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FCFFFFFC8C2C8C1C8C2C8C1C8
%C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8
%C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8
%C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8
%C1C8C2C8C1C8CFFFFF9FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29F
%C8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1
%C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29F
%C8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FCFFFFFC8C1C8
%C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8
%C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8
%C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8
%C1C8C2C8C1C8C2C8C1C8C2C8CAFFFFC1C29FC2C1C29FC2C1C29FC2C1C29F
%C2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1
%C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29F
%C2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1
%CFFFFFC8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8
%C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8
%C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8
%C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8CAFFFFC1C29FC8C1C29FC8C1
%C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29F
%C8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1
%C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29F
%C8C1C29FC8C1CFFFFFC8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8
%C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8
%C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8
%C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8CAFFFF9FC2C1
%C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29F
%C2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1
%C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29F
%C2C1C29FC2C1C29FC2C1C29FCFFFFFC8C2C8C1C8C2C8C1C8C2C8C1C8C2C8
%C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8
%C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8
%C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8
%CFFFFF9FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1
%C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC89F7C4B7599C29F
%C8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1
%C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FCFFFFFC8C1C8C2C8C1C8C2C8
%C1C8C2C8C1C8C2A027272775C1C8C2CFCAFFC8C8C1C8C2C8C1C8C2C8C1C8
%C2C8C1C8C2C8C1C8C2C89F7C522775759FC8C1C8C2C8C1C8C2C8C1C8C2C8
%C1C8C2C8C1C8C2C8C9FFCFCFCAFFCFCFCAFFCFC9C1C8C2C8C1C8C2C8C1C8
%C2C8C1C8C2C8CAFFFFC1C29FC2C1C29FC2C1C29FC2C1C29F752727522727
%4B9FC8CAC9A7CFC1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C14B27
%5227752627C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C9FD0AFF
%C9C29FC2C1C29FC2C1C29FC2C1C29FC2C1CFFFFFC8C1C8C2C8C1C8C2C8C1
%C8C2C8C1C227FD047D525276C2C9C9FFC2C8C1C8C2C8C1C8C2C8C1C8C2C8
%C1C8C2C8C1C89F4B27A052277551274B9FC8C2C8C1C8C2C8C1C8C2C8C1C8
%C2C8C1C8C2C8C1A0517551765175517675C8C1C8C2C8C1C8C2C8C1C8C2C8
%C1C8C2C8CAFFFFC1C29FC8C1C29FC8C1C29FC8C1C2274B7D527552512720
%C8C2C9CAC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C275755127755227
%752727517575C2C1C29FC8C1C29FC8C1C29FC8C1C29FC8C14BF84B274B27
%51274B27274BC29FC8C1C29FC8C1C29FC8C1C29FC8C1CFFFFFC8C2C8C1C8
%C2C8C1C8C2C8C1C8C24B4B7D5252527D7D529FC9FFFFC1C9CAC8C1C8C2C8
%C1C8C2C8C1C8C2C8C1C8C2FD042776522775512727274B75C8C2C8C1C8C2
%C8C1C8C2C8C1C8C2C8C1C22752C9CFC9CFC9CFC9C92727C2C8C1C8C2C8C1
%C8C2C8C1C8C2C8C1C8CAFFFF9FC2C1C29FC2C1C29FC2C1C29FC2267D5227
%F8FD04279FCAC9CAC8A0CFC1C29FC2C1C29FC2C1C29FC2C1C29FC2FD0427
%75522775FD05279F9FC2C1C29FC2C1C29FC2C1C29FC2C1C27527C9CAA7CA
%A1A1A7CFC9A120C2C1C29FC2C1C29FC2C1C29FC2C1C29FCFFFFFC8C2C8C1
%C8C2C8C1C8C2C8C1C8C251277651FD0527C8FFC2C9CAC8C2C8C1C8C2C8C1
%C8C2C8C1C8C2C8C1C8C24B4B76FD062752525151C1C8C2C8C1C8C2C8C1C8
%C2C8C1C8C2C8C1A027CFC9CA277D5252A7CFA127C2C8C1C8C2C8C1C8C2C8
%C1C8C2C8C1C8CFFFFF9FC8C1C29FC8C1C29FC8C1C29FC87527F8272027F8
%274BCFC9C8C2FFA0C8C1C29FC8C1C29FC8C1C29FC8C1C29FC82751CAA127
%272752277DCA2727C29FC8C1C29FC8C1C29FC8C1C29FC8C1C27527C9CA51
%A8FFFF5252C9A126C8C1C29FC8C1C29FC8C1C29FC8C1C29FCFFFFFC8C1C8
%C2C8C1C8C2C8C1C8C2C8C1C875FD0627C9CFC8C1C8C9FFC2C8C2C8C1C8C2
%C8C1C8C2C8C1C8C2C8C1514BFFCACFA87DA1FFCFCF4B51C2C8C1C8C2C8C1
%C8C2C8C1C8C2C8C1C8C2A027C9C927CA7D272727CFA027C1C8C2C8C1C8C2
%C8C1C8C2C8C1C8C2C8CAFFFFC1C29FC2C1C29FC2C1C29FC2C1C29FC22727
%F827F8C8CAC8C1C2A0C9C9CA9FC2C1C29FC2C1C29FC2C1C29FC2C1C22751
%527C4B527D52277D764B26C2C1C29FC2C1C29FC2C1C29FC2C1C29FC27527
%A7CA27272127F827A7A127C29FC2C1C29FC2C1C29FC2C1C29FC2C1CFFFFF
%C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2A027272775CAC9C2C8C1C8C8C9CF
%C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C151757DA8FD05FFA8A84B51C2C8C1
%C8C2C8C1C8C2C8C1C8C2C8C1C8C2A027CFCAA1FD042776CFA127C1C8C2C8
%C1C8C2C8C1C8C2C8C1C8C2C8CAFFFFC1C29FC8C1C29FC8C1C29FC8C1C275
%75C127F8279FCF9FC8C9C29FC9C2CAC2C8C1C29FC8C1C29FC8C1C29FC8C1
%C24B75A8FD07FFA85227C8C1C29FC8C1C29FC8C1C29FC8C1C29FC89927C9
%CFC9A14B527CCAC9A727C29FC8C1C29FC8C1C29FC8C1C29FC8C1CFFFFFC8
%C2C8C1C8C2C8C1C8C2C8C1C8C2A04BC8752727C8CFFD04C9CFC2CFCAC9C1
%C8C2C8C1C8C2C8C1C8C2C8C1C8C27551A8FF7D527D7D52FFA87651C1C8C2
%C8C1C8C2C8C1C8C2C8C1C8C2C8C1A0277DC9CFC9CFC9CFC9CA7627C2C8C1
%C8C2C8C1C8C2C8C1C8C2C8C1C8CAFFFF9FC2C1C29FC2C1C29FC2C1C29FC2
%C1C29FA027519FC9C9C9A0C9C9C99FFFC1C29FC2C1C29FC2C1C29FC2C1C2
%9FC2517552FD07FF7D764BC29FC2C1C29FC2C1C29FC2C1C29FC2C1C29F27
%F876527C767C527C522726C2C1C29FC2C1C29FC2C1C29FC2C1C29FCFFFFF
%C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8517D27C8C2FFC9CFC9C9C8FFC9
%C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C27675527D7DA8FFFF7D7D7D5276C1
%C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C89F512751274B2752274B27C2C2
%C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8CFFFFF9FC8C1C29FC8C1C29FC8C1C2
%9FC8C1C27552A87D4BC8C8FFCAC9C9CFC9C8C1C29FC8C1C29FC8C1C29FC8
%C1C29FC8755151A77D52274B7CA7527675C29FC8C1C29FC8C1C29FC8C1C2
%9FC8C1C29FA075755175757551FD0475C8C1C29FC8C1C29FC8C1C29FC8C1
%C29FCFFFFFC8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8515251C2C1C8C2C9
%CAFFC9C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1A04B52A1A8A7A7A1A8
%A77C5176C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8757551754B755175
%4B7551A0C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8CAFFFFC1C29FC2C1C29F
%C2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1
%C29FC2C1C29FC2C1C29F755176517651765176517575C2C1C29FC2C1C29F
%C2C1C29FC2C1C29FC2C1A075A0759F75A0759F75A09FC29FC2C1C29FC2C1
%C29FC2C1C29FC2C1CFFFFFC8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8
%C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8
%C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8
%C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8CAFFFFC1
%C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29F
%C8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1
%C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29F
%C8C1C29FC8C1C29FC8C1C29FC8C1CFFFFFC8C2C8C1C8C2C8C1C8C2C8C1C8
%C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8
%C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8
%C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8
%C1C8CAFFFF9FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29F
%C2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1
%C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29F
%C2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FCFFFFFC8C2C8C1C8C2C8
%C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8
%C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8
%C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8
%C2C8C1C8C2C8C1C8CFFFFF9FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1
%C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29F
%C8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1
%C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FCFFFFFC8
%C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8
%C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8
%C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8
%C2C8C1C8C2C8C1C8C2C8C1C8C2C8CAFFFFC1C29FC2C1C29FC2C1C29FC2C1
%C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29F
%C2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1
%C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29F
%C2C1CFFFFFC8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8
%C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8
%C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8
%C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8CAFFFFC1C29FC8C1C29F
%C8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1
%C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29F
%C8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1C29FC8C1
%C29FC8C1C29FC8C1CFFFFFC8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8
%C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8
%C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8
%C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8C2C8C1C8CAFFFF9F
%C2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1
%C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29F
%C2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1C29FC2C1
%C29FC2C1C29FC2C1C29FC2C1C29FCFFFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 2 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161356, 2017/09/07-01:11:22        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Шаблон_Source_иконки на цветном фоне</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 22.1 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2018-05-17T14:53:44+03:00</xmp:CreateDate>
         <xmp:ModifyDate>2018-05-17T14:53:45+03:00</xmp:ModifyDate>
         <xmp:MetadataDate>2018-05-17T14:53:45+03:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>152</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAmAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A6hnhj2LsVeK+aPK/l/XP&#xA;zB8wjVNSmsbhJtPgsYoIDOZ3ns2JU0IK0MS7+Fe9M9W9mv8AEcf+d/upPN9of30vh9wXX35QeTIE&#xA;ZoNfkmpMbdatAgMwnWNYS1WAeSItN34U4t8Wb1w0s1P8s/KUOjXmp2nmAyi1tEuBGEEqGZoJXMJm&#xA;QBQfVWNQacTXZixoFXtPlj/lGtJ/5grf/k0ueL6//GMn9eX3l6zD9EfcEyzEbGceR/8Ajky/8Z2/&#xA;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&#xA;fYcgEr8j2xVfir//2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:OriginalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:9b39bf80-a1cf-d24c-be17-3c566466325f</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:9b39bf80-a1cf-d24c-be17-3c566466325f</xmpMM:InstanceID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:15ad64b3-d198-f946-9dfc-fb5e6665ab0f</stRef:instanceID>
            <stRef:documentID>xmp.did:15ad64b3-d198-f946-9dfc-fb5e6665ab0f</stRef:documentID>
            <stRef:originalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:ed191e59-44b6-1c4c-9561-f78e30ae6eb4</stEvt:instanceID>
                  <stEvt:when>2017-11-03T11:30:51+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:9b39bf80-a1cf-d24c-be17-3c566466325f</stEvt:instanceID>
                  <stEvt:when>2018-05-17T14:53:45+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Web</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>1000.000000</stDim:w>
            <stDim:h>1218.901068</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -1218.9 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 1218.9 li
1000 1218.9 li
1000 0 li
cp
clp
1000 1218.9 mo
.000366211 1218.9 li
.000366211 8.54492e-05 li
1000 8.54492e-05 li
1000 1218.9 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 .392493 .707851 0 cmyk
f
777.231 753.598 mo
777.111 753.595 777.005 753.581 776.881 753.581 cv
776.881 753.617 li
773.484 753.798 771.62 755.244 769.98 756.544 cv
768.403 757.795 767.04 758.876 764.226 758.876 cv
761.412 758.876 760.05 757.795 758.473 756.544 cv
757.683 755.918 756.834 755.26 755.799 754.72 cv
756.088 758.137 li
756.266 758.275 756.444 758.415 756.624 758.558 cv
758.376 759.948 760.363 761.523 764.226 761.523 cv
768.09 761.523 770.076 759.948 771.828 758.558 cv
773.336 757.363 774.661 756.335 777.231 756.246 cv
779.799 756.335 781.124 757.363 782.631 758.558 cv
784.383 759.948 786.368 761.523 790.23 761.523 cv
794.091 761.523 796.077 759.947 797.828 758.558 cv
799.404 757.307 800.765 756.228 803.575 756.228 cv
806.387 756.228 807.749 757.307 809.326 758.558 cv
811.077 759.948 813.062 761.523 816.925 761.523 cv
820.506 761.523 822.469 760.169 824.132 758.864 cv
824.411 755.272 li
823.78 755.68 823.21 756.119 822.673 756.544 cv
821.097 757.795 819.736 758.876 816.925 758.876 cv
814.113 758.876 812.75 757.795 811.174 756.544 cv
809.423 755.155 807.438 753.581 803.575 753.581 cv
799.714 753.581 797.729 755.155 795.978 756.544 cv
794.402 757.795 793.041 758.876 790.23 758.876 cv
787.417 758.876 786.056 757.795 784.48 756.544 cv
782.841 755.244 780.976 753.799 777.58 753.617 cv
777.58 753.581 li
777.457 753.581 777.351 753.595 777.231 753.598 cv
cp
0 0 0 0 cmyk
f
777.231 738.598 mo
777.111 738.595 777.005 738.581 776.881 738.581 cv
776.881 738.617 li
773.484 738.798 771.62 740.244 769.98 741.544 cv
768.403 742.795 767.04 743.876 764.226 743.876 cv
761.412 743.876 760.05 742.795 758.473 741.544 cv
757.37 740.67 756.175 739.725 754.48 739.142 cv
754.74 742.21 li
755.402 742.595 755.997 743.061 756.624 743.558 cv
758.376 744.948 760.363 746.523 764.226 746.523 cv
768.09 746.523 770.076 744.948 771.828 743.558 cv
773.336 742.363 774.661 741.335 777.231 741.246 cv
779.799 741.335 781.124 742.363 782.631 743.558 cv
784.383 744.948 786.368 746.523 790.23 746.523 cv
794.091 746.523 796.077 744.947 797.828 743.558 cv
799.404 742.307 800.765 741.228 803.575 741.228 cv
806.387 741.228 807.749 742.307 809.326 743.558 cv
811.077 744.948 813.062 746.523 816.925 746.523 cv
820.786 746.523 822.772 744.948 824.523 743.558 cv
824.806 743.333 825.085 743.117 825.366 742.909 cv
825.622 739.585 li
824.453 740.144 823.532 740.864 822.673 741.544 cv
821.097 742.795 819.736 743.876 816.925 743.876 cv
814.113 743.876 812.75 742.795 811.174 741.544 cv
809.423 740.155 807.438 738.581 803.575 738.581 cv
799.714 738.581 797.729 740.155 795.978 741.544 cv
794.402 742.795 793.041 743.876 790.23 743.876 cv
787.417 743.876 786.056 742.795 784.48 741.544 cv
782.841 740.244 780.976 738.799 777.58 738.617 cv
777.58 738.581 li
777.457 738.581 777.351 738.595 777.231 738.598 cv
cp
f
777.231 731.098 mo
777.111 731.095 777.005 731.081 776.881 731.081 cv
776.881 731.117 li
773.484 731.298 771.62 732.744 769.98 734.044 cv
768.403 735.295 767.04 736.376 764.226 736.376 cv
761.412 736.376 760.05 735.295 758.473 734.044 cv
757.238 733.065 755.871 732.004 753.828 731.458 cv
754.075 734.368 li
755.024 734.798 755.797 735.402 756.624 736.058 cv
758.376 737.448 760.363 739.023 764.226 739.023 cv
768.09 739.023 770.076 737.448 771.828 736.058 cv
773.336 734.863 774.661 733.835 777.231 733.746 cv
779.799 733.835 781.124 734.863 782.631 736.058 cv
784.383 737.448 786.368 739.023 790.23 739.023 cv
794.091 739.023 796.077 737.447 797.828 736.058 cv
799.404 734.807 800.765 733.728 803.575 733.728 cv
806.387 733.728 807.749 734.807 809.326 736.058 cv
811.077 737.448 813.062 739.023 816.925 739.023 cv
820.786 739.023 822.772 737.448 824.523 736.058 cv
825.01 735.671 825.481 735.307 825.978 734.981 cv
826.221 731.83 li
824.761 732.412 823.671 733.253 822.673 734.044 cv
821.097 735.295 819.736 736.376 816.925 736.376 cv
814.113 736.376 812.75 735.295 811.174 734.044 cv
809.423 732.655 807.438 731.081 803.575 731.081 cv
799.714 731.081 797.729 732.655 795.978 734.044 cv
794.402 735.295 793.041 736.376 790.23 736.376 cv
787.417 736.376 786.056 735.295 784.48 734.044 cv
782.841 732.744 780.976 731.299 777.58 731.117 cv
777.58 731.081 li
777.457 731.081 777.351 731.095 777.231 731.098 cv
cp
f
771.828 796.501 mo
773.336 795.305 774.661 794.277 777.231 794.187 cv
779.799 794.277 781.124 795.305 782.631 796.501 cv
784.383 797.89 786.368 799.464 790.23 799.464 cv
794.091 799.464 796.077 797.889 797.828 796.501 cv
799.404 795.25 800.765 794.17 803.575 794.17 cv
806.387 794.17 807.749 795.25 809.326 796.501 cv
811.077 797.89 813.062 799.464 816.925 799.464 cv
818.622 799.464 819.944 799.151 821.056 798.692 cv
821.301 795.512 li
820.174 796.272 818.914 796.817 816.925 796.817 cv
814.113 796.817 812.75 795.738 811.174 794.487 cv
809.423 793.097 807.438 791.523 803.575 791.523 cv
799.714 791.523 797.729 793.097 795.978 794.487 cv
794.402 795.738 793.041 796.817 790.23 796.817 cv
787.417 796.817 786.056 795.738 784.48 794.487 cv
782.841 793.186 780.976 791.741 777.58 791.559 cv
777.58 791.523 li
777.457 791.523 777.351 791.538 777.231 791.541 cv
777.111 791.538 777.005 791.523 776.881 791.523 cv
776.881 791.559 li
773.484 791.741 771.62 793.186 769.98 794.486 cv
768.403 795.738 767.04 796.817 764.226 796.817 cv
761.86 796.817 760.521 796.05 759.216 795.063 cv
759.502 798.433 li
760.726 799.037 762.22 799.464 764.226 799.464 cv
768.09 799.464 770.076 797.89 771.828 796.501 cv
cp
f
771.828 789.001 mo
773.336 787.805 774.661 786.777 777.231 786.687 cv
779.799 786.777 781.124 787.805 782.631 789.001 cv
784.383 790.39 786.368 791.964 790.23 791.964 cv
794.091 791.964 796.077 790.389 797.828 789.001 cv
799.404 787.75 800.765 786.67 803.575 786.67 cv
806.387 786.67 807.749 787.75 809.326 789.001 cv
811.077 790.39 813.062 791.964 816.925 791.964 cv
818.935 791.964 820.431 791.534 821.656 790.929 cv
821.914 787.576 li
820.617 788.556 819.28 789.317 816.925 789.317 cv
814.113 789.317 812.75 788.238 811.174 786.987 cv
809.423 785.597 807.438 784.023 803.575 784.023 cv
799.714 784.023 797.729 785.597 795.978 786.987 cv
794.402 788.238 793.041 789.317 790.23 789.317 cv
787.417 789.317 786.056 788.238 784.48 786.987 cv
782.841 785.686 780.976 784.241 777.58 784.059 cv
777.58 784.023 li
777.457 784.023 777.351 784.038 777.231 784.041 cv
777.111 784.038 777.005 784.023 776.881 784.023 cv
776.881 784.059 li
773.484 784.241 771.62 785.686 769.98 786.986 cv
768.403 788.238 767.04 789.317 764.226 789.317 cv
761.451 789.317 760.086 788.265 758.536 787.036 cv
758.836 790.579 li
760.177 791.364 761.843 791.964 764.226 791.964 cv
768.09 791.964 770.076 790.39 771.828 789.001 cv
cp
f
771.828 766.501 mo
773.336 765.305 774.661 764.277 777.231 764.187 cv
779.799 764.277 781.124 765.305 782.631 766.501 cv
784.383 767.89 786.368 769.464 790.23 769.464 cv
794.091 769.464 796.077 767.889 797.828 766.501 cv
799.404 765.25 800.765 764.17 803.575 764.17 cv
806.387 764.17 807.749 765.25 809.326 766.501 cv
811.077 767.89 813.062 769.464 816.925 769.464 cv
820.052 769.464 821.943 768.43 823.481 767.299 cv
823.762 763.656 li
823.383 763.931 823.021 764.211 822.673 764.487 cv
821.097 765.738 819.736 766.817 816.925 766.817 cv
814.113 766.817 812.75 765.738 811.174 764.487 cv
809.423 763.097 807.438 761.523 803.575 761.523 cv
799.714 761.523 797.729 763.097 795.978 764.487 cv
794.402 765.738 793.041 766.817 790.23 766.817 cv
787.417 766.817 786.056 765.738 784.48 764.487 cv
782.841 763.186 780.976 761.741 777.58 761.559 cv
777.58 761.523 li
777.457 761.523 777.351 761.538 777.231 761.541 cv
777.111 761.538 777.005 761.523 776.881 761.523 cv
776.881 761.559 li
773.484 761.741 771.62 763.186 769.98 764.486 cv
768.403 765.738 767.04 766.817 764.226 766.817 cv
761.412 766.817 760.05 765.738 758.473 764.486 cv
757.87 764.007 757.232 763.51 756.505 763.06 cv
756.809 766.645 li
758.519 767.998 760.495 769.464 764.226 769.464 cv
768.09 769.464 770.076 767.89 771.828 766.501 cv
cp
f
771.828 774.001 mo
773.336 772.805 774.661 771.777 777.231 771.687 cv
779.799 771.777 781.124 772.805 782.631 774.001 cv
784.383 775.39 786.368 776.964 790.23 776.964 cv
794.091 776.964 796.077 775.389 797.828 774.001 cv
799.404 772.75 800.765 771.67 803.575 771.67 cv
806.387 771.67 807.749 772.75 809.326 774.001 cv
811.077 775.39 813.062 776.964 816.925 776.964 cv
819.652 776.964 821.435 776.176 822.869 775.225 cv
823.148 771.616 li
822.988 771.74 822.828 771.864 822.673 771.987 cv
821.097 773.238 819.736 774.317 816.925 774.317 cv
814.113 774.317 812.75 773.238 811.174 771.987 cv
809.423 770.597 807.438 769.023 803.575 769.023 cv
799.714 769.023 797.729 770.597 795.978 771.987 cv
794.402 773.238 793.041 774.317 790.23 774.317 cv
787.417 774.317 786.056 773.238 784.48 771.987 cv
782.841 770.686 780.976 769.241 777.58 769.059 cv
777.58 769.023 li
777.457 769.023 777.351 769.038 777.231 769.041 cv
777.111 769.038 777.005 769.023 776.881 769.023 cv
776.881 769.059 li
773.484 769.241 771.62 770.686 769.98 771.986 cv
768.403 773.238 767.04 774.317 764.226 774.317 cv
761.412 774.317 760.05 773.238 758.473 771.986 cv
758.062 771.661 757.636 771.326 757.178 771.003 cv
757.489 774.669 li
759.06 775.85 760.977 776.964 764.226 776.964 cv
768.09 776.964 770.076 775.39 771.828 774.001 cv
cp
f
771.828 781.501 mo
773.336 780.305 774.661 779.277 777.231 779.187 cv
779.799 779.277 781.124 780.305 782.631 781.501 cv
784.383 782.89 786.368 784.464 790.23 784.464 cv
794.091 784.464 796.077 782.889 797.828 781.501 cv
799.404 780.25 800.765 779.17 803.575 779.17 cv
806.387 779.17 807.749 780.25 809.326 781.501 cv
811.077 782.89 813.062 784.464 816.925 784.464 cv
819.278 784.464 820.929 783.878 822.26 783.106 cv
822.531 779.599 li
821.014 780.8 819.65 781.817 816.925 781.817 cv
814.113 781.817 812.75 780.738 811.174 779.487 cv
809.423 778.097 807.438 776.523 803.575 776.523 cv
799.714 776.523 797.729 778.097 795.978 779.487 cv
794.402 780.738 793.041 781.817 790.23 781.817 cv
787.417 781.817 786.056 780.738 784.48 779.487 cv
782.841 778.186 780.976 776.741 777.58 776.559 cv
777.58 776.523 li
777.457 776.523 777.351 776.538 777.231 776.541 cv
777.111 776.538 777.005 776.523 776.881 776.523 cv
776.881 776.559 li
773.484 776.741 771.62 778.186 769.98 779.486 cv
768.403 780.738 767.04 781.817 764.226 781.817 cv
761.412 781.817 760.05 780.738 758.473 779.486 cv
758.272 779.327 758.066 779.165 757.856 779.003 cv
758.165 782.651 li
759.619 783.635 761.427 784.464 764.226 784.464 cv
768.09 784.464 770.076 782.89 771.828 781.501 cv
cp
f
822.673 749.044 mo
821.097 750.295 819.736 751.376 816.925 751.376 cv
814.113 751.376 812.75 750.295 811.174 749.044 cv
809.423 747.655 807.438 746.081 803.575 746.081 cv
799.714 746.081 797.729 747.655 795.978 749.044 cv
794.402 750.295 793.041 751.376 790.23 751.376 cv
787.417 751.376 786.056 750.295 784.48 749.044 cv
782.841 747.744 780.976 746.299 777.58 746.117 cv
777.58 746.081 li
777.457 746.081 777.351 746.095 777.231 746.098 cv
777.111 746.095 777.005 746.081 776.881 746.081 cv
776.881 746.117 li
773.484 746.298 771.62 747.744 769.98 749.044 cv
768.403 750.295 767.04 751.376 764.226 751.376 cv
761.412 751.376 760.05 750.295 758.473 749.044 cv
757.522 748.29 756.49 747.49 755.137 746.908 cv
755.411 750.137 li
755.82 750.422 756.215 750.734 756.624 751.058 cv
758.376 752.448 760.363 754.023 764.226 754.023 cv
768.09 754.023 770.076 752.448 771.828 751.058 cv
773.336 749.863 774.661 748.835 777.231 748.746 cv
779.799 748.835 781.124 749.863 782.631 751.058 cv
784.383 752.448 786.368 754.023 790.23 754.023 cv
794.091 754.023 796.077 752.447 797.828 751.058 cv
799.404 749.807 800.765 748.728 803.575 748.728 cv
806.387 748.728 807.749 749.807 809.326 751.058 cv
811.077 752.448 813.062 754.023 816.925 754.023 cv
820.786 754.023 822.772 752.448 824.523 751.058 cv
824.599 750.998 824.674 750.94 824.749 750.879 cv
825.018 747.406 li
824.129 747.907 823.376 748.487 822.673 749.044 cv
cp
f
838.788 711.232 mo
741.383 711.232 li
741.383 700.528 li
838.788 700.528 li
838.788 711.232 li
cp
f
782.665 735.287 mo
777.163 733.417 li
803.508 638.463 li
809.009 640.333 li
782.665 735.287 li
cp
f
763.099 810.331 mo
817.812 810.331 li
825.275 713.732 li
754.916 713.732 li
763.099 810.331 li
cp
822.441 815.331 mo
758.505 815.331 li
749.475 708.732 li
830.675 708.732 li
822.441 815.331 li
cp
.7037 .661494 .6318 .686549 cmyk
f
827.975 804.91 mo
752.196 804.91 li
752.196 799.91 li
827.975 799.91 li
827.975 804.91 li
cp
f
830.841 699.128 mo
825.841 699.128 li
825.841 693.709 li
817.114 693.709 li
816.735 691.665 li
814.413 679.144 803.474 670.056 790.724 670.056 cv
777.974 670.056 767.035 679.144 764.713 691.665 cv
764.334 693.709 li
755.52 693.709 li
755.52 699.128 li
750.52 699.128 li
750.52 688.709 li
760.246 688.709 li
763.769 674.885 776.268 665.056 790.724 665.056 cv
805.18 665.056 817.679 674.885 821.202 688.709 cv
830.841 688.709 li
830.841 699.128 li
cp
f
743.883 708.732 mo
836.288 708.732 li
836.288 703.028 li
743.883 703.028 li
743.883 708.732 li
cp
841.288 713.732 mo
738.883 713.732 li
738.883 698.028 li
841.288 698.028 li
841.288 713.732 li
cp
f
171.669 1047.54 mo
171.669 1072.7 li
171.26 1072.64 170.844 1072.6 170.418 1072.6 cv
165.558 1072.6 161.618 1076.54 161.618 1081.4 cv
161.618 1086.26 165.558 1090.2 170.418 1090.2 cv
173.29 1090.2 175.833 1088.82 177.44 1086.69 cv
179.046 1088.82 181.589 1090.2 184.462 1090.2 cv
189.323 1090.2 193.263 1086.26 193.263 1081.4 cv
193.263 1076.54 189.323 1072.6 184.462 1072.6 cv
184.036 1072.6 183.62 1072.64 183.211 1072.7 cv
183.211 1047.54 li
171.669 1047.54 li
cp
0 0 0 0 cmyk
f
283.871 982.162 mo
283.871 985.569 281.11 988.332 277.703 988.332 cv
274.295 988.332 271.533 985.569 271.533 982.162 cv
271.533 978.754 277.703 970.305 277.703 970.305 cv
277.703 970.305 283.871 978.754 283.871 982.162 cv
cp
f
150.481 1049.32 mo
150.481 1052.73 147.718 1055.49 144.311 1055.49 cv
140.904 1055.49 138.142 1052.73 138.142 1049.32 cv
138.142 1045.91 144.311 1037.46 144.311 1037.46 cv
144.311 1037.46 150.481 1045.91 150.481 1049.32 cv
cp
.7037 .661494 .6318 .686549 cmyk
f
176.756 939.856 mo
176.113 939.856 175.47 939.878 174.828 939.922 cv
156.73 941.171 141.935 962.162 140.796 980.094 cv
140.003 992.574 145.501 1004.48 155.502 1011.94 cv
163.336 1017.79 168.014 1027.3 168.014 1037.39 cv
168.014 1041.87 li
168.014 1044.6 170.235 1046.82 172.964 1046.82 cv
181.916 1046.82 li
184.646 1046.82 186.867 1044.6 186.867 1041.87 cv
186.867 1037.09 li
186.867 1027.24 191.592 1017.8 199.508 1011.84 cv
208.821 1004.83 214.161 994.134 214.161 982.496 cv
214.161 970.636 208.511 957.996 199.415 949.505 cv
192.701 943.238 184.722 939.856 176.756 939.856 cv
cp
181.916 1051.82 mo
172.964 1051.82 li
167.478 1051.82 163.014 1047.35 163.014 1041.87 cv
163.014 1037.39 li
163.014 1028.87 159.088 1020.85 152.512 1015.95 cv
141.151 1007.47 134.906 993.951 135.806 979.778 cv
137.078 959.743 153.275 936.398 174.484 934.934 cv
184.472 934.239 194.545 938.121 202.827 945.85 cv
212.903 955.254 219.161 969.296 219.161 982.496 cv
219.161 995.719 213.094 1007.87 202.516 1015.84 cv
195.848 1020.86 191.867 1028.8 191.867 1037.09 cv
191.867 1041.87 li
191.867 1047.35 187.403 1051.82 181.916 1051.82 cv
cp
f
216.587 982.496 mo
216.587 959.914 197.502 935.846 174.582 937.428 cv
155.16 938.769 139.46 960.506 138.227 979.936 cv
137.343 993.849 143.72 1006.32 153.933 1013.94 cv
161.287 1019.43 165.44 1028.22 165.44 1037.39 cv
165.44 1041.87 li
165.44 1045.98 168.776 1049.32 172.891 1049.32 cv
181.842 1049.32 li
185.957 1049.32 189.293 1045.98 189.293 1041.87 cv
189.293 1037.09 li
189.293 1027.94 193.626 1019.35 200.939 1013.84 cv
210.442 1006.68 216.587 995.309 216.587 982.496 cv
cp
f
159.419 961.922 mo
156.058 966.9 li
158.697 968.682 li
162.058 963.705 li
159.419 961.922 li
cp
0 0 0 0 cmyk
f
159.419 975.857 mo
156.058 980.836 li
158.697 982.617 li
162.058 977.638 li
159.419 975.857 li
cp
f
187.309 958.308 mo
182.331 954.948 li
180.55 957.586 li
185.529 960.947 li
187.309 958.308 li
cp
f
185.529 974.882 mo
187.309 972.244 li
182.331 968.883 li
180.55 971.522 li
185.529 974.882 li
cp
f
170.415 975.857 mo
172.196 973.218 li
167.218 969.859 li
165.437 972.498 li
170.415 975.857 li
cp
f
170.786 958.308 mo
165.809 954.948 li
164.029 957.586 li
169.006 960.947 li
170.786 958.308 li
cp
f
159.438 955.108 mo
154.459 951.748 li
152.679 954.386 li
157.657 957.747 li
159.438 955.108 li
cp
f
175.943 961.922 mo
172.581 966.9 li
175.22 968.682 li
178.581 963.705 li
175.943 961.922 li
cp
0 .355932 .708705 0 cmyk
f
175.943 947.987 mo
172.581 952.964 li
175.22 954.747 li
178.581 949.769 li
175.943 947.987 li
cp
0 0 0 0 cmyk
f
197.671 957.586 mo
202.65 960.947 li
204.43 958.308 li
199.452 954.948 li
197.671 957.586 li
cp
f
152.483 974.882 mo
154.263 972.244 li
149.286 968.883 li
147.505 971.522 li
152.483 974.882 li
cp
0 .355932 .708705 0 cmyk
f
163.657 999.335 mo
165.437 996.696 li
160.459 993.336 li
158.679 995.974 li
163.657 999.335 li
cp
f
208.864 982.617 mo
212.225 977.638 li
209.586 975.857 li
206.225 980.836 li
208.864 982.617 li
cp
0 0 0 0 cmyk
f
152.483 988.818 mo
154.263 986.179 li
149.286 982.819 li
147.505 985.458 li
152.483 988.818 li
cp
f
199.452 968.883 mo
197.671 971.522 li
202.65 974.882 li
204.43 972.244 li
199.452 968.883 li
cp
f
192.466 947.987 mo
189.105 952.964 li
191.744 954.747 li
195.105 949.769 li
192.466 947.987 li
cp
f
192.466 961.922 mo
189.105 966.9 li
191.744 968.682 li
195.105 963.705 li
192.466 961.922 li
cp
0 .355932 .708705 0 cmyk
f
192.466 975.857 mo
189.105 980.836 li
191.744 982.617 li
195.105 977.638 li
192.466 975.857 li
cp
0 0 0 0 cmyk
f
262.613 1061.31 mo
265.974 1056.33 li
263.335 1054.55 li
259.974 1059.52 li
262.613 1061.31 li
cp
f
262.613 1047.37 mo
265.974 1042.39 li
263.335 1040.61 li
259.974 1045.59 li
262.613 1047.37 li
cp
f
234.723 1064.92 mo
239.702 1068.28 li
241.482 1065.64 li
236.504 1062.28 li
234.723 1064.92 li
cp
f
236.504 1048.35 mo
234.723 1050.98 li
239.702 1054.35 li
241.482 1051.71 li
236.504 1048.35 li
cp
f
251.618 1047.37 mo
249.836 1050.01 li
254.815 1053.37 li
256.595 1050.73 li
251.618 1047.37 li
cp
f
251.245 1064.92 mo
256.223 1068.28 li
258.004 1065.64 li
253.026 1062.28 li
251.245 1064.92 li
cp
f
253.216 1078.62 mo
258.194 1081.98 li
259.974 1079.35 li
254.996 1075.98 li
253.216 1078.62 li
cp
f
234.723 1078.62 mo
239.702 1081.98 li
241.482 1079.35 li
236.504 1075.98 li
234.723 1078.62 li
cp
f
262.595 1068.12 mo
267.573 1071.48 li
269.353 1068.84 li
264.375 1065.48 li
262.595 1068.12 li
cp
f
246.089 1061.31 mo
249.451 1056.33 li
246.812 1054.55 li
243.451 1059.52 li
246.089 1061.31 li
cp
f
246.089 1075.24 mo
249.451 1070.26 li
246.812 1068.48 li
243.451 1073.46 li
246.089 1075.24 li
cp
f
224.362 1065.64 mo
219.382 1062.28 li
217.602 1064.92 li
222.58 1068.28 li
224.362 1065.64 li
cp
f
269.549 1048.35 mo
267.769 1050.98 li
272.746 1054.35 li
274.528 1051.71 li
269.549 1048.35 li
cp
f
258.375 1023.89 mo
256.595 1026.53 li
261.573 1029.89 li
263.354 1027.25 li
258.375 1023.89 li
cp
f
269.549 1034.41 mo
267.769 1037.05 li
272.746 1040.41 li
274.528 1037.77 li
269.549 1034.41 li
cp
f
222.58 1054.35 mo
224.362 1051.71 li
219.382 1048.35 li
217.602 1050.98 li
222.58 1054.35 li
cp
f
229.566 1075.24 mo
232.927 1070.26 li
230.288 1068.48 li
226.927 1073.46 li
229.566 1075.24 li
cp
f
229.566 1061.31 mo
232.927 1056.33 li
230.288 1054.55 li
226.927 1059.52 li
229.566 1061.31 li
cp
f
229.566 1047.37 mo
232.927 1042.39 li
230.288 1040.61 li
226.927 1045.59 li
229.566 1047.37 li
cp
f
184.462 1092.7 mo
181.863 1092.7 179.413 1091.83 177.44 1090.25 cv
175.466 1091.83 173.017 1092.7 170.418 1092.7 cv
164.187 1092.7 159.118 1087.63 159.118 1081.4 cv
159.118 1075.59 163.524 1070.79 169.169 1070.17 cv
169.169 1047.54 li
174.169 1047.54 li
174.169 1072.7 li
174.169 1073.42 173.855 1074.11 173.307 1074.59 cv
172.759 1075.06 172.031 1075.27 171.315 1075.17 cv
170.965 1075.12 170.68 1075.1 170.418 1075.1 cv
166.944 1075.1 164.118 1077.92 164.118 1081.4 cv
164.118 1084.87 166.944 1087.7 170.418 1087.7 cv
172.405 1087.7 174.237 1086.78 175.445 1085.18 cv
175.916 1084.56 176.656 1084.19 177.44 1084.19 cv
178.224 1084.19 178.963 1084.56 179.435 1085.18 cv
180.643 1086.78 182.475 1087.7 184.462 1087.7 cv
187.937 1087.7 190.763 1084.87 190.763 1081.4 cv
190.763 1077.92 187.937 1075.1 184.462 1075.1 cv
184.201 1075.1 183.915 1075.12 183.566 1075.17 cv
182.848 1075.27 182.12 1075.06 181.574 1074.59 cv
181.026 1074.11 180.711 1073.42 180.711 1072.7 cv
180.711 1047.54 li
185.711 1047.54 li
185.711 1070.17 li
191.357 1070.79 195.763 1075.59 195.763 1081.4 cv
195.763 1087.63 190.694 1092.7 184.462 1092.7 cv
cp
.7037 .661494 .6318 .686549 cmyk
f
241.607 977.518 mo
248.149 977.518 li
248.149 951.966 li
251.009 952.383 li
251.344 952.432 251.636 952.456 251.9 952.456 cv
255.374 952.456 258.201 949.629 258.201 946.155 cv
258.201 942.68 255.374 939.854 251.9 939.854 cv
249.912 939.854 248.08 940.772 246.872 942.372 cv
244.876 945.017 li
242.881 942.371 li
241.675 940.771 239.843 939.854 237.856 939.854 cv
234.381 939.854 231.555 942.68 231.555 946.155 cv
231.555 949.629 234.381 952.456 237.856 952.456 cv
238.12 952.456 238.411 952.432 238.746 952.383 cv
241.607 951.966 li
241.607 977.518 li
cp
253.149 982.518 mo
236.607 982.518 li
236.607 957.387 li
230.961 956.763 226.555 951.964 226.555 946.155 cv
226.555 939.923 231.624 934.854 237.856 934.854 cv
240.455 934.854 242.905 935.724 244.877 937.303 cv
246.851 935.724 249.3 934.854 251.9 934.854 cv
258.131 934.854 263.201 939.923 263.201 946.155 cv
263.201 951.964 258.794 956.763 253.149 957.387 cv
253.149 982.518 li
cp
0 0 0 0 cmyk
f
240.402 980.737 mo
237.671 980.737 235.451 982.958 235.451 985.687 cv
235.451 990.464 li
235.451 1000.31 230.725 1009.75 222.809 1015.71 cv
213.497 1022.72 208.157 1033.42 208.157 1045.06 cv
208.157 1056.92 213.807 1069.56 222.904 1078.05 cv
230.16 1084.82 238.872 1088.22 247.49 1087.63 cv
265.587 1086.38 280.383 1065.39 281.522 1047.46 cv
282.315 1034.98 276.817 1023.08 266.816 1015.61 cv
258.982 1009.77 254.304 1000.25 254.304 990.163 cv
254.304 985.687 li
254.304 982.958 252.083 980.737 249.353 980.737 cv
240.402 980.737 li
cp
245.554 1092.7 mo
236.319 1092.7 227.143 1088.85 219.492 1081.7 cv
209.415 1072.3 203.157 1058.26 203.157 1045.06 cv
203.157 1031.83 209.223 1019.68 219.801 1011.72 cv
226.469 1006.7 230.451 998.752 230.451 990.464 cv
230.451 985.687 li
230.451 980.201 234.914 975.737 240.402 975.737 cv
249.353 975.737 li
254.84 975.737 259.304 980.201 259.304 985.687 cv
259.304 990.163 li
259.304 998.683 263.23 1006.7 269.806 1011.61 cv
281.167 1020.08 287.412 1033.6 286.512 1047.78 cv
285.24 1067.81 269.042 1091.16 247.833 1092.62 cv
247.075 1092.67 246.314 1092.7 245.554 1092.7 cv
cp
f
501.62 1004.91 mo
487.665 1004.91 li
487.665 930.433 li
501.62 930.433 li
501.62 1004.91 li
cp
f
475.211 1003.41 mo
484.165 1003.41 li
484.165 946.112 li
475.211 946.112 li
475.211 1003.41 li
cp
489.165 1008.41 mo
470.211 1008.41 li
470.211 941.112 li
489.165 941.112 li
489.165 1008.41 li
cp
.7037 .661494 .6318 .686549 cmyk
f
461.067 1003.41 mo
470.211 1003.41 li
470.211 958.7 li
461.067 958.7 li
461.067 1003.41 li
cp
475.211 1008.41 mo
456.067 1008.41 li
456.067 953.7 li
475.211 953.7 li
475.211 1008.41 li
cp
f
489.165 1003.41 mo
498.12 1003.41 li
498.12 933.933 li
489.165 933.933 li
489.165 1003.41 li
cp
503.12 1008.41 mo
484.165 1008.41 li
484.165 928.933 li
503.12 928.933 li
503.12 1008.41 li
cp
f
503.12 1003.41 mo
512.073 1003.41 li
512.073 933.933 li
503.12 933.933 li
503.12 1003.41 li
cp
517.073 1008.41 mo
498.12 1008.41 li
498.12 928.933 li
517.073 928.933 li
517.073 1008.41 li
cp
f
517.073 1003.41 mo
526.027 1003.41 li
526.027 946.112 li
517.073 946.112 li
517.073 1003.41 li
cp
531.027 1008.41 mo
512.073 1008.41 li
512.073 941.112 li
531.027 941.112 li
531.027 1008.41 li
cp
f
531.027 1003.41 mo
539.98 1003.41 li
539.98 958.274 li
531.027 958.274 li
531.027 1003.41 li
cp
544.98 1008.41 mo
526.027 1008.41 li
526.027 953.274 li
544.98 953.274 li
544.98 1008.41 li
cp
f
441.604 985.272 mo
440.904 972.184 li
457.626 972.184 li
467.261 989.106 479.738 997.726 500.603 997.726 cv
521.468 997.726 533.242 989.106 542.876 972.184 cv
560.302 972.184 li
559.602 985.272 li
547.263 985.272 li
547.263 985.272 532.923 1014.32 502.18 1014.32 cv
471.437 1014.32 452.168 985.272 452.168 985.272 cv
441.604 985.272 li
cp
f
500.603 1003.03 mo
481.443 1003.03 467.693 994.271 456.184 974.684 cv
443.891 974.684 li
444.45 985.138 li
439.457 985.406 li
438.616 969.684 li
459.079 969.684 li
459.799 970.947 li
470.461 989.674 483.046 998.026 500.603 998.026 cv
517.905 998.026 529.897 989.927 540.703 970.947 cv
541.423 969.684 li
562.59 969.684 li
561.748 985.406 li
556.756 985.138 li
557.315 974.684 li
544.322 974.684 li
536.025 988.909 524.216 1003.03 500.603 1003.03 cv
cp
f
549.289 978.972 mo
539.656 995.895 521.468 1007.32 500.603 1007.32 cv
479.738 1007.32 461.55 995.895 451.916 978.972 cv
441.604 978.972 li
448.604 1096.97 li
552.602 1096.97 li
559.602 978.972 li
549.289 978.972 li
cp
0 .355932 .708705 0 cmyk
f
457.374 1048.91 mo
498.971 1007.31 li
498.848 1007.31 498.727 1007.32 498.604 1007.32 cv
496.999 1007.32 495.414 1007.24 493.845 1007.11 cv
457.033 1043.92 li
457.374 1048.91 li
cp
0 0 0 0 cmyk
f
455.918 1027.65 mo
479.581 1003.99 li
478.294 1003.53 477.029 1003.01 475.787 1002.46 cv
455.578 1022.67 li
455.918 1027.65 li
cp
f
456.647 1038.28 mo
488.524 1006.4 li
487.052 1006.14 485.6 1005.81 484.17 1005.43 cv
456.305 1033.29 li
456.647 1038.28 li
cp
f
458.102 1059.53 mo
511.911 1005.72 li
509.789 1006.24 507.618 1006.63 505.408 1006.9 cv
457.76 1054.54 li
458.102 1059.53 li
cp
f
547.632 998.734 mo
459.944 1086.42 li
460.285 1091.41 li
547.34 1004.35 li
547.632 998.734 li
cp
f
458.829 1070.16 mo
536.065 992.921 li
531.634 996.917 526.562 1000.21 521.022 1002.64 cv
458.488 1065.17 li
458.829 1070.16 li
cp
f
459.557 1080.78 mo
547.963 992.378 li
548.255 986.757 li
459.216 1075.8 li
459.557 1080.78 li
cp
f
540.223 1096.97 mo
542.524 1096.97 li
542.65 1094.54 li
540.223 1096.97 li
cp
f
548.661 978.972 mo
547.29 978.972 li
545.267 982.527 542.862 985.835 540.137 988.849 cv
548.586 980.4 li
548.661 978.972 li
cp
f
455.191 1017.03 mo
471.757 1000.46 li
470.619 999.839 469.503 999.177 468.414 998.478 cv
454.85 1012.04 li
455.191 1017.03 li
cp
f
547.01 1010.71 mo
460.748 1096.97 li
466.077 1096.97 li
546.717 1016.33 li
547.01 1010.71 li
cp
f
545.141 1046.64 mo
494.808 1096.97 li
500.136 1096.97 li
544.849 1052.26 li
545.141 1046.64 li
cp
f
454.463 1006.4 mo
464.87 995.998 li
463.863 995.235 462.881 994.439 461.928 993.611 cv
454.121 1001.42 li
454.463 1006.4 li
cp
f
544.518 1058.62 mo
506.162 1096.97 li
511.492 1096.97 li
544.226 1064.24 li
544.518 1058.62 li
cp
f
543.273 1082.57 mo
528.87 1096.97 li
534.198 1096.97 li
542.98 1088.19 li
543.273 1082.57 li
cp
f
543.896 1070.59 mo
517.516 1096.97 li
522.844 1096.97 li
543.603 1076.21 li
543.896 1070.59 li
cp
f
453.008 985.151 mo
453.578 984.582 li
453.341 984.262 453.131 983.923 452.902 983.599 cv
453.008 985.151 li
cp
f
453.736 995.777 mo
458.815 990.698 li
457.931 989.804 457.076 988.882 456.252 987.931 cv
453.394 990.791 li
453.736 995.777 li
cp
f
546.387 1022.69 mo
472.102 1096.97 li
477.43 1096.97 li
546.094 1028.31 li
546.387 1022.69 li
cp
f
545.764 1034.66 mo
483.455 1096.97 li
488.783 1096.97 li
545.472 1040.28 li
545.764 1034.66 li
cp
f
546.341 1028.47 mo
524.11 1028.47 li
518.287 1022.9 510.361 1019.46 501.619 1019.46 cv
492.876 1019.46 484.95 1022.9 479.127 1028.47 cv
457.033 1028.47 li
459.906 1074.46 li
479.126 1074.46 li
484.95 1080.03 492.876 1083.46 501.619 1083.46 cv
510.361 1083.46 518.287 1080.03 524.11 1074.46 cv
543.471 1074.46 li
546.341 1028.47 li
cp
f
450.96 1094.47 mo
550.245 1094.47 li
556.95 981.472 li
550.722 981.472 li
540.159 998.993 521.09 1009.82 500.603 1009.82 cv
480.116 1009.82 461.047 998.993 450.484 981.472 cv
444.256 981.472 li
450.96 1094.47 li
cp
554.958 1099.47 mo
446.247 1099.47 li
438.952 976.472 li
453.37 976.472 li
454.089 977.736 li
463.598 994.439 481.421 1004.82 500.603 1004.82 cv
519.785 1004.82 537.608 994.439 547.117 977.736 cv
547.836 976.472 li
562.254 976.472 li
554.958 1099.47 li
cp
.7037 .661494 .6318 .686549 cmyk
f
457.209 1097.14 mo
449.422 979.137 li
454.411 978.807 li
462.198 1096.81 li
457.209 1097.14 li
cp
f
544.132 1097.14 mo
539.144 1096.81 li
546.931 978.807 li
551.919 979.137 li
544.132 1097.14 li
cp
f
544.831 1029.57 mo
521.834 1029.57 li
521.108 1028.86 li
515.574 1023.51 508.291 1020.56 500.603 1020.56 cv
492.914 1020.56 485.632 1023.51 480.098 1028.86 cv
479.371 1029.57 li
456.51 1029.57 li
456.51 1024.57 li
477.37 1024.57 li
483.743 1018.75 491.953 1015.56 500.603 1015.56 cv
509.253 1015.56 517.463 1018.75 523.836 1024.57 cv
544.831 1024.57 li
544.831 1029.57 li
cp
f
500.675 1085.89 mo
492.025 1085.89 483.815 1082.7 477.442 1076.88 cv
459.423 1076.88 li
459.423 1071.88 li
479.444 1071.88 li
480.17 1072.59 li
485.704 1077.94 492.987 1080.89 500.675 1080.89 cv
508.364 1080.89 515.646 1077.94 521.18 1072.59 cv
521.907 1071.88 li
542.066 1071.88 li
542.066 1076.88 li
523.909 1076.88 li
517.536 1082.7 509.326 1085.89 500.675 1085.89 cv
cp
f
486.08 1052.86 mo
480.08 1052.86 li
480.08 1047.86 li
486.08 1047.86 li
486.08 1052.86 li
cp
498.08 1052.86 mo
492.08 1052.86 li
492.08 1047.86 li
498.08 1047.86 li
498.08 1052.86 li
cp
510.08 1052.86 mo
504.08 1052.86 li
504.08 1047.86 li
510.08 1047.86 li
510.08 1052.86 li
cp
522.08 1052.86 mo
516.08 1052.86 li
516.08 1047.86 li
522.08 1047.86 li
522.08 1052.86 li
cp
f
438.816 745.134 mo
438.816 754.033 li
438.816 772.711 454.011 787.906 472.689 787.906 cv
530.372 787.906 li
549.05 787.906 564.245 772.711 564.245 754.033 cv
564.245 745.134 li
438.816 745.134 li
cp
530.372 792.906 mo
472.689 792.906 li
451.254 792.906 433.816 775.467 433.816 754.033 cv
433.816 740.134 li
569.245 740.134 li
569.245 754.033 li
569.245 775.467 551.807 792.906 530.372 792.906 cv
cp
f
568.376 751.822 mo
432.829 751.822 li
429.481 751.822 426.767 749.107 426.767 745.759 cv
426.767 736.655 li
426.767 733.306 429.481 730.592 432.829 730.592 cv
518.751 730.592 li
533.704 741.725 li
549.062 730.592 li
568.376 730.592 li
571.725 730.592 574.439 733.306 574.439 736.655 cv
574.439 745.759 li
574.439 749.107 571.725 751.822 568.376 751.822 cv
cp
0 0 0 0 cmyk
f
432.829 733.092 mo
430.865 733.092 429.267 734.69 429.267 736.655 cv
429.267 745.759 li
429.267 747.724 430.865 749.322 432.829 749.322 cv
568.376 749.322 li
570.341 749.322 571.939 747.724 571.939 745.759 cv
571.939 736.655 li
571.939 734.69 570.341 733.092 568.376 733.092 cv
551.57 733.092 li
535.382 744.828 li
519.62 733.092 li
432.829 733.092 li
cp
568.376 754.322 mo
432.829 754.322 li
428.108 754.322 424.267 750.481 424.267 745.759 cv
424.267 736.655 li
424.267 731.933 428.108 728.092 432.829 728.092 cv
521.277 728.092 li
535.421 738.623 li
549.949 728.092 li
568.376 728.092 li
573.098 728.092 576.939 731.933 576.939 736.655 cv
576.939 745.759 li
576.939 750.481 573.098 754.322 568.376 754.322 cv
cp
.7037 .661494 .6318 .686549 cmyk
f
522.911 660.888 mo
477.351 660.888 li
453.914 660.888 434.915 679.887 434.915 703.323 cv
434.915 712.604 li
437.937 715.179 440.058 718.628 445.736 718.628 cv
454.798 718.628 454.798 709.842 463.861 709.842 cv
472.923 709.842 472.923 718.628 481.986 718.628 cv
482.026 718.628 li
491.088 718.628 491.088 709.842 500.151 709.842 cv
509.213 709.842 509.213 718.628 518.276 718.628 cv
527.338 718.628 527.338 709.842 536.401 709.842 cv
545.463 709.842 545.463 718.628 554.526 718.628 cv
560.203 718.628 562.325 715.18 565.346 712.604 cv
565.346 703.323 li
565.346 679.887 546.347 660.888 522.911 660.888 cv
cp
f
476.415 693.68 mo
474.648 693.68 473.215 695.113 473.215 696.88 cv
473.215 698.647 474.648 700.08 476.415 700.08 cv
478.182 700.08 479.615 698.647 479.615 696.88 cv
479.615 695.113 478.182 693.68 476.415 693.68 cv
cp
0 0 0 0 cmyk
f
497.591 693.68 mo
495.824 693.68 494.391 695.113 494.391 696.88 cv
494.391 698.647 495.824 700.08 497.591 700.08 cv
499.358 700.08 500.789 698.647 500.789 696.88 cv
500.789 695.113 499.358 693.68 497.591 693.68 cv
cp
f
478.863 687.704 mo
478.863 689.471 480.294 690.903 482.062 690.903 cv
483.828 690.903 485.261 689.471 485.261 687.704 cv
485.261 685.937 483.828 684.504 482.062 684.504 cv
480.294 684.504 478.863 685.937 478.863 687.704 cv
cp
f
487.003 674.976 mo
485.236 674.976 483.803 676.408 483.803 678.175 cv
483.803 679.942 485.236 681.375 487.003 681.375 cv
488.77 681.375 490.203 679.942 490.203 678.175 cv
490.203 676.408 488.77 674.976 487.003 674.976 cv
cp
f
476.415 674.976 mo
474.648 674.976 473.215 676.408 473.215 678.175 cv
473.215 679.942 474.648 681.375 476.415 681.375 cv
478.182 681.375 479.615 679.942 479.615 678.175 cv
479.615 676.408 478.182 674.976 476.415 674.976 cv
cp
0 .355932 .708705 0 cmyk
f
468.275 687.704 mo
468.275 689.471 469.707 690.903 471.475 690.903 cv
473.242 690.903 474.673 689.471 474.673 687.704 cv
474.673 685.937 473.242 684.504 471.475 684.504 cv
469.707 684.504 468.275 685.937 468.275 687.704 cv
cp
0 0 0 0 cmyk
f
465.828 674.976 mo
464.061 674.976 462.628 676.408 462.628 678.175 cv
462.628 679.942 464.061 681.375 465.828 681.375 cv
467.594 681.375 469.027 679.942 469.027 678.175 cv
469.027 676.408 467.594 674.976 465.828 674.976 cv
cp
f
489.45 687.704 mo
489.45 689.471 490.882 690.903 492.65 690.903 cv
494.416 690.903 495.849 689.471 495.849 687.704 cv
495.849 685.937 494.416 684.504 492.65 684.504 cv
490.882 684.504 489.45 685.937 489.45 687.704 cv
cp
0 .355932 .708705 0 cmyk
f
508.178 674.976 mo
506.411 674.976 504.979 676.408 504.979 678.175 cv
504.979 679.942 506.411 681.375 508.178 681.375 cv
509.945 681.375 511.377 679.942 511.377 678.175 cv
511.377 676.408 509.945 674.976 508.178 674.976 cv
cp
0 0 0 0 cmyk
f
497.591 674.976 mo
495.824 674.976 494.391 676.408 494.391 678.175 cv
494.391 679.942 495.824 681.375 497.591 681.375 cv
499.358 681.375 500.789 679.942 500.789 678.175 cv
500.789 676.408 499.358 674.976 497.591 674.976 cv
cp
0 .355932 .708705 0 cmyk
f
510.625 687.704 mo
510.625 689.471 512.058 690.903 513.826 690.903 cv
515.592 690.903 517.024 689.471 517.024 687.704 cv
517.024 685.937 515.592 684.504 513.826 684.504 cv
512.058 684.504 510.625 685.937 510.625 687.704 cv
cp
0 0 0 0 cmyk
f
455.241 674.976 mo
453.473 674.976 452.04 676.408 452.04 678.175 cv
452.04 679.942 453.473 681.375 455.241 681.375 cv
457.007 681.375 458.439 679.942 458.439 678.175 cv
458.439 676.408 457.007 674.976 455.241 674.976 cv
cp
f
457.687 687.704 mo
457.687 689.471 459.12 690.903 460.887 690.903 cv
462.654 690.903 464.086 689.471 464.086 687.704 cv
464.086 685.937 462.654 684.504 460.887 684.504 cv
459.12 684.504 457.687 685.937 457.687 687.704 cv
cp
f
539.942 674.976 mo
538.174 674.976 536.742 676.408 536.742 678.175 cv
536.742 679.942 538.174 681.375 539.942 681.375 cv
541.708 681.375 543.14 679.942 543.14 678.175 cv
543.14 676.408 541.708 674.976 539.942 674.976 cv
cp
f
529.354 674.976 mo
527.586 674.976 526.154 676.408 526.154 678.175 cv
526.154 679.942 527.586 681.375 529.354 681.375 cv
531.12 681.375 532.553 679.942 532.553 678.175 cv
532.553 676.408 531.12 674.976 529.354 674.976 cv
cp
0 .355932 .708705 0 cmyk
f
518.751 674.976 mo
516.984 674.976 515.552 676.408 515.552 678.175 cv
515.552 679.942 516.984 681.375 518.751 681.375 cv
520.518 681.375 521.951 679.942 521.951 678.175 cv
521.951 676.408 520.518 674.976 518.751 674.976 cv
cp
0 0 0 0 cmyk
f
492.65 664.939 mo
490.882 664.939 489.451 666.371 489.451 668.138 cv
489.451 669.905 490.882 671.338 492.65 671.338 cv
494.416 671.338 495.849 669.905 495.849 668.138 cv
495.849 666.371 494.416 664.939 492.65 664.939 cv
cp
f
482.062 664.939 mo
480.295 664.939 478.863 666.371 478.863 668.138 cv
478.863 669.905 480.295 671.338 482.062 671.338 cv
483.828 671.338 485.261 669.905 485.261 668.138 cv
485.261 666.371 483.828 664.939 482.062 664.939 cv
cp
f
471.475 664.939 mo
469.707 664.939 468.275 666.371 468.275 668.138 cv
468.275 669.905 469.707 671.338 471.475 671.338 cv
473.242 671.338 474.674 669.905 474.674 668.138 cv
474.674 666.371 473.242 664.939 471.475 664.939 cv
cp
f
513.826 664.939 mo
512.058 664.939 510.625 666.371 510.625 668.138 cv
510.625 669.905 512.058 671.338 513.826 671.338 cv
515.592 671.338 517.025 669.905 517.025 668.138 cv
517.025 666.371 515.592 664.939 513.826 664.939 cv
cp
0 .355932 .708705 0 cmyk
f
503.238 664.939 mo
501.47 664.939 500.037 666.371 500.037 668.138 cv
500.037 669.905 501.47 671.338 503.238 671.338 cv
505.004 671.338 506.437 669.905 506.437 668.138 cv
506.437 666.371 505.004 664.939 503.238 664.939 cv
cp
0 0 0 0 cmyk
f
524.398 664.939 mo
522.631 664.939 521.199 666.371 521.199 668.138 cv
521.199 669.905 522.631 671.338 524.398 671.338 cv
526.165 671.338 527.597 669.905 527.597 668.138 cv
527.597 666.371 526.165 664.939 524.398 664.939 cv
cp
f
545.588 684.504 mo
543.821 684.504 542.388 685.937 542.388 687.704 cv
542.388 689.471 543.821 690.903 545.588 690.903 cv
547.355 690.903 548.787 689.471 548.787 687.704 cv
548.787 685.937 547.355 684.504 545.588 684.504 cv
cp
0 .355932 .708705 0 cmyk
f
517.5 749.329 mo
506.962 749.329 li
452.088 749.329 li
452.088 754.338 li
464.464 754.338 li
469.007 754.338 472.69 758.022 472.69 762.565 cv
472.69 768.696 li
472.69 771.723 474.904 774.427 477.918 774.715 cv
481.376 775.045 484.286 772.335 484.286 768.945 cv
484.286 761.396 li
484.286 758.069 487.305 755.446 490.753 756.121 cv
493.309 756.62 495.05 759.024 495.05 761.628 cv
495.05 762.918 li
495.05 766.12 497.646 768.715 500.847 768.715 cv
501.058 768.715 li
504.26 768.715 506.855 766.12 506.855 762.918 cv
506.855 762.535 li
506.855 758.093 510.382 754.499 514.785 754.338 cv
517.5 754.338 li
517.5 749.329 li
cp
.7037 .661494 .6318 .686549 cmyk
f
567.846 714.235 mo
562.846 714.235 li
562.846 703.323 li
562.846 681.302 544.931 663.388 522.911 663.388 cv
477.351 663.388 li
455.33 663.388 437.415 681.302 437.415 703.323 cv
437.415 714.235 li
432.415 714.235 li
432.415 703.323 li
432.415 678.545 452.574 658.388 477.351 658.388 cv
522.911 658.388 li
547.688 658.388 567.846 678.545 567.846 703.323 cv
567.846 714.235 li
cp
f
554.321 721.815 mo
548.777 721.815 545.861 718.988 543.518 716.716 cv
541.393 714.656 539.714 713.028 536.196 713.028 cv
532.677 713.028 530.998 714.656 528.873 716.716 cv
526.531 718.988 523.616 721.815 518.072 721.815 cv
512.528 721.815 509.612 718.988 507.269 716.716 cv
505.144 714.656 503.465 713.028 499.947 713.028 cv
496.428 713.028 494.749 714.656 492.624 716.716 cv
490.282 718.988 487.366 721.815 481.822 721.815 cv
476.237 721.815 473.321 718.988 470.978 716.716 cv
468.853 714.656 467.174 713.028 463.656 713.028 cv
460.138 713.028 458.459 714.656 456.334 716.716 cv
453.992 718.988 451.076 721.815 445.532 721.815 cv
439.988 721.815 437.072 718.988 434.729 716.716 cv
432.604 714.656 430.925 713.028 427.407 713.028 cv
427.407 708.028 li
432.951 708.028 435.867 710.855 438.209 713.127 cv
440.334 715.187 442.013 716.815 445.532 716.815 cv
449.05 716.815 450.729 715.187 452.854 713.127 cv
455.197 710.855 458.112 708.028 463.656 708.028 cv
469.2 708.028 472.116 710.855 474.458 713.127 cv
476.583 715.187 478.262 716.815 481.781 716.815 cv
485.34 716.815 487.019 715.187 489.144 713.127 cv
491.487 710.855 494.403 708.028 499.947 708.028 cv
505.491 708.028 508.407 710.855 510.749 713.127 cv
512.874 715.187 514.553 716.815 518.072 716.815 cv
521.589 716.815 523.268 715.187 525.393 713.127 cv
527.736 710.855 530.652 708.028 536.196 708.028 cv
541.74 708.028 544.656 710.855 546.998 713.127 cv
549.123 715.187 550.802 716.815 554.321 716.815 cv
557.839 716.815 559.518 715.187 561.643 713.127 cv
563.986 710.855 566.902 708.028 572.446 708.028 cv
572.446 713.028 li
568.927 713.028 567.248 714.656 565.123 716.716 cv
562.781 718.988 559.865 721.815 554.321 721.815 cv
cp
0 0 0 0 cmyk
f
533.585 769.146 mo
527.585 769.146 li
527.585 764.146 li
533.585 764.146 li
533.585 769.146 li
cp
545.585 769.146 mo
539.585 769.146 li
539.585 764.146 li
545.585 764.146 li
545.585 769.146 li
cp
.7037 .661494 .6318 .686549 cmyk
f
816.388 981.002 mo
814.93 981.002 813.748 982.183 813.748 983.64 cv
813.748 985.097 814.93 986.279 816.388 986.279 cv
817.845 986.279 819.027 985.097 819.027 983.64 cv
819.027 982.183 817.845 981.002 816.388 981.002 cv
cp
0 0 0 0 cmyk
f
833.853 996.429 mo
832.395 996.429 831.214 997.61 831.214 999.068 cv
831.214 1000.52 832.395 1001.71 833.853 1001.71 cv
835.31 1001.71 836.492 1000.52 836.492 999.068 cv
836.492 997.61 835.31 996.429 833.853 996.429 cv
cp
f
822.481 999.068 mo
822.481 1000.52 823.662 1001.71 825.12 1001.71 cv
826.578 1001.71 827.759 1000.52 827.759 999.068 cv
827.759 997.61 826.578 996.429 825.12 996.429 cv
823.662 996.429 822.481 997.61 822.481 999.068 cv
cp
f
829.196 988.57 mo
827.738 988.57 826.556 989.751 826.556 991.209 cv
826.556 992.666 827.738 993.847 829.196 993.847 cv
830.653 993.847 831.834 992.666 831.834 991.209 cv
831.834 989.751 830.653 988.57 829.196 988.57 cv
cp
f
820.463 988.57 mo
819.005 988.57 817.824 989.751 817.824 991.209 cv
817.824 992.666 819.005 993.847 820.463 993.847 cv
821.92 993.847 823.102 992.666 823.102 991.209 cv
823.102 989.751 821.92 988.57 820.463 988.57 cv
cp
f
811.731 988.57 mo
810.273 988.57 809.091 989.751 809.091 991.209 cv
809.091 992.666 810.273 993.847 811.731 993.847 cv
813.188 993.847 814.37 992.666 814.37 991.209 cv
814.37 989.751 813.188 988.57 811.731 988.57 cv
cp
f
794.265 988.57 mo
792.808 988.57 791.626 989.751 791.626 991.209 cv
791.626 992.666 792.808 993.847 794.265 993.847 cv
795.723 993.847 796.904 992.666 796.904 991.209 cv
796.904 989.751 795.723 988.57 794.265 988.57 cv
cp
f
798.923 981.002 mo
797.465 981.002 796.284 982.183 796.284 983.64 cv
796.284 985.097 797.465 986.279 798.923 986.279 cv
800.38 986.279 801.561 985.097 801.561 983.64 cv
801.561 982.183 800.38 981.002 798.923 981.002 cv
cp
f
807.656 1032.56 mo
809.113 1032.56 810.294 1031.38 810.294 1029.92 cv
810.294 1028.47 809.113 1027.28 807.656 1027.28 cv
806.198 1027.28 805.016 1028.47 805.016 1029.92 cv
805.016 1031.38 806.198 1032.56 807.656 1032.56 cv
cp
f
833.853 1032.56 mo
835.31 1032.56 836.492 1031.38 836.492 1029.92 cv
836.492 1028.47 835.31 1027.28 833.853 1027.28 cv
832.395 1027.28 831.214 1028.47 831.214 1029.92 cv
831.214 1031.38 832.395 1032.56 833.853 1032.56 cv
cp
f
823.102 1022.06 mo
823.102 1020.61 821.92 1019.42 820.463 1019.42 cv
819.005 1019.42 817.824 1020.61 817.824 1022.06 cv
817.824 1023.52 819.005 1024.7 820.463 1024.7 cv
821.92 1024.7 823.102 1023.52 823.102 1022.06 cv
cp
f
825.12 1017.13 mo
826.578 1017.13 827.759 1015.95 827.759 1014.49 cv
827.759 1013.04 826.578 1011.86 825.12 1011.86 cv
823.662 1011.86 822.481 1013.04 822.481 1014.49 cv
822.481 1015.95 823.662 1017.13 825.12 1017.13 cv
cp
f
814.37 1022.06 mo
814.37 1020.61 813.188 1019.42 811.731 1019.42 cv
810.273 1019.42 809.091 1020.61 809.091 1022.06 cv
809.091 1023.52 810.273 1024.7 811.731 1024.7 cv
813.188 1024.7 814.37 1023.52 814.37 1022.06 cv
cp
f
837.928 1004 mo
836.47 1004 835.289 1005.18 835.289 1006.64 cv
835.289 1008.09 836.47 1009.27 837.928 1009.27 cv
839.385 1009.27 840.567 1008.09 840.567 1006.64 cv
840.567 1005.18 839.385 1004 837.928 1004 cv
cp
f
829.196 1004 mo
827.738 1004 826.556 1005.18 826.556 1006.64 cv
826.556 1008.09 827.738 1009.27 829.196 1009.27 cv
830.653 1009.27 831.834 1008.09 831.834 1006.64 cv
831.834 1005.18 830.653 1004 829.196 1004 cv
cp
f
816.388 1032.56 mo
817.845 1032.56 819.027 1031.38 819.027 1029.92 cv
819.027 1028.47 817.845 1027.28 816.388 1027.28 cv
814.93 1027.28 813.748 1028.47 813.748 1029.92 cv
813.748 1031.38 814.93 1032.56 816.388 1032.56 cv
cp
f
779.439 1037.49 mo
779.439 1036.03 778.257 1034.85 776.8 1034.85 cv
775.342 1034.85 774.161 1036.03 774.161 1037.49 cv
774.161 1038.95 775.342 1040.13 776.8 1040.13 cv
778.257 1040.13 779.439 1038.95 779.439 1037.49 cv
cp
f
790.19 981.002 mo
788.733 981.002 787.551 982.183 787.551 983.64 cv
787.551 985.097 788.733 986.279 790.19 986.279 cv
791.648 986.279 792.828 985.097 792.828 983.64 cv
792.828 982.183 791.648 981.002 790.19 981.002 cv
cp
f
840.567 1022.06 mo
840.567 1020.61 839.385 1019.42 837.928 1019.42 cv
836.47 1019.42 835.289 1020.61 835.289 1022.06 cv
835.289 1023.52 836.47 1024.7 837.928 1024.7 cv
839.385 1024.7 840.567 1023.52 840.567 1022.06 cv
cp
f
829.196 1024.7 mo
830.653 1024.7 831.834 1023.52 831.834 1022.06 cv
831.834 1020.61 830.653 1019.42 829.196 1019.42 cv
827.738 1019.42 826.556 1020.61 826.556 1022.06 cv
826.556 1023.52 827.738 1024.7 829.196 1024.7 cv
cp
f
802.998 988.57 mo
801.54 988.57 800.359 989.751 800.359 991.209 cv
800.359 992.666 801.54 993.847 802.998 993.847 cv
804.455 993.847 805.636 992.666 805.636 991.209 cv
805.636 989.751 804.455 988.57 802.998 988.57 cv
cp
f
753.242 1037.49 mo
753.242 1036.03 752.06 1034.85 750.603 1034.85 cv
749.145 1034.85 747.963 1036.03 747.963 1037.49 cv
747.963 1038.95 749.145 1040.13 750.603 1040.13 cv
752.06 1040.13 753.242 1038.95 753.242 1037.49 cv
cp
f
785.533 988.57 mo
784.076 988.57 782.894 989.751 782.894 991.209 cv
782.894 992.666 784.076 993.847 785.533 993.847 cv
786.99 993.847 788.171 992.666 788.171 991.209 cv
788.171 989.751 786.99 988.57 785.533 988.57 cv
cp
f
736.731 1012.08 mo
736.731 1016.91 li
737.057 1017.05 737.415 1017.13 737.795 1017.13 cv
739.252 1017.13 740.434 1015.95 740.434 1014.49 cv
740.434 1013.04 739.252 1011.86 737.795 1011.86 cv
737.415 1011.86 737.057 1011.94 736.731 1012.08 cv
cp
f
741.87 1040.13 mo
743.328 1040.13 744.509 1038.95 744.509 1037.49 cv
744.509 1036.03 743.328 1034.85 741.87 1034.85 cv
740.412 1034.85 739.231 1036.03 739.231 1037.49 cv
739.231 1038.95 740.412 1040.13 741.87 1040.13 cv
cp
f
740.434 1029.92 mo
740.434 1028.47 739.252 1027.28 737.795 1027.28 cv
737.415 1027.28 737.057 1027.37 736.731 1027.51 cv
736.731 1032.33 li
737.057 1032.48 737.415 1032.56 737.795 1032.56 cv
739.252 1032.56 740.434 1031.38 740.434 1029.92 cv
cp
f
746.528 1047.99 mo
747.985 1047.99 749.166 1046.81 749.166 1045.35 cv
749.166 1043.89 747.985 1042.71 746.528 1042.71 cv
745.07 1042.71 743.888 1043.89 743.888 1045.35 cv
743.888 1046.81 745.07 1047.99 746.528 1047.99 cv
cp
f
770.706 1037.49 mo
770.706 1036.03 769.525 1034.85 768.068 1034.85 cv
766.61 1034.85 765.429 1036.03 765.429 1037.49 cv
765.429 1038.95 766.61 1040.13 768.068 1040.13 cv
769.525 1040.13 770.706 1038.95 770.706 1037.49 cv
cp
f
772.725 1047.99 mo
774.182 1047.99 775.364 1046.81 775.364 1045.35 cv
775.364 1043.89 774.182 1042.71 772.725 1042.71 cv
771.267 1042.71 770.086 1043.89 770.086 1045.35 cv
770.086 1046.81 771.267 1047.99 772.725 1047.99 cv
cp
f
759.335 1040.13 mo
760.792 1040.13 761.974 1038.95 761.974 1037.49 cv
761.974 1036.03 760.792 1034.85 759.335 1034.85 cv
757.877 1034.85 756.696 1036.03 756.696 1037.49 cv
756.696 1038.95 757.877 1040.13 759.335 1040.13 cv
cp
f
763.993 1047.99 mo
765.45 1047.99 766.631 1046.81 766.631 1045.35 cv
766.631 1043.89 765.45 1042.71 763.993 1042.71 cv
762.535 1042.71 761.354 1043.89 761.354 1045.35 cv
761.354 1046.81 762.535 1047.99 763.993 1047.99 cv
cp
f
755.26 1032.56 mo
756.717 1032.56 757.899 1031.38 757.899 1029.92 cv
757.899 1028.47 756.717 1027.28 755.26 1027.28 cv
753.802 1027.28 752.62 1028.47 752.62 1029.92 cv
752.62 1031.38 753.802 1032.56 755.26 1032.56 cv
cp
f
768.068 988.57 mo
766.61 988.57 765.429 989.751 765.429 991.209 cv
765.429 992.666 766.61 993.847 768.068 993.847 cv
769.525 993.847 770.706 992.666 770.706 991.209 cv
770.706 989.751 769.525 988.57 768.068 988.57 cv
cp
f
763.993 981.002 mo
762.535 981.002 761.354 982.183 761.354 983.64 cv
761.354 985.097 762.535 986.279 763.993 986.279 cv
765.45 986.279 766.631 985.097 766.631 983.64 cv
766.631 982.183 765.45 981.002 763.993 981.002 cv
cp
f
772.725 981.002 mo
771.267 981.002 770.086 982.183 770.086 983.64 cv
770.086 985.097 771.267 986.279 772.725 986.279 cv
774.182 986.279 775.364 985.097 775.364 983.64 cv
775.364 982.183 774.182 981.002 772.725 981.002 cv
cp
f
776.8 988.57 mo
775.342 988.57 774.161 989.751 774.161 991.209 cv
774.161 992.666 775.342 993.847 776.8 993.847 cv
778.257 993.847 779.439 992.666 779.439 991.209 cv
779.439 989.751 778.257 988.57 776.8 988.57 cv
cp
f
781.457 981.002 mo
780 981.002 778.819 982.183 778.819 983.64 cv
778.819 985.097 780 986.279 781.457 986.279 cv
782.914 986.279 784.096 985.097 784.096 983.64 cv
784.096 982.183 782.914 981.002 781.457 981.002 cv
cp
f
759.335 988.57 mo
757.877 988.57 756.696 989.751 756.696 991.209 cv
756.696 992.666 757.877 993.847 759.335 993.847 cv
760.792 993.847 761.974 992.666 761.974 991.209 cv
761.974 989.751 760.792 988.57 759.335 988.57 cv
cp
f
743.888 999.068 mo
743.888 1000.52 745.07 1001.71 746.528 1001.71 cv
747.985 1001.71 749.166 1000.52 749.166 999.068 cv
749.166 997.61 747.985 996.429 746.528 996.429 cv
745.07 996.429 743.888 997.61 743.888 999.068 cv
cp
f
750.603 988.57 mo
749.145 988.57 747.963 989.751 747.963 991.209 cv
747.963 992.666 749.145 993.847 750.603 993.847 cv
752.06 993.847 753.242 992.666 753.242 991.209 cv
753.242 989.751 752.06 988.57 750.603 988.57 cv
cp
f
741.87 1004 mo
740.412 1004 739.231 1005.18 739.231 1006.64 cv
739.231 1008.09 740.412 1009.27 741.87 1009.27 cv
743.328 1009.27 744.509 1008.09 744.509 1006.64 cv
744.509 1005.18 743.328 1004 741.87 1004 cv
cp
f
752.62 999.068 mo
752.62 1000.52 753.802 1001.71 755.26 1001.71 cv
756.717 1001.71 757.899 1000.52 757.899 999.068 cv
757.899 997.61 756.717 996.429 755.26 996.429 cv
753.802 996.429 752.62 997.61 752.62 999.068 cv
cp
f
833.853 1017.13 mo
835.31 1017.13 836.492 1015.95 836.492 1014.49 cv
836.492 1013.04 835.31 1011.86 833.853 1011.86 cv
832.395 1011.86 831.214 1013.04 831.214 1014.49 cv
831.214 1015.95 832.395 1017.13 833.853 1017.13 cv
cp
f
807.656 1011.86 mo
806.198 1011.86 805.016 1013.04 805.016 1014.49 cv
805.016 1015.95 806.198 1017.13 807.656 1017.13 cv
809.113 1017.13 810.294 1015.95 810.294 1014.49 cv
810.294 1013.04 809.113 1011.86 807.656 1011.86 cv
cp
f
816.388 1011.86 mo
814.93 1011.86 813.748 1013.04 813.748 1014.49 cv
813.748 1015.95 814.93 1017.13 816.388 1017.13 cv
817.845 1017.13 819.027 1015.95 819.027 1014.49 cv
819.027 1013.04 817.845 1011.86 816.388 1011.86 cv
cp
f
811.731 1004 mo
810.273 1004 809.091 1005.18 809.091 1006.64 cv
809.091 1008.09 810.273 1009.27 811.731 1009.27 cv
813.188 1009.27 814.37 1008.09 814.37 1006.64 cv
814.37 1005.18 813.188 1004 811.731 1004 cv
cp
f
816.388 996.429 mo
814.93 996.429 813.748 997.61 813.748 999.068 cv
813.748 1000.52 814.93 1001.71 816.388 1001.71 cv
817.845 1001.71 819.027 1000.52 819.027 999.068 cv
819.027 997.61 817.845 996.429 816.388 996.429 cv
cp
f
802.998 1004 mo
801.54 1004 800.359 1005.18 800.359 1006.64 cv
800.359 1008.09 801.54 1009.27 802.998 1009.27 cv
804.455 1009.27 805.636 1008.09 805.636 1006.64 cv
805.636 1005.18 804.455 1004 802.998 1004 cv
cp
f
790.19 996.429 mo
788.733 996.429 787.551 997.61 787.551 999.068 cv
787.551 1000.52 788.733 1001.71 790.19 1001.71 cv
791.648 1001.71 792.828 1000.52 792.828 999.068 cv
792.828 997.61 791.648 996.429 790.19 996.429 cv
cp
f
798.923 1011.86 mo
797.465 1011.86 796.284 1013.04 796.284 1014.49 cv
796.284 1015.95 797.465 1017.13 798.923 1017.13 cv
800.38 1017.13 801.561 1015.95 801.561 1014.49 cv
801.561 1013.04 800.38 1011.86 798.923 1011.86 cv
cp
f
794.265 1004 mo
792.808 1004 791.626 1005.18 791.626 1006.64 cv
791.626 1008.09 792.808 1009.27 794.265 1009.27 cv
795.723 1009.27 796.904 1008.09 796.904 1006.64 cv
796.904 1005.18 795.723 1004 794.265 1004 cv
cp
f
790.19 1011.86 mo
788.733 1011.86 787.551 1013.04 787.551 1014.49 cv
787.551 1015.95 788.733 1017.13 790.19 1017.13 cv
791.648 1017.13 792.828 1015.95 792.828 1014.49 cv
792.828 1013.04 791.648 1011.86 790.19 1011.86 cv
cp
f
798.923 996.429 mo
797.465 996.429 796.284 997.61 796.284 999.068 cv
796.284 1000.52 797.465 1001.71 798.923 1001.71 cv
800.38 1001.71 801.561 1000.52 801.561 999.068 cv
801.561 997.61 800.38 996.429 798.923 996.429 cv
cp
f
807.656 996.429 mo
806.198 996.429 805.016 997.61 805.016 999.068 cv
805.016 1000.52 806.198 1001.71 807.656 1001.71 cv
809.113 1001.71 810.294 1000.52 810.294 999.068 cv
810.294 997.61 809.113 996.429 807.656 996.429 cv
cp
f
839.947 1014.49 mo
839.947 1015.93 841.088 1017.09 842.51 1017.13 cv
842.51 1011.86 li
841.088 1011.9 839.947 1013.06 839.947 1014.49 cv
cp
f
823.102 1006.64 mo
823.102 1005.18 821.92 1004 820.463 1004 cv
819.005 1004 817.824 1005.18 817.824 1006.64 cv
817.824 1008.09 819.005 1009.27 820.463 1009.27 cv
821.92 1009.27 823.102 1008.09 823.102 1006.64 cv
cp
f
761.974 1068.35 mo
761.974 1066.89 760.792 1065.71 759.335 1065.71 cv
757.877 1065.71 756.696 1066.89 756.696 1068.35 cv
756.696 1069.08 756.995 1069.74 757.477 1070.22 cv
761.193 1070.22 li
761.675 1069.74 761.974 1069.08 761.974 1068.35 cv
cp
f
839.947 1045.35 mo
839.947 1046.78 841.088 1047.94 842.51 1047.98 cv
842.51 1042.72 li
841.088 1042.76 839.947 1043.92 839.947 1045.35 cv
cp
f
750.603 1009.27 mo
752.06 1009.27 753.242 1008.09 753.242 1006.64 cv
753.242 1005.18 752.06 1004 750.603 1004 cv
749.145 1004 747.963 1005.18 747.963 1006.64 cv
747.963 1008.09 749.145 1009.27 750.603 1009.27 cv
cp
f
743.888 1014.49 mo
743.888 1015.95 745.07 1017.13 746.528 1017.13 cv
747.985 1017.13 749.166 1015.95 749.166 1014.49 cv
749.166 1013.04 747.985 1011.86 746.528 1011.86 cv
745.07 1011.86 743.888 1013.04 743.888 1014.49 cv
cp
f
755.26 1017.13 mo
756.717 1017.13 757.899 1015.95 757.899 1014.49 cv
757.899 1013.04 756.717 1011.86 755.26 1011.86 cv
753.802 1011.86 752.62 1013.04 752.62 1014.49 cv
752.62 1015.95 753.802 1017.13 755.26 1017.13 cv
cp
f
741.87 1019.42 mo
740.412 1019.42 739.231 1020.61 739.231 1022.06 cv
739.231 1023.52 740.412 1024.7 741.87 1024.7 cv
743.328 1024.7 744.509 1023.52 744.509 1022.06 cv
744.509 1020.61 743.328 1019.42 741.87 1019.42 cv
cp
f
753.242 1022.06 mo
753.242 1020.61 752.06 1019.42 750.603 1019.42 cv
749.145 1019.42 747.963 1020.61 747.963 1022.06 cv
747.963 1023.52 749.145 1024.7 750.603 1024.7 cv
752.06 1024.7 753.242 1023.52 753.242 1022.06 cv
cp
f
746.528 1032.56 mo
747.985 1032.56 749.166 1031.38 749.166 1029.92 cv
749.166 1028.47 747.985 1027.28 746.528 1027.28 cv
745.07 1027.28 743.888 1028.47 743.888 1029.92 cv
743.888 1031.38 745.07 1032.56 746.528 1032.56 cv
cp
f
776.8 1004 mo
775.342 1004 774.161 1005.18 774.161 1006.64 cv
774.161 1008.09 775.342 1009.27 776.8 1009.27 cv
778.257 1009.27 779.439 1008.09 779.439 1006.64 cv
779.439 1005.18 778.257 1004 776.8 1004 cv
cp
f
772.725 1032.56 mo
774.182 1032.56 775.364 1031.38 775.364 1029.92 cv
775.364 1028.47 774.182 1027.28 772.725 1027.28 cv
771.267 1027.28 770.086 1028.47 770.086 1029.92 cv
770.086 1031.38 771.267 1032.56 772.725 1032.56 cv
cp
f
779.439 1022.06 mo
779.439 1020.61 778.257 1019.42 776.8 1019.42 cv
775.342 1019.42 774.161 1020.61 774.161 1022.06 cv
774.161 1023.52 775.342 1024.7 776.8 1024.7 cv
778.257 1024.7 779.439 1023.52 779.439 1022.06 cv
cp
f
763.993 1032.56 mo
765.45 1032.56 766.631 1031.38 766.631 1029.92 cv
766.631 1028.47 765.45 1027.28 763.993 1027.28 cv
762.535 1027.28 761.354 1028.47 761.354 1029.92 cv
761.354 1031.38 762.535 1032.56 763.993 1032.56 cv
cp
f
781.457 1032.56 mo
782.914 1032.56 784.096 1031.38 784.096 1029.92 cv
784.096 1028.47 782.914 1027.28 781.457 1027.28 cv
780 1027.28 778.819 1028.47 778.819 1029.92 cv
778.819 1031.38 780 1032.56 781.457 1032.56 cv
cp
f
785.533 1004 mo
784.076 1004 782.894 1005.18 782.894 1006.64 cv
782.894 1008.09 784.076 1009.27 785.533 1009.27 cv
786.99 1009.27 788.171 1008.09 788.171 1006.64 cv
788.171 1005.18 786.99 1004 785.533 1004 cv
cp
f
759.335 1024.7 mo
760.792 1024.7 761.974 1023.52 761.974 1022.06 cv
761.974 1020.61 760.792 1019.42 759.335 1019.42 cv
757.877 1019.42 756.696 1020.61 756.696 1022.06 cv
756.696 1023.52 757.877 1024.7 759.335 1024.7 cv
cp
f
788.171 1022.06 mo
788.171 1020.61 786.99 1019.42 785.533 1019.42 cv
784.076 1019.42 782.894 1020.61 782.894 1022.06 cv
782.894 1023.52 784.076 1024.7 785.533 1024.7 cv
786.99 1024.7 788.171 1023.52 788.171 1022.06 cv
cp
f
798.923 1032.56 mo
800.38 1032.56 801.561 1031.38 801.561 1029.92 cv
801.561 1028.47 800.38 1027.28 798.923 1027.28 cv
797.465 1027.28 796.284 1028.47 796.284 1029.92 cv
796.284 1031.38 797.465 1032.56 798.923 1032.56 cv
cp
f
796.904 1022.06 mo
796.904 1020.61 795.723 1019.42 794.265 1019.42 cv
792.808 1019.42 791.626 1020.61 791.626 1022.06 cv
791.626 1023.52 792.808 1024.7 794.265 1024.7 cv
795.723 1024.7 796.904 1023.52 796.904 1022.06 cv
cp
f
790.19 1032.56 mo
791.648 1032.56 792.828 1031.38 792.828 1029.92 cv
792.828 1028.47 791.648 1027.28 790.19 1027.28 cv
788.733 1027.28 787.551 1028.47 787.551 1029.92 cv
787.551 1031.38 788.733 1032.56 790.19 1032.56 cv
cp
f
770.706 1022.06 mo
770.706 1020.61 769.525 1019.42 768.068 1019.42 cv
766.61 1019.42 765.429 1020.61 765.429 1022.06 cv
765.429 1023.52 766.61 1024.7 768.068 1024.7 cv
769.525 1024.7 770.706 1023.52 770.706 1022.06 cv
cp
f
781.457 996.429 mo
780 996.429 778.819 997.61 778.819 999.068 cv
778.819 1000.52 780 1001.71 781.457 1001.71 cv
782.914 1001.71 784.096 1000.52 784.096 999.068 cv
784.096 997.61 782.914 996.429 781.457 996.429 cv
cp
f
772.725 1011.86 mo
771.267 1011.86 770.086 1013.04 770.086 1014.49 cv
770.086 1015.95 771.267 1017.13 772.725 1017.13 cv
774.182 1017.13 775.364 1015.95 775.364 1014.49 cv
775.364 1013.04 774.182 1011.86 772.725 1011.86 cv
cp
f
805.636 1022.06 mo
805.636 1020.61 804.455 1019.42 802.998 1019.42 cv
801.54 1019.42 800.359 1020.61 800.359 1022.06 cv
800.359 1023.52 801.54 1024.7 802.998 1024.7 cv
804.455 1024.7 805.636 1023.52 805.636 1022.06 cv
cp
f
781.457 1011.86 mo
780 1011.86 778.819 1013.04 778.819 1014.49 cv
778.819 1015.95 780 1017.13 781.457 1017.13 cv
782.914 1017.13 784.096 1015.95 784.096 1014.49 cv
784.096 1013.04 782.914 1011.86 781.457 1011.86 cv
cp
f
763.993 996.429 mo
762.535 996.429 761.354 997.61 761.354 999.068 cv
761.354 1000.52 762.535 1001.71 763.993 1001.71 cv
765.45 1001.71 766.631 1000.52 766.631 999.068 cv
766.631 997.61 765.45 996.429 763.993 996.429 cv
cp
f
759.335 1004 mo
757.877 1004 756.696 1005.18 756.696 1006.64 cv
756.696 1008.09 757.877 1009.27 759.335 1009.27 cv
760.792 1009.27 761.974 1008.09 761.974 1006.64 cv
761.974 1005.18 760.792 1004 759.335 1004 cv
cp
f
772.725 996.429 mo
771.267 996.429 770.086 997.61 770.086 999.068 cv
770.086 1000.52 771.267 1001.71 772.725 1001.71 cv
774.182 1001.71 775.364 1000.52 775.364 999.068 cv
775.364 997.61 774.182 996.429 772.725 996.429 cv
cp
f
763.993 1011.86 mo
762.535 1011.86 761.354 1013.04 761.354 1014.49 cv
761.354 1015.95 762.535 1017.13 763.993 1017.13 cv
765.45 1017.13 766.631 1015.95 766.631 1014.49 cv
766.631 1013.04 765.45 1011.86 763.993 1011.86 cv
cp
f
768.068 1004 mo
766.61 1004 765.429 1005.18 765.429 1006.64 cv
765.429 1008.09 766.61 1009.27 768.068 1009.27 cv
769.525 1009.27 770.706 1008.09 770.706 1006.64 cv
770.706 1005.18 769.525 1004 768.068 1004 cv
cp
f
807.656 981.002 mo
806.198 981.002 805.016 982.183 805.016 983.64 cv
805.016 985.097 806.198 986.279 807.656 986.279 cv
809.113 986.279 810.294 985.097 810.294 983.64 cv
810.294 982.183 809.113 981.002 807.656 981.002 cv
cp
f
816.388 1063.42 mo
817.845 1063.42 819.027 1062.23 819.027 1060.78 cv
819.027 1059.32 817.845 1058.14 816.388 1058.14 cv
814.93 1058.14 813.748 1059.32 813.748 1060.78 cv
813.748 1062.23 814.93 1063.42 816.388 1063.42 cv
cp
f
814.37 1052.92 mo
814.37 1051.46 813.188 1050.28 811.731 1050.28 cv
810.273 1050.28 809.091 1051.46 809.091 1052.92 cv
809.091 1054.38 810.273 1055.56 811.731 1055.56 cv
813.188 1055.56 814.37 1054.38 814.37 1052.92 cv
cp
f
807.656 1063.42 mo
809.113 1063.42 810.294 1062.23 810.294 1060.78 cv
810.294 1059.32 809.113 1058.14 807.656 1058.14 cv
806.198 1058.14 805.016 1059.32 805.016 1060.78 cv
805.016 1062.23 806.198 1063.42 807.656 1063.42 cv
cp
f
798.923 1063.42 mo
800.38 1063.42 801.561 1062.23 801.561 1060.78 cv
801.561 1059.32 800.38 1058.14 798.923 1058.14 cv
797.465 1058.14 796.284 1059.32 796.284 1060.78 cv
796.284 1062.23 797.465 1063.42 798.923 1063.42 cv
cp
f
805.636 1052.92 mo
805.636 1051.46 804.455 1050.28 802.998 1050.28 cv
801.54 1050.28 800.359 1051.46 800.359 1052.92 cv
800.359 1054.38 801.54 1055.56 802.998 1055.56 cv
804.455 1055.56 805.636 1054.38 805.636 1052.92 cv
cp
f
823.102 1052.92 mo
823.102 1051.46 821.92 1050.28 820.463 1050.28 cv
819.005 1050.28 817.824 1051.46 817.824 1052.92 cv
817.824 1054.38 819.005 1055.56 820.463 1055.56 cv
821.92 1055.56 823.102 1054.38 823.102 1052.92 cv
cp
f
833.853 1063.42 mo
835.31 1063.42 836.492 1062.23 836.492 1060.78 cv
836.492 1059.32 835.31 1058.14 833.853 1058.14 cv
832.395 1058.14 831.214 1059.32 831.214 1060.78 cv
831.214 1062.23 832.395 1063.42 833.853 1063.42 cv
cp
f
829.196 1055.56 mo
830.653 1055.56 831.834 1054.38 831.834 1052.92 cv
831.834 1051.46 830.653 1050.28 829.196 1050.28 cv
827.738 1050.28 826.556 1051.46 826.556 1052.92 cv
826.556 1054.38 827.738 1055.56 829.196 1055.56 cv
cp
f
796.904 1052.92 mo
796.904 1051.46 795.723 1050.28 794.265 1050.28 cv
792.808 1050.28 791.626 1051.46 791.626 1052.92 cv
791.626 1054.38 792.808 1055.56 794.265 1055.56 cv
795.723 1055.56 796.904 1054.38 796.904 1052.92 cv
cp
f
825.12 1047.99 mo
826.578 1047.99 827.759 1046.81 827.759 1045.35 cv
827.759 1043.89 826.578 1042.71 825.12 1042.71 cv
823.662 1042.71 822.481 1043.89 822.481 1045.35 cv
822.481 1046.81 823.662 1047.99 825.12 1047.99 cv
cp
f
790.19 1063.42 mo
791.648 1063.42 792.828 1062.23 792.828 1060.78 cv
792.828 1059.32 791.648 1058.14 790.19 1058.14 cv
788.733 1058.14 787.551 1059.32 787.551 1060.78 cv
787.551 1062.23 788.733 1063.42 790.19 1063.42 cv
cp
f
763.993 1063.42 mo
765.45 1063.42 766.631 1062.23 766.631 1060.78 cv
766.631 1059.32 765.45 1058.14 763.993 1058.14 cv
762.535 1058.14 761.354 1059.32 761.354 1060.78 cv
761.354 1062.23 762.535 1063.42 763.993 1063.42 cv
cp
f
759.335 1055.56 mo
760.792 1055.56 761.974 1054.38 761.974 1052.92 cv
761.974 1051.46 760.792 1050.28 759.335 1050.28 cv
757.877 1050.28 756.696 1051.46 756.696 1052.92 cv
756.696 1054.38 757.877 1055.56 759.335 1055.56 cv
cp
f
770.706 1052.92 mo
770.706 1051.46 769.525 1050.28 768.068 1050.28 cv
766.61 1050.28 765.429 1051.46 765.429 1052.92 cv
765.429 1054.38 766.61 1055.56 768.068 1055.56 cv
769.525 1055.56 770.706 1054.38 770.706 1052.92 cv
cp
f
755.26 1047.99 mo
756.717 1047.99 757.899 1046.81 757.899 1045.35 cv
757.899 1043.89 756.717 1042.71 755.26 1042.71 cv
753.802 1042.71 752.62 1043.89 752.62 1045.35 cv
752.62 1046.81 753.802 1047.99 755.26 1047.99 cv
cp
f
753.242 1052.92 mo
753.242 1051.46 752.06 1050.28 750.603 1050.28 cv
749.145 1050.28 747.963 1051.46 747.963 1052.92 cv
747.963 1054.38 749.145 1055.56 750.603 1055.56 cv
752.06 1055.56 753.242 1054.38 753.242 1052.92 cv
cp
f
779.439 1052.92 mo
779.439 1051.46 778.257 1050.28 776.8 1050.28 cv
775.342 1050.28 774.161 1051.46 774.161 1052.92 cv
774.161 1054.38 775.342 1055.56 776.8 1055.56 cv
778.257 1055.56 779.439 1054.38 779.439 1052.92 cv
cp
f
772.725 1063.42 mo
774.182 1063.42 775.364 1062.23 775.364 1060.78 cv
775.364 1059.32 774.182 1058.14 772.725 1058.14 cv
771.267 1058.14 770.086 1059.32 770.086 1060.78 cv
770.086 1062.23 771.267 1063.42 772.725 1063.42 cv
cp
f
788.171 1052.92 mo
788.171 1051.46 786.99 1050.28 785.533 1050.28 cv
784.076 1050.28 782.894 1051.46 782.894 1052.92 cv
782.894 1054.38 784.076 1055.56 785.533 1055.56 cv
786.99 1055.56 788.171 1054.38 788.171 1052.92 cv
cp
f
781.457 1063.42 mo
782.914 1063.42 784.096 1062.23 784.096 1060.78 cv
784.096 1059.32 782.914 1058.14 781.457 1058.14 cv
780 1058.14 778.819 1059.32 778.819 1060.78 cv
778.819 1062.23 780 1063.42 781.457 1063.42 cv
cp
f
840.567 1052.92 mo
840.567 1051.46 839.385 1050.28 837.928 1050.28 cv
836.47 1050.28 835.289 1051.46 835.289 1052.92 cv
835.289 1054.38 836.47 1055.56 837.928 1055.56 cv
839.385 1055.56 840.567 1054.38 840.567 1052.92 cv
cp
f
746.528 1063.42 mo
747.985 1063.42 749.166 1062.23 749.166 1060.78 cv
749.166 1059.32 747.985 1058.14 746.528 1058.14 cv
745.07 1058.14 743.888 1059.32 743.888 1060.78 cv
743.888 1062.23 745.07 1063.42 746.528 1063.42 cv
cp
f
796.904 1068.35 mo
796.904 1066.89 795.723 1065.71 794.265 1065.71 cv
792.808 1065.71 791.626 1066.89 791.626 1068.35 cv
791.626 1069.08 791.925 1069.74 792.408 1070.22 cv
796.123 1070.22 li
796.605 1069.74 796.904 1069.08 796.904 1068.35 cv
cp
f
770.706 1068.35 mo
770.706 1066.89 769.525 1065.71 768.068 1065.71 cv
766.61 1065.71 765.429 1066.89 765.429 1068.35 cv
765.429 1069.08 765.728 1069.74 766.209 1070.22 cv
769.925 1070.22 li
770.408 1069.74 770.706 1069.08 770.706 1068.35 cv
cp
f
779.439 1068.35 mo
779.439 1066.89 778.257 1065.71 776.8 1065.71 cv
775.342 1065.71 774.161 1066.89 774.161 1068.35 cv
774.161 1069.08 774.46 1069.74 774.942 1070.22 cv
778.658 1070.22 li
779.14 1069.74 779.439 1069.08 779.439 1068.35 cv
cp
f
788.171 1068.35 mo
788.171 1066.89 786.99 1065.71 785.533 1065.71 cv
784.076 1065.71 782.894 1066.89 782.894 1068.35 cv
782.894 1069.08 783.193 1069.74 783.675 1070.22 cv
787.39 1070.22 li
787.872 1069.74 788.171 1069.08 788.171 1068.35 cv
cp
f
814.37 1068.35 mo
814.37 1066.89 813.188 1065.71 811.731 1065.71 cv
810.273 1065.71 809.091 1066.89 809.091 1068.35 cv
809.091 1069.08 809.391 1069.74 809.872 1070.22 cv
813.588 1070.22 li
814.07 1069.74 814.37 1069.08 814.37 1068.35 cv
cp
f
805.636 1068.35 mo
805.636 1066.89 804.455 1065.71 802.998 1065.71 cv
801.54 1065.71 800.359 1066.89 800.359 1068.35 cv
800.359 1069.08 800.658 1069.74 801.14 1070.22 cv
804.856 1070.22 li
805.337 1069.74 805.636 1069.08 805.636 1068.35 cv
cp
f
831.834 1068.35 mo
831.834 1066.89 830.653 1065.71 829.196 1065.71 cv
827.738 1065.71 826.556 1066.89 826.556 1068.35 cv
826.556 1068.94 826.761 1069.48 827.093 1069.93 cv
828.758 1069.64 830.344 1069.13 831.826 1068.43 cv
831.827 1068.4 831.834 1068.37 831.834 1068.35 cv
cp
f
823.102 1068.35 mo
823.102 1066.89 821.92 1065.71 820.463 1065.71 cv
819.005 1065.71 817.824 1066.89 817.824 1068.35 cv
817.824 1069.08 818.123 1069.74 818.605 1070.22 cv
822.321 1070.22 li
822.802 1069.74 823.102 1069.08 823.102 1068.35 cv
cp
f
839.947 1060.78 mo
839.947 1060.84 839.961 1060.9 839.966 1060.97 cv
840.415 1060.2 840.815 1059.4 841.152 1058.57 cv
840.428 1059.04 839.947 1059.85 839.947 1060.78 cv
cp
f
827.759 1060.78 mo
827.759 1059.32 826.578 1058.14 825.12 1058.14 cv
823.662 1058.14 822.481 1059.32 822.481 1060.78 cv
822.481 1062.23 823.662 1063.42 825.12 1063.42 cv
826.578 1063.42 827.759 1062.23 827.759 1060.78 cv
cp
f
739.231 975.781 mo
739.231 977.239 740.412 978.419 741.87 978.419 cv
743.328 978.419 744.509 977.239 744.509 975.781 cv
744.509 974.324 743.328 973.142 741.87 973.142 cv
740.412 973.142 739.231 974.324 739.231 975.781 cv
cp
f
752.62 968.212 mo
752.62 969.67 753.802 970.852 755.26 970.852 cv
756.717 970.852 757.899 969.67 757.899 968.212 cv
757.899 966.755 756.717 965.574 755.26 965.574 cv
753.802 965.574 752.62 966.755 752.62 968.212 cv
cp
f
757.899 1060.78 mo
757.899 1059.32 756.717 1058.14 755.26 1058.14 cv
753.802 1058.14 752.62 1059.32 752.62 1060.78 cv
752.62 1062.23 753.802 1063.42 755.26 1063.42 cv
756.717 1063.42 757.899 1062.23 757.899 1060.78 cv
cp
f
822.481 968.212 mo
822.481 969.67 823.662 970.852 825.12 970.852 cv
826.578 970.852 827.759 969.67 827.759 968.212 cv
827.759 966.755 826.578 965.574 825.12 965.574 cv
823.662 965.574 822.481 966.755 822.481 968.212 cv
cp
f
835.289 975.781 mo
835.289 977.239 836.47 978.419 837.928 978.419 cv
839.385 978.419 840.567 977.239 840.567 975.781 cv
840.567 974.324 839.385 973.142 837.928 973.142 cv
836.47 973.142 835.289 974.324 835.289 975.781 cv
cp
f
832.016 966.323 mo
831.523 966.802 831.214 967.47 831.214 968.212 cv
831.214 969.67 832.395 970.852 833.853 970.852 cv
834.961 970.852 835.907 970.167 836.297 969.198 cv
835.016 968.051 833.579 967.083 832.016 966.323 cv
cp
f
753.242 1068.35 mo
753.242 1066.89 752.06 1065.71 750.603 1065.71 cv
749.145 1065.71 747.963 1066.89 747.963 1068.35 cv
747.963 1068.47 747.984 1068.59 748 1068.71 cv
749.459 1069.34 751.019 1069.76 752.642 1070 cv
753.011 1069.55 753.242 1068.98 753.242 1068.35 cv
cp
f
736.731 986.052 mo
737.057 986.196 737.415 986.279 737.795 986.279 cv
739.252 986.279 740.434 985.097 740.434 983.64 cv
740.434 982.183 739.252 981.002 737.795 981.002 cv
737.452 981.002 737.126 981.072 736.826 981.191 cv
736.764 981.802 736.731 982.422 736.731 983.05 cv
736.731 986.052 li
cp
f
746.528 970.852 mo
747.985 970.852 749.166 969.67 749.166 968.212 cv
749.166 967.271 748.669 966.451 747.928 965.984 cv
746.48 966.614 745.135 967.429 743.906 968.388 cv
743.998 969.762 745.13 970.852 746.528 970.852 cv
cp
f
839.947 983.64 mo
839.947 985.072 841.088 986.231 842.51 986.272 cv
842.51 983.05 li
842.51 982.364 842.467 981.688 842.395 981.02 cv
841.028 981.12 839.947 982.248 839.947 983.64 cv
cp
f
772.725 965.574 mo
771.267 965.574 770.086 966.755 770.086 968.212 cv
770.086 969.67 771.267 970.852 772.725 970.852 cv
774.182 970.852 775.364 969.67 775.364 968.212 cv
775.364 966.755 774.182 965.574 772.725 965.574 cv
cp
f
842.51 1032.55 mo
842.51 1027.29 li
841.088 1027.33 839.947 1028.49 839.947 1029.92 cv
839.947 1031.35 841.088 1032.51 842.51 1032.55 cv
cp
f
837.928 988.57 mo
836.47 988.57 835.289 989.751 835.289 991.209 cv
835.289 992.666 836.47 993.847 837.928 993.847 cv
839.385 993.847 840.567 992.666 840.567 991.209 cv
840.567 989.751 839.385 988.57 837.928 988.57 cv
cp
f
839.947 999.068 mo
839.947 1000.5 841.088 1001.66 842.51 1001.7 cv
842.51 996.436 li
841.088 996.477 839.947 997.636 839.947 999.068 cv
cp
f
833.853 1047.99 mo
835.31 1047.99 836.492 1046.81 836.492 1045.35 cv
836.492 1043.89 835.31 1042.71 833.853 1042.71 cv
832.395 1042.71 831.214 1043.89 831.214 1045.35 cv
831.214 1046.81 832.395 1047.99 833.853 1047.99 cv
cp
f
840.567 1037.49 mo
840.567 1036.03 839.385 1034.85 837.928 1034.85 cv
836.47 1034.85 835.289 1036.03 835.289 1037.49 cv
835.289 1038.95 836.47 1040.13 837.928 1040.13 cv
839.385 1040.13 840.567 1038.95 840.567 1037.49 cv
cp
f
833.853 981.002 mo
832.395 981.002 831.214 982.183 831.214 983.64 cv
831.214 985.097 832.395 986.279 833.853 986.279 cv
835.31 986.279 836.492 985.097 836.492 983.64 cv
836.492 982.183 835.31 981.002 833.853 981.002 cv
cp
f
829.196 1040.13 mo
830.653 1040.13 831.834 1038.95 831.834 1037.49 cv
831.834 1036.03 830.653 1034.85 829.196 1034.85 cv
827.738 1034.85 826.556 1036.03 826.556 1037.49 cv
826.556 1038.95 827.738 1040.13 829.196 1040.13 cv
cp
f
820.463 973.142 mo
819.005 973.142 817.824 974.324 817.824 975.781 cv
817.824 977.239 819.005 978.419 820.463 978.419 cv
821.92 978.419 823.102 977.239 823.102 975.781 cv
823.102 974.324 821.92 973.142 820.463 973.142 cv
cp
f
822.481 983.64 mo
822.481 985.097 823.662 986.279 825.12 986.279 cv
826.578 986.279 827.759 985.097 827.759 983.64 cv
827.759 982.183 826.578 981.002 825.12 981.002 cv
823.662 981.002 822.481 982.183 822.481 983.64 cv
cp
f
829.196 973.142 mo
827.738 973.142 826.556 974.324 826.556 975.781 cv
826.556 977.239 827.738 978.419 829.196 978.419 cv
830.653 978.419 831.834 977.239 831.834 975.781 cv
831.834 974.324 830.653 973.142 829.196 973.142 cv
cp
f
744.509 1052.92 mo
744.509 1051.46 743.328 1050.28 741.87 1050.28 cv
740.412 1050.28 739.231 1051.46 739.231 1052.92 cv
739.231 1054.38 740.412 1055.56 741.87 1055.56 cv
743.328 1055.56 744.509 1054.38 744.509 1052.92 cv
cp
f
798.923 1047.99 mo
800.38 1047.99 801.561 1046.81 801.561 1045.35 cv
801.561 1043.89 800.38 1042.71 798.923 1042.71 cv
797.465 1042.71 796.284 1043.89 796.284 1045.35 cv
796.284 1046.81 797.465 1047.99 798.923 1047.99 cv
cp
f
796.904 1037.49 mo
796.904 1036.03 795.723 1034.85 794.265 1034.85 cv
792.808 1034.85 791.626 1036.03 791.626 1037.49 cv
791.626 1038.95 792.808 1040.13 794.265 1040.13 cv
795.723 1040.13 796.904 1038.95 796.904 1037.49 cv
cp
f
805.636 1037.49 mo
805.636 1036.03 804.455 1034.85 802.998 1034.85 cv
801.54 1034.85 800.359 1036.03 800.359 1037.49 cv
800.359 1038.95 801.54 1040.13 802.998 1040.13 cv
804.455 1040.13 805.636 1038.95 805.636 1037.49 cv
cp
f
790.19 1047.99 mo
791.648 1047.99 792.828 1046.81 792.828 1045.35 cv
792.828 1043.89 791.648 1042.71 790.19 1042.71 cv
788.733 1042.71 787.551 1043.89 787.551 1045.35 cv
787.551 1046.81 788.733 1047.99 790.19 1047.99 cv
cp
f
788.171 1037.49 mo
788.171 1036.03 786.99 1034.85 785.533 1034.85 cv
784.076 1034.85 782.894 1036.03 782.894 1037.49 cv
782.894 1038.95 784.076 1040.13 785.533 1040.13 cv
786.99 1040.13 788.171 1038.95 788.171 1037.49 cv
cp
f
823.102 1037.49 mo
823.102 1036.03 821.92 1034.85 820.463 1034.85 cv
819.005 1034.85 817.824 1036.03 817.824 1037.49 cv
817.824 1038.95 819.005 1040.13 820.463 1040.13 cv
821.92 1040.13 823.102 1038.95 823.102 1037.49 cv
cp
f
807.656 1047.99 mo
809.113 1047.99 810.294 1046.81 810.294 1045.35 cv
810.294 1043.89 809.113 1042.71 807.656 1042.71 cv
806.198 1042.71 805.016 1043.89 805.016 1045.35 cv
805.016 1046.81 806.198 1047.99 807.656 1047.99 cv
cp
f
825.12 1032.56 mo
826.578 1032.56 827.759 1031.38 827.759 1029.92 cv
827.759 1028.47 826.578 1027.28 825.12 1027.28 cv
823.662 1027.28 822.481 1028.47 822.481 1029.92 cv
822.481 1031.38 823.662 1032.56 825.12 1032.56 cv
cp
f
816.388 1047.99 mo
817.845 1047.99 819.027 1046.81 819.027 1045.35 cv
819.027 1043.89 817.845 1042.71 816.388 1042.71 cv
814.93 1042.71 813.748 1043.89 813.748 1045.35 cv
813.748 1046.81 814.93 1047.99 816.388 1047.99 cv
cp
f
816.388 965.574 mo
814.93 965.574 813.748 966.755 813.748 968.212 cv
813.748 969.67 814.93 970.852 816.388 970.852 cv
817.845 970.852 819.027 969.67 819.027 968.212 cv
819.027 966.755 817.845 965.574 816.388 965.574 cv
cp
f
814.37 1037.49 mo
814.37 1036.03 813.188 1034.85 811.731 1034.85 cv
810.273 1034.85 809.091 1036.03 809.091 1037.49 cv
809.091 1038.95 810.273 1040.13 811.731 1040.13 cv
813.188 1040.13 814.37 1038.95 814.37 1037.49 cv
cp
f
750.603 973.142 mo
749.145 973.142 747.963 974.324 747.963 975.781 cv
747.963 977.239 749.145 978.419 750.603 978.419 cv
752.06 978.419 753.242 977.239 753.242 975.781 cv
753.242 974.324 752.06 973.142 750.603 973.142 cv
cp
f
768.068 973.142 mo
766.61 973.142 765.429 974.324 765.429 975.781 cv
765.429 977.239 766.61 978.419 768.068 978.419 cv
769.525 978.419 770.706 977.239 770.706 975.781 cv
770.706 974.324 769.525 973.142 768.068 973.142 cv
cp
f
752.62 983.64 mo
752.62 985.097 753.802 986.279 755.26 986.279 cv
756.717 986.279 757.899 985.097 757.899 983.64 cv
757.899 982.183 756.717 981.002 755.26 981.002 cv
753.802 981.002 752.62 982.183 752.62 983.64 cv
cp
f
763.993 965.574 mo
762.535 965.574 761.354 966.755 761.354 968.212 cv
761.354 969.67 762.535 970.852 763.993 970.852 cv
765.45 970.852 766.631 969.67 766.631 968.212 cv
766.631 966.755 765.45 965.574 763.993 965.574 cv
cp
f
759.335 973.142 mo
757.877 973.142 756.696 974.324 756.696 975.781 cv
756.696 977.239 757.877 978.419 759.335 978.419 cv
760.792 978.419 761.974 977.239 761.974 975.781 cv
761.974 974.324 760.792 973.142 759.335 973.142 cv
cp
f
743.888 983.64 mo
743.888 985.097 745.07 986.279 746.528 986.279 cv
747.985 986.279 749.166 985.097 749.166 983.64 cv
749.166 982.183 747.985 981.002 746.528 981.002 cv
745.07 981.002 743.888 982.183 743.888 983.64 cv
cp
f
737.938 1058.15 mo
738.476 1059.58 739.172 1060.93 740.028 1062.17 cv
740.281 1061.77 740.434 1061.29 740.434 1060.78 cv
740.434 1059.37 739.328 1058.23 737.938 1058.15 cv
cp
f
741.87 988.57 mo
740.412 988.57 739.231 989.751 739.231 991.209 cv
739.231 992.666 740.412 993.847 741.87 993.847 cv
743.328 993.847 744.509 992.666 744.509 991.209 cv
744.509 989.751 743.328 988.57 741.87 988.57 cv
cp
f
811.731 973.142 mo
810.273 973.142 809.091 974.324 809.091 975.781 cv
809.091 977.239 810.273 978.419 811.731 978.419 cv
813.188 978.419 814.37 977.239 814.37 975.781 cv
814.37 974.324 813.188 973.142 811.731 973.142 cv
cp
f
736.731 996.656 mo
736.731 1001.48 li
737.057 1001.62 737.415 1001.71 737.795 1001.71 cv
739.252 1001.71 740.434 1000.52 740.434 999.068 cv
740.434 997.61 739.252 996.429 737.795 996.429 cv
737.415 996.429 737.057 996.512 736.731 996.656 cv
cp
f
740.434 1045.35 mo
740.434 1043.89 739.252 1042.71 737.795 1042.71 cv
737.415 1042.71 737.057 1042.79 736.731 1042.94 cv
736.731 1047.76 li
737.057 1047.91 737.415 1047.99 737.795 1047.99 cv
739.252 1047.99 740.434 1046.81 740.434 1045.35 cv
cp
f
781.457 1047.99 mo
782.914 1047.99 784.096 1046.81 784.096 1045.35 cv
784.096 1043.89 782.914 1042.71 781.457 1042.71 cv
780 1042.71 778.819 1043.89 778.819 1045.35 cv
778.819 1046.81 780 1047.99 781.457 1047.99 cv
cp
f
802.998 973.142 mo
801.54 973.142 800.359 974.324 800.359 975.781 cv
800.359 977.239 801.54 978.419 802.998 978.419 cv
804.455 978.419 805.636 977.239 805.636 975.781 cv
805.636 974.324 804.455 973.142 802.998 973.142 cv
cp
f
798.923 965.574 mo
797.465 965.574 796.284 966.755 796.284 968.212 cv
796.284 969.67 797.465 970.852 798.923 970.852 cv
800.38 970.852 801.561 969.67 801.561 968.212 cv
801.561 966.755 800.38 965.574 798.923 965.574 cv
cp
f
807.656 965.574 mo
806.198 965.574 805.016 966.755 805.016 968.212 cv
805.016 969.67 806.198 970.852 807.656 970.852 cv
809.113 970.852 810.294 969.67 810.294 968.212 cv
810.294 966.755 809.113 965.574 807.656 965.574 cv
cp
f
794.265 973.142 mo
792.808 973.142 791.626 974.324 791.626 975.781 cv
791.626 977.239 792.808 978.419 794.265 978.419 cv
795.723 978.419 796.904 977.239 796.904 975.781 cv
796.904 974.324 795.723 973.142 794.265 973.142 cv
cp
f
790.19 965.574 mo
788.733 965.574 787.551 966.755 787.551 968.212 cv
787.551 969.67 788.733 970.852 790.19 970.852 cv
791.648 970.852 792.828 969.67 792.828 968.212 cv
792.828 966.755 791.648 965.574 790.19 965.574 cv
cp
f
781.457 965.574 mo
780 965.574 778.819 966.755 778.819 968.212 cv
778.819 969.67 780 970.852 781.457 970.852 cv
782.914 970.852 784.096 969.67 784.096 968.212 cv
784.096 966.755 782.914 965.574 781.457 965.574 cv
cp
f
776.8 973.142 mo
775.342 973.142 774.161 974.324 774.161 975.781 cv
774.161 977.239 775.342 978.419 776.8 978.419 cv
778.257 978.419 779.439 977.239 779.439 975.781 cv
779.439 974.324 778.257 973.142 776.8 973.142 cv
cp
f
785.533 973.142 mo
784.076 973.142 782.894 974.324 782.894 975.781 cv
782.894 977.239 784.076 978.419 785.533 978.419 cv
786.99 978.419 788.171 977.239 788.171 975.781 cv
788.171 974.324 786.99 973.142 785.533 973.142 cv
cp
f
815.02 1015.8 mo
815.02 1029.22 804.135 1040.11 790.707 1040.11 cv
777.28 1040.11 766.395 1029.22 766.395 1015.8 cv
766.395 1002.37 777.28 991.484 790.707 991.484 cv
804.135 991.484 815.02 1002.37 815.02 1015.8 cv
cp
f
754.667 963.746 mo
745.462 963.746 737.973 971.235 737.973 980.44 cv
737.973 1051.15 li
737.973 1060.36 745.462 1067.85 754.667 1067.85 cv
825.379 1067.85 li
834.585 1067.85 842.075 1060.36 842.075 1051.15 cv
842.075 980.44 li
842.075 971.235 834.585 963.746 825.379 963.746 cv
754.667 963.746 li
cp
825.379 1072.85 mo
754.667 1072.85 li
742.705 1072.85 732.973 1063.11 732.973 1051.15 cv
732.973 980.44 li
732.973 968.478 742.705 958.746 754.667 958.746 cv
825.379 958.746 li
837.342 958.746 847.075 968.478 847.075 980.44 cv
847.075 1051.15 li
847.075 1063.11 837.342 1072.85 825.379 1072.85 cv
cp
.7037 .661494 .6318 .686549 cmyk
f
837.98 1051.15 mo
837.98 1058.03 832.382 1063.63 825.503 1063.63 cv
754.791 1063.63 li
747.912 1063.63 742.315 1058.03 742.315 1051.15 cv
742.315 980.44 li
742.315 973.561 747.912 967.963 754.791 967.963 cv
825.503 967.963 li
832.382 967.963 837.98 973.561 837.98 980.44 cv
837.98 1051.15 li
cp
825.503 961.246 mo
754.791 961.246 li
744.191 961.246 735.597 969.839 735.597 980.44 cv
735.597 1051.15 li
735.597 1061.75 744.191 1070.35 754.791 1070.35 cv
825.503 1070.35 li
836.105 1070.35 844.699 1061.75 844.699 1051.15 cv
844.699 980.44 li
844.699 969.839 836.105 961.246 825.503 961.246 cv
cp
f
790.82 993.984 mo
778.792 993.984 769.007 1003.77 769.007 1015.8 cv
769.007 1027.82 778.792 1037.61 790.82 1037.61 cv
802.847 1037.61 812.632 1027.82 812.632 1015.8 cv
812.632 1003.77 802.847 993.984 790.82 993.984 cv
cp
790.82 1042.61 mo
776.036 1042.61 764.007 1030.58 764.007 1015.8 cv
764.007 1001.01 776.036 988.984 790.82 988.984 cv
805.604 988.984 817.632 1001.01 817.632 1015.8 cv
817.632 1030.58 805.604 1042.61 790.82 1042.61 cv
cp
f
777.447 1027.49 mo
775.984 1027.49 774.578 1027.29 773.278 1026.92 cv
767.536 1025.28 763.897 1020.41 764.007 1014.5 cv
769.007 1014.6 li
768.938 1018.28 771.047 1021.09 774.65 1022.11 cv
779.222 1023.42 785.755 1021.52 790.042 1014.32 cv
794.361 1007.07 801.13 1003.9 808.14 1005.83 cv
813.511 1007.31 817.41 1011.47 817.41 1015.74 cv
812.41 1015.74 li
812.41 1014.02 810.161 1011.57 806.813 1010.65 cv
804.552 1010.03 798.803 1009.38 794.337 1016.88 cv
789.836 1024.44 783.202 1027.49 777.447 1027.49 cv
cp
f
815.132 1017.14 mo
815.132 1030.57 804.246 1041.45 790.82 1041.45 cv
777.392 1041.45 766.507 1030.57 766.507 1017.14 cv
766.507 1016.05 766.579 1014.97 766.719 1013.92 cv
766.729 1013.85 li
765.374 1025.66 783.612 1029.33 792.19 1014.93 cv
800.414 1001.12 814.91 1008.52 814.91 1015.06 cv
815.132 1017.14 li
cp
f
842.51 1086.46 mo
739.231 1086.46 li
739.231 1081.46 li
842.51 1081.46 li
842.51 1086.46 li
cp
f
842.51 1096.59 mo
739.231 1096.59 li
739.231 1091.59 li
842.51 1091.59 li
842.51 1096.59 li
cp
f
842.51 939.854 mo
739.231 939.854 li
739.231 934.854 li
842.51 934.854 li
842.51 939.854 li
cp
0 0 0 0 cmyk
f
842.51 949.979 mo
739.231 949.979 li
739.231 944.979 li
842.51 944.979 li
842.51 949.979 li
cp
f
575.658 460.1 mo
496.411 460.1 li
479.158 473.415 li
461.531 460.1 li
425.613 460.1 li
425.613 447.425 li
575.658 447.425 li
575.658 460.1 li
cp
f
566.817 470.105 mo
565.042 471.513 563.51 472.728 560.343 472.728 cv
557.177 472.728 555.645 471.513 553.87 470.105 cv
551.899 468.542 549.665 466.771 545.318 466.771 cv
540.973 466.771 538.739 468.542 536.77 470.106 cv
534.996 471.513 533.464 472.728 530.301 472.728 cv
527.137 472.728 525.605 471.513 523.831 470.106 cv
521.934 468.6 519.773 466.918 515.737 466.794 cv
515.737 466.771 li
515.656 466.771 515.588 466.781 515.509 466.782 cv
515.429 466.781 515.362 466.771 515.281 466.771 cv
510.937 466.771 508.703 468.542 506.734 470.106 cv
505.004 471.478 503.494 472.658 500.488 472.717 cv
497.479 472.658 495.967 471.478 494.238 470.105 cv
492.266 468.542 490.033 466.771 485.685 466.771 cv
485.607 466.771 485.541 466.781 485.465 466.782 cv
485.389 466.781 485.324 466.771 485.245 466.771 cv
485.245 466.793 li
481.2 466.913 479.036 468.598 477.137 470.106 cv
475.364 471.513 473.831 472.728 470.668 472.728 cv
467.504 472.728 465.972 471.513 464.199 470.106 cv
462.228 468.542 459.995 466.771 455.648 466.771 cv
451.304 466.771 449.071 468.542 447.101 470.106 cv
445.328 471.513 443.795 472.728 440.632 472.728 cv
437.468 472.728 435.937 471.513 434.163 470.106 cv
432.193 468.542 429.959 466.771 425.613 466.771 cv
425.613 469.75 li
428.777 469.75 430.31 470.964 432.083 472.371 cv
434.054 473.935 436.287 475.707 440.632 475.707 cv
444.978 475.707 447.211 473.934 449.181 472.371 cv
450.954 470.964 452.486 469.75 455.648 469.75 cv
458.812 469.75 460.345 470.964 462.118 472.371 cv
464.088 473.935 466.323 475.707 470.668 475.707 cv
475.014 475.707 477.247 473.935 479.217 472.371 cv
480.947 470.999 482.457 469.818 485.465 469.76 cv
488.474 469.818 489.987 470.999 491.716 472.371 cv
493.687 473.935 495.92 475.707 500.265 475.707 cv
500.344 475.707 500.411 475.696 500.488 475.695 cv
500.566 475.696 500.632 475.707 500.71 475.707 cv
505.058 475.707 507.292 473.935 509.264 472.371 cv
510.994 471 512.504 469.82 515.509 469.761 cv
518.512 469.82 520.023 471 521.751 472.371 cv
523.722 473.935 525.955 475.707 530.301 475.707 cv
534.647 475.707 536.88 473.935 538.85 472.371 cv
540.623 470.964 542.155 469.75 545.318 469.75 cv
548.483 469.75 550.016 470.964 551.79 472.371 cv
553.762 473.935 555.996 475.707 560.343 475.707 cv
564.691 475.707 566.925 473.935 568.897 472.371 cv
570.672 470.964 572.204 469.75 575.37 469.75 cv
575.37 466.771 li
571.022 466.771 568.788 468.542 566.817 470.105 cv
cp
560.343 481.167 mo
557.177 481.167 555.645 479.952 553.87 478.544 cv
551.899 476.981 549.665 475.209 545.318 475.209 cv
540.973 475.209 538.739 476.981 536.77 478.545 cv
534.996 479.952 533.464 481.167 530.301 481.167 cv
527.137 481.167 525.605 479.952 523.831 478.545 cv
521.934 477.039 519.773 475.357 515.737 475.233 cv
515.737 475.209 li
515.656 475.209 515.588 475.22 515.509 475.221 cv
515.429 475.22 515.362 475.209 515.281 475.209 cv
510.937 475.209 508.703 476.981 506.734 478.545 cv
505.004 479.917 503.494 481.097 500.488 481.155 cv
497.479 481.097 495.967 479.917 494.238 478.544 cv
492.266 476.981 490.033 475.209 485.685 475.209 cv
485.607 475.209 485.541 475.219 485.465 475.22 cv
485.389 475.219 485.324 475.209 485.245 475.209 cv
485.245 475.232 li
481.2 475.352 479.036 477.037 477.137 478.545 cv
475.364 479.952 473.831 481.167 470.668 481.167 cv
467.504 481.167 465.972 479.952 464.199 478.545 cv
462.228 476.981 459.995 475.209 455.648 475.209 cv
451.304 475.209 449.071 476.981 447.101 478.545 cv
445.328 479.952 443.795 481.167 440.632 481.167 cv
437.468 481.167 435.937 479.952 434.163 478.545 cv
432.193 476.981 429.959 475.209 425.613 475.209 cv
425.613 478.188 li
428.777 478.188 430.31 479.403 432.083 480.81 cv
434.054 482.374 436.287 484.145 440.632 484.145 cv
444.978 484.145 447.211 482.373 449.181 480.81 cv
450.954 479.403 452.486 478.188 455.648 478.188 cv
458.812 478.188 460.345 479.403 462.118 480.81 cv
464.088 482.374 466.323 484.145 470.668 484.145 cv
475.014 484.145 477.247 482.374 479.217 480.81 cv
480.947 479.438 482.457 478.256 485.465 478.199 cv
488.474 478.256 489.987 479.438 491.716 480.81 cv
493.687 482.374 495.92 484.145 500.265 484.145 cv
500.344 484.145 500.411 484.135 500.488 484.134 cv
500.566 484.135 500.632 484.145 500.71 484.145 cv
505.058 484.145 507.292 482.374 509.264 480.81 cv
510.994 479.439 512.504 478.259 515.509 478.199 cv
518.512 478.259 520.023 479.439 521.751 480.81 cv
523.722 482.374 525.955 484.145 530.301 484.145 cv
534.647 484.145 536.88 482.374 538.85 480.81 cv
540.623 479.403 542.155 478.188 545.318 478.188 cv
548.483 478.188 550.016 479.403 551.79 480.81 cv
553.762 482.374 555.996 484.145 560.343 484.145 cv
564.691 484.145 566.925 482.374 568.897 480.81 cv
570.672 479.403 572.204 478.188 575.37 478.188 cv
575.37 475.209 li
571.022 475.209 568.788 476.981 566.817 478.544 cv
565.042 479.952 563.51 481.167 560.343 481.167 cv
cp
f
560.343 492.228 mo
555.996 492.228 553.762 490.456 551.79 488.892 cv
550.016 487.485 548.483 486.27 545.318 486.27 cv
542.155 486.27 540.623 487.485 538.85 488.892 cv
536.88 490.456 534.647 492.228 530.301 492.228 cv
525.955 492.228 523.721 490.456 521.75 488.892 cv
520.023 487.521 518.512 486.341 515.509 486.281 cv
512.504 486.341 510.994 487.521 509.264 488.892 cv
507.292 490.456 505.058 492.228 500.71 492.228 cv
500.632 492.228 500.565 492.217 500.488 492.216 cv
500.411 492.217 500.344 492.228 500.265 492.228 cv
495.92 492.228 493.687 490.456 491.716 488.892 cv
489.987 487.52 488.474 486.339 485.465 486.281 cv
482.457 486.339 480.947 487.52 479.217 488.892 cv
477.247 490.456 475.013 492.228 470.668 492.228 cv
466.323 492.228 464.088 490.456 462.118 488.892 cv
460.344 487.485 458.812 486.27 455.648 486.27 cv
452.486 486.27 450.954 487.485 449.181 488.892 cv
447.211 490.455 444.978 492.228 440.632 492.228 cv
436.287 492.228 434.054 490.456 432.083 488.892 cv
430.309 487.485 428.777 486.27 425.613 486.27 cv
425.548 502.913 li
425.536 506.029 428.058 508.561 431.173 508.561 cv
569.744 508.561 li
572.851 508.561 575.37 506.043 575.37 502.936 cv
575.37 486.27 li
572.204 486.27 570.671 487.485 568.897 488.892 cv
566.925 490.456 564.691 492.228 560.343 492.228 cv
cp
.7037 .661494 .6318 .686549 cmyk
f
438.267 441.803 mo
563.641 441.803 li
502.687 372.778 li
438.267 441.803 li
cp
574.727 446.803 mo
426.761 446.803 li
502.788 365.341 li
574.727 446.803 li
cp
f
469.629 427.492 mo
474.907 431.055 li
476.797 428.257 li
471.52 424.694 li
469.629 427.492 li
cp
f
464.745 417.315 mo
461.182 422.592 li
463.98 424.48 li
467.542 419.202 li
464.745 417.315 li
cp
f
481.497 439.254 mo
485.06 433.977 li
482.262 432.089 li
478.7 437.366 li
481.497 439.254 li
cp
f
481.497 394.933 mo
481.556 394.845 li
481.484 394.923 li
481.497 394.933 li
cp
f
482.262 402.541 mo
478.7 407.818 li
481.497 409.706 li
485.06 404.428 li
482.262 402.541 li
cp
f
471.52 409.92 mo
469.629 412.717 li
474.907 416.281 li
476.797 413.483 li
471.52 409.92 li
cp
f
454 439.468 mo
452.113 442.266 li
457.129 445.652 li
457.509 445.652 li
459.278 443.03 li
454 439.468 li
cp
f
471.518 439.468 mo
469.63 442.266 li
474.647 445.652 li
475.027 445.652 li
476.796 443.03 li
471.518 439.468 li
cp
f
463.98 439.254 mo
467.542 433.977 li
464.745 432.089 li
461.182 437.366 li
463.98 439.254 li
cp
f
457.389 431.055 mo
459.279 428.257 li
454.001 424.694 li
452.112 427.492 li
457.389 431.055 li
cp
f
446.462 439.254 mo
450.024 433.977 li
447.227 432.089 li
443.664 437.366 li
446.462 439.254 li
cp
f
499.78 387.766 mo
496.217 393.045 li
499.014 394.933 li
502.578 389.654 li
499.78 387.766 li
cp
f
499.014 439.255 mo
502.578 433.978 li
499.78 432.088 li
496.217 437.365 li
499.014 439.255 li
cp
f
499.78 417.314 mo
496.217 422.591 li
499.014 424.481 li
502.578 419.204 li
499.78 417.314 li
cp
f
499.78 402.54 mo
496.217 407.817 li
499.014 409.707 li
502.578 404.429 li
499.78 402.54 li
cp
f
499.014 380.16 mo
502.578 374.882 li
501.112 373.892 li
496.713 378.605 li
499.014 380.16 li
cp
f
438.585 440.888 mo
436.254 443.386 li
439.612 445.652 li
439.992 445.652 li
441.76 443.03 li
438.585 440.888 li
cp
f
494.314 398.709 mo
489.036 395.147 li
487.149 397.944 li
492.426 401.506 li
494.314 398.709 li
cp
f
482.262 417.315 mo
478.7 422.592 li
481.497 424.48 li
485.06 419.202 li
482.262 417.315 li
cp
0 0 0 0 cmyk
f
494.314 383.935 mo
492.734 382.869 li
490.403 385.367 li
492.426 386.733 li
494.314 383.935 li
cp
.7037 .661494 .6318 .686549 cmyk
f
489.037 409.92 mo
487.148 412.717 li
492.425 416.281 li
494.315 413.483 li
489.037 409.92 li
cp
f
487.148 427.492 mo
492.425 431.055 li
494.315 428.257 li
489.037 424.694 li
487.148 427.492 li
cp
0 0 0 0 cmyk
f
489.036 439.468 mo
487.149 442.266 li
492.165 445.652 li
492.544 445.652 li
494.314 443.03 li
489.036 439.468 li
cp
.7037 .661494 .6318 .686549 cmyk
f
511.831 383.935 mo
506.554 380.373 li
504.666 383.17 li
509.944 386.733 li
511.831 383.935 li
cp
f
509.943 416.281 mo
511.832 413.483 li
506.555 409.92 li
504.665 412.717 li
509.943 416.281 li
cp
0 0 0 0 cmyk
f
509.944 401.506 mo
511.831 398.709 li
506.554 395.147 li
504.666 397.944 li
509.944 401.506 li
cp
.7037 .661494 .6318 .686549 cmyk
f
517.298 387.766 mo
513.735 393.045 li
516.532 394.933 li
520.095 389.654 li
517.298 387.766 li
cp
f
517.298 402.54 mo
513.735 407.817 li
516.532 409.707 li
520.095 404.429 li
517.298 402.54 li
cp
f
542.221 439.468 mo
540.333 442.266 li
545.352 445.652 li
545.731 445.652 li
547.5 443.03 li
542.221 439.468 li
cp
f
552.201 439.255 mo
555.764 433.978 li
552.966 432.088 li
549.403 437.365 li
552.201 439.255 li
cp
f
511.832 428.257 mo
506.555 424.694 li
504.665 427.492 li
509.943 431.055 li
511.832 428.257 li
cp
f
516.532 439.255 mo
520.095 433.978 li
517.298 432.088 li
513.735 437.365 li
516.532 439.255 li
cp
f
506.554 439.468 mo
504.666 442.266 li
509.683 445.652 li
510.063 445.652 li
511.831 443.03 li
506.554 439.468 li
cp
f
524.071 439.468 mo
522.183 442.266 li
527.2 445.652 li
527.579 445.652 li
529.348 443.03 li
524.071 439.468 li
cp
f
559.74 439.468 mo
557.852 442.266 li
562.869 445.652 li
563.247 445.652 li
565.017 443.03 li
559.74 439.468 li
cp
f
534.05 439.255 mo
537.614 433.978 li
534.816 432.088 li
531.252 437.365 li
534.05 439.255 li
cp
f
534.816 417.314 mo
531.252 422.591 li
534.05 424.481 li
537.614 419.204 li
534.816 417.314 li
cp
f
545.613 431.055 mo
547.5 428.257 li
542.221 424.694 li
540.333 427.492 li
545.613 431.055 li
cp
f
551.986 424.336 mo
549.855 421.922 li
549.403 422.591 li
551.986 424.336 li
cp
f
517.298 417.314 mo
513.735 422.591 li
516.532 424.481 li
520.095 419.204 li
517.298 417.314 li
cp
f
543.78 415.044 mo
540.937 411.824 li
540.333 412.717 li
543.78 415.044 li
cp
f
522.182 427.492 mo
527.459 431.055 li
529.349 428.257 li
524.072 424.694 li
522.182 427.492 li
cp
f
529.348 398.709 mo
524.071 395.147 li
522.183 397.944 li
527.46 401.506 li
529.348 398.709 li
cp
f
534.05 409.707 mo
536.224 406.487 li
533.915 403.873 li
531.252 407.817 li
534.05 409.707 li
cp
f
524.072 409.92 mo
522.182 412.717 li
527.459 416.281 li
529.349 413.483 li
524.072 409.92 li
cp
f
479.153 476.576 mo
460.674 462.225 li
425.676 462.225 li
425.676 457.225 li
462.387 457.225 li
479.162 470.253 li
495.558 457.6 li
575.658 457.6 li
575.658 462.6 li
497.263 462.6 li
479.153 476.576 li
cp
f
268.436 427.515 mo
263.436 427.515 li
263.436 403.439 li
272.395 398.38 li
276.443 396.094 278.956 391.788 278.956 387.14 cv
278.956 381.391 275.419 377.111 268.443 374.42 cv
268.289 374.355 li
268.099 374.267 248.49 365.42 211.12 365.42 cv
173.618 365.42 154.142 374.265 153.951 374.355 cv
153.782 374.426 li
146.816 377.06 143.285 381.337 143.285 387.14 cv
143.285 391.788 145.798 396.095 149.845 398.38 cv
158.804 403.439 li
158.804 422.269 li
153.804 422.269 li
153.804 406.358 li
147.386 402.733 li
141.772 399.564 138.285 393.588 138.285 387.14 cv
138.285 379.297 143.13 373.135 151.932 369.78 cv
153.601 369.023 173.418 360.42 211.12 360.42 cv
248.882 360.42 268.702 369.05 270.316 369.783 cv
279.113 373.201 283.956 379.362 283.956 387.14 cv
283.956 393.588 280.468 399.563 274.854 402.733 cv
268.436 406.358 li
268.436 427.515 li
cp
f
255.191 510.637 mo
241.669 510.637 li
241.669 505.637 li
255.191 505.637 li
259.737 505.637 263.436 501.938 263.436 497.391 cv
263.436 465.889 li
268.436 465.889 li
268.436 497.391 li
268.436 504.695 262.495 510.637 255.191 510.637 cv
cp
f
198.86 510.637 mo
167.049 510.637 li
159.745 510.637 153.804 504.695 153.804 497.391 cv
153.804 467.069 li
158.804 467.069 li
158.804 497.391 li
158.804 501.938 162.503 505.637 167.049 505.637 cv
198.86 505.637 li
198.86 510.637 li
cp
f
225.314 472.814 mo
212.224 472.814 201.614 462.203 201.614 449.114 cv
201.614 436.025 212.224 425.415 225.314 425.415 cv
238.403 425.415 249.013 436.025 249.013 449.114 cv
249.013 462.203 238.403 472.814 225.314 472.814 cv
cp
249.776 398.478 mo
246.019 395.367 241.607 392.881 236.734 391.943 cv
226.05 389.886 214.65 395.847 208.242 404.695 cv
204.576 409.756 202.236 415.698 198.021 420.339 cv
193.806 424.981 185.714 425.17 176.91 420.811 cv
167.46 416.131 159.938 418.949 154.502 424.601 cv
149.067 430.252 147.158 438.49 148.058 446.057 cv
148.957 453.624 152.372 460.628 156.402 467.069 cv
165.351 481.376 177.544 493.597 191.519 503.311 cv
200.584 509.613 211.038 515.046 222.32 514.684 cv
235.271 514.268 247.245 506.006 254.552 495.366 cv
261.859 484.725 265.086 471.974 266.723 459.387 cv
269.581 437.406 266.782 412.561 249.776 398.478 cv
cp
0 0 0 0 cmyk
f
199.834 485.618 mo
196.667 490.309 li
199.154 491.988 li
202.321 487.298 li
199.834 485.618 li
cp
0 .355932 .708705 0 cmyk
f
199.154 505.118 mo
202.321 500.427 li
199.834 498.749 li
196.667 503.441 li
199.154 505.118 li
cp
.7037 .661494 .6318 .686549 cmyk
f
235.877 494.664 mo
240.568 497.83 li
242.245 495.344 li
237.555 492.178 li
235.877 494.664 li
cp
0 .355932 .708705 0 cmyk
f
246.424 491.987 mo
249.59 487.297 li
247.104 485.619 li
243.938 490.31 li
246.424 491.987 li
cp
.7037 .661494 .6318 .686549 cmyk
f
153.126 446.227 mo
149.96 450.917 li
152.447 452.595 li
155.613 447.904 li
153.126 446.227 li
cp
f
168.015 478.858 mo
171.182 474.167 li
168.696 472.487 li
165.529 477.178 li
168.015 478.858 li
cp
f
168.696 446.226 mo
165.529 450.916 li
168.015 452.596 li
171.182 447.905 li
168.696 446.226 li
cp
f
168.696 459.357 mo
165.529 464.047 li
168.015 465.727 li
171.182 461.036 li
168.696 459.357 li
cp
f
149.96 437.787 mo
152.447 439.465 li
155.613 434.774 li
153.126 433.096 li
149.96 437.787 li
cp
f
159.147 426.525 mo
157.469 429.011 li
162.16 432.177 li
163.837 429.691 li
159.147 426.525 li
cp
f
147.859 442.545 mo
147.863 442.825 147.875 443.104 147.888 443.383 cv
148.268 442.821 li
147.859 442.545 li
cp
f
157.469 442.142 mo
162.16 445.308 li
163.837 442.821 li
159.147 439.655 li
157.469 442.142 li
cp
f
204.739 507.794 mo
209.43 510.961 li
211.108 508.475 li
206.416 505.308 li
204.739 507.794 li
cp
f
206.416 492.178 mo
204.739 494.664 li
209.43 497.83 li
211.108 495.344 li
206.416 492.178 li
cp
f
162.187 419.005 mo
162.167 419.012 162.149 419.019 162.129 419.025 cv
162.16 419.046 li
162.187 419.005 li
cp
f
230.855 505.118 mo
234.022 500.427 li
231.536 498.749 li
228.369 503.441 li
230.855 505.118 li
cp
f
163.838 469.083 mo
159.148 465.916 li
157.506 468.344 li
157.538 468.394 157.571 468.444 157.603 468.493 cv
162.159 471.569 li
163.838 469.083 li
cp
f
163.838 455.952 mo
159.148 452.785 li
157.468 455.272 li
162.159 458.439 li
163.838 455.952 li
cp
0 .355932 .708705 0 cmyk
f
165.529 424.655 mo
168.015 426.335 li
171.182 421.645 li
168.696 419.965 li
165.529 424.655 li
cp
.7037 .661494 .6318 .686549 cmyk
f
231.536 485.618 mo
228.369 490.309 li
230.855 491.988 li
234.022 487.298 li
231.536 485.618 li
cp
0 .355932 .708705 0 cmyk
f
226.677 508.475 mo
221.987 505.308 li
220.307 507.794 li
224.997 510.961 li
226.677 508.475 li
cp
.7037 .661494 .6318 .686549 cmyk
f
179.408 469.083 mo
174.717 465.916 li
173.037 468.402 li
177.728 471.569 li
179.408 469.083 li
cp
f
173.038 481.533 mo
177.729 484.699 li
179.407 482.213 li
174.716 479.047 li
173.038 481.533 li
cp
0 .355932 .708705 0 cmyk
f
215.966 485.618 mo
212.799 490.309 li
215.286 491.988 li
218.453 487.298 li
215.966 485.618 li
cp
.7037 .661494 .6318 .686549 cmyk
f
215.286 505.118 mo
218.453 500.427 li
215.966 498.749 li
212.799 503.441 li
215.286 505.118 li
cp
f
179.407 429.691 mo
174.716 426.525 li
173.038 429.011 li
177.729 432.177 li
179.407 429.691 li
cp
f
188.607 494.664 mo
193.297 497.83 li
194.975 495.344 li
190.285 492.178 li
188.607 494.664 li
cp
f
184.265 433.096 mo
181.098 437.787 li
183.584 439.465 li
186.751 434.774 li
184.265 433.096 li
cp
f
184.265 459.357 mo
181.098 464.047 li
183.584 465.727 li
186.751 461.036 li
184.265 459.357 li
cp
f
183.584 426.335 mo
185.658 423.264 li
184.635 423.107 183.584 422.873 182.508 422.566 cv
181.098 424.655 li
183.584 426.335 li
cp
f
177.729 445.308 mo
179.407 442.821 li
174.716 439.655 li
173.038 442.142 li
177.729 445.308 li
cp
0 .355932 .708705 0 cmyk
f
190.286 465.916 mo
188.606 468.402 li
193.296 471.569 li
194.976 469.083 li
190.286 465.916 li
cp
.7037 .661494 .6318 .686549 cmyk
f
183.584 491.988 mo
186.751 487.298 li
184.265 485.618 li
181.098 490.309 li
183.584 491.988 li
cp
f
193.297 445.308 mo
194.975 442.821 li
190.285 439.655 li
188.607 442.142 li
193.297 445.308 li
cp
f
184.265 472.487 mo
181.098 477.178 li
183.584 478.858 li
186.751 474.167 li
184.265 472.487 li
cp
f
194.975 429.691 mo
190.285 426.525 li
188.607 429.011 li
193.297 432.177 li
194.975 429.691 li
cp
f
167.698 420.958 mo
163.561 420.958 159.749 422.752 156.304 426.334 cv
151.804 431.012 149.65 438.275 150.54 445.761 cv
151.264 451.846 153.799 458.195 158.521 465.743 cv
167.031 479.346 178.613 491.296 192.946 501.258 cv
204.078 508.998 213.379 512.458 222.24 512.185 cv
233.421 511.826 245.013 504.839 252.492 493.95 cv
258.565 485.107 262.299 474.022 264.244 459.065 cv
266.233 443.771 266.79 415.814 248.181 400.403 cv
244.307 397.195 240.296 395.175 236.261 394.399 cv
227.236 392.658 216.542 397.497 210.266 406.162 cv
208.835 408.137 207.62 410.248 206.335 412.483 cv
204.466 415.73 202.535 419.088 199.871 422.02 cv
194.869 427.53 185.644 427.925 175.8 423.051 cv
172.98 421.655 170.276 420.958 167.698 420.958 cv
cp
221.261 517.201 mo
208.614 517.201 197.46 510.486 190.092 505.364 cv
175.201 495.013 163.152 482.574 154.283 468.395 cv
149.156 460.2 146.389 453.195 145.576 446.352 cv
144.509 437.394 147.173 428.614 152.701 422.868 cv
159.774 415.515 168.766 413.987 178.019 418.57 cv
185.777 422.412 192.732 422.445 196.17 418.659 cv
196.17 418.659 li
198.47 416.127 200.185 413.145 202.001 409.989 cv
203.294 407.741 204.632 405.417 206.217 403.229 cv
213.709 392.884 226.162 387.366 237.206 389.488 cv
242.077 390.426 246.841 392.802 251.37 396.552 cv
271.828 413.494 271.324 443.394 269.203 459.709 cv
267.152 475.481 263.151 487.26 256.613 496.781 cv
248.251 508.956 235.142 516.773 222.4 517.182 cv
222.02 517.194 221.639 517.201 221.261 517.201 cv
cp
f
225.314 427.915 mo
213.624 427.915 204.114 437.425 204.114 449.114 cv
204.114 460.804 213.624 470.314 225.314 470.314 cv
237.003 470.314 246.513 460.804 246.513 449.114 cv
246.513 437.425 237.003 427.915 225.314 427.915 cv
cp
225.314 475.314 mo
210.867 475.314 199.114 463.561 199.114 449.114 cv
199.114 434.668 210.867 422.915 225.314 422.915 cv
239.76 422.915 251.513 434.668 251.513 449.114 cv
251.513 463.561 239.76 475.314 225.314 475.314 cv
cp
f
241.561 449.114 mo
236.561 449.114 li
236.561 442.912 231.515 437.867 225.314 437.867 cv
225.314 432.867 li
234.273 432.867 241.561 440.155 241.561 449.114 cv
cp
0 0 0 0 cmyk
f
181.098 396.058 mo
178.803 396.058 176.937 397.924 176.937 400.218 cv
176.937 402.512 178.803 404.379 181.098 404.379 cv
183.392 404.379 185.258 402.512 185.258 400.218 cv
185.258 397.924 183.392 396.058 181.098 396.058 cv
cp
181.098 409.379 mo
176.046 409.379 171.937 405.269 171.937 400.218 cv
171.937 395.168 176.046 391.058 181.098 391.058 cv
186.149 391.058 190.258 395.168 190.258 400.218 cv
190.258 405.269 186.149 409.379 181.098 409.379 cv
cp
.7037 .661494 .6318 .686549 cmyk
f
205.727 388.849 mo
205.727 391.45 203.619 393.558 201.017 393.558 cv
198.416 393.558 196.308 391.45 196.308 388.849 cv
196.308 386.248 198.416 384.139 201.017 384.139 cv
203.619 384.139 205.727 386.248 205.727 388.849 cv
cp
f
141.613 382.154 mo
146.868 387.409 li
147.895 386.858 148.99 386.354 150.164 385.91 cv
150.164 385.91 150.297 385.849 150.534 385.747 cv
143.468 378.681 li
142.687 379.748 142.059 380.902 141.613 382.154 cv
cp
f
146.441 375.628 mo
154.923 384.11 li
156.071 383.726 157.433 383.299 158.993 382.851 cv
149.673 373.531 li
148.491 374.16 147.41 374.858 146.441 375.628 cv
cp
f
153.838 371.671 mo
163.756 381.589 li
165.105 381.26 166.551 380.93 168.099 380.604 cv
157.74 370.245 li
155.939 370.846 154.633 371.347 153.838 371.671 cv
cp
f
141.462 391.618 mo
142.005 390.988 142.607 390.392 143.266 389.833 cv
140.792 387.359 li
140.815 388.823 141.046 390.254 141.462 391.618 cv
cp
f
277.401 387.025 mo
257.994 368.317 li
255.948 367.779 253.625 367.225 251.034 366.687 cv
270.33 385.284 li
277.401 387.025 li
cp
f
278.553 381.188 mo
278.553 381.188 li
278.553 379.917 278.387 378.726 278.102 377.595 cv
278.036 377.376 277.956 377.163 277.88 376.948 cv
275.784 374.588 272.863 373.43 269.343 372.072 cv
269.343 372.072 268.459 371.664 266.724 371.024 cv
278.522 382.122 li
278.54 381.812 278.553 381.501 278.553 381.188 cv
cp
f
162.353 368.834 mo
173.147 379.627 li
174.606 379.369 176.134 379.12 177.732 378.883 cv
166.578 367.73 li
165.043 368.104 163.631 368.474 162.353 368.834 cv
cp
f
237.457 364.463 mo
255.111 381.417 li
258.322 382.258 260.864 383.061 262.733 383.711 cv
243.66 365.338 li
241.704 365.026 239.633 364.733 237.457 364.463 cv
cp
f
213.208 362.92 mo
227.86 376.872 li
229.92 377.053 231.902 377.259 233.8 377.484 cv
218.643 363.027 li
216.878 362.971 215.063 362.937 213.208 362.92 cv
cp
f
202.02 363.086 mo
215.794 376.16 li
217.706 376.22 219.563 376.304 221.369 376.406 cv
207.202 362.939 li
205.429 362.968 203.707 363.02 202.02 363.086 cv
cp
f
224.958 363.317 mo
240.795 378.455 li
243.116 378.823 245.278 379.215 247.287 379.619 cv
230.714 363.745 li
228.862 363.581 226.941 363.438 224.958 363.317 cv
cp
f
181.171 364.945 mo
193.454 377.228 li
195.095 377.12 196.774 377.026 198.506 376.952 cv
185.88 364.327 li
184.248 364.519 182.684 364.727 181.171 364.945 cv
cp
f
191.341 363.762 mo
204.359 376.779 li
205.68 376.756 207.019 376.742 208.388 376.742 cv
208.818 376.742 209.234 376.749 209.66 376.752 cv
196.291 363.384 li
194.596 363.495 192.939 363.619 191.341 363.762 cv
cp
f
171.497 366.625 mo
183.048 378.175 li
184.598 377.992 186.213 377.824 187.871 377.67 cv
175.974 365.773 li
174.404 366.049 172.91 366.335 171.497 366.625 cv
cp
f
777.453 529.431 mo
771.453 529.431 li
771.453 524.431 li
777.453 524.431 li
777.453 529.431 li
cp
789.453 529.431 mo
783.453 529.431 li
783.453 524.431 li
789.453 524.431 li
789.453 529.431 li
cp
801.453 529.431 mo
795.453 529.431 li
795.453 524.431 li
801.453 524.431 li
801.453 529.431 li
cp
813.453 529.431 mo
807.453 529.431 li
807.453 524.431 li
813.453 524.431 li
813.453 529.431 li
cp
f
836.258 409.443 mo
845.9 409.443 853.716 417.259 853.716 426.901 cv
853.716 436.544 844.871 444.36 835.23 444.36 cv
742.232 444.15 li
733.9 444.523 728.332 440.855 726.151 433.412 cv
725.326 430.596 725.348 427.484 726.52 424.794 cv
727.692 422.103 730.08 419.9 732.941 419.245 cv
731.603 415.253 732.529 410.584 735.289 407.404 cv
738.049 404.224 742.541 402.651 746.682 403.414 cv
836.258 409.443 li
cp
f
778.294 445.642 mo
772.966 445.642 li
746.033 472.577 li
747.077 476.86 li
778.294 445.642 li
cp
0 0 0 0 cmyk
f
801.001 445.642 mo
795.673 445.642 li
750.485 490.831 li
751.529 495.114 li
801.001 445.642 li
cp
f
739.462 445.642 mo
740.399 449.479 li
744.235 445.642 li
739.462 445.642 li
cp
f
812.356 445.642 mo
807.028 445.642 li
752.711 499.959 li
753.755 504.243 li
812.356 445.642 li
cp
f
755.588 445.642 mo
750.26 445.642 li
741.579 454.322 li
742.624 458.606 li
755.588 445.642 li
cp
f
766.942 445.642 mo
761.613 445.642 li
743.806 463.449 li
744.851 467.733 li
766.942 445.642 li
cp
f
789.648 445.642 mo
784.32 445.642 li
748.258 481.704 li
749.303 485.987 li
789.648 445.642 li
cp
f
829.322 485.443 mo
831.04 478.396 li
801.439 507.998 li
806.767 507.998 li
829.322 485.443 li
cp
f
825.659 500.461 mo
827.377 493.414 li
812.793 507.998 li
818.121 507.998 li
825.659 500.461 li
cp
f
832.984 470.427 mo
834.703 463.38 li
790.085 507.998 li
795.413 507.998 li
832.984 470.427 li
cp
f
835.063 445.642 mo
829.735 445.642 li
767.379 507.998 li
772.707 507.998 li
835.063 445.642 li
cp
f
836.646 455.412 mo
838.365 448.365 li
778.732 507.998 li
784.06 507.998 li
836.646 455.412 li
cp
f
823.709 445.642 mo
818.381 445.642 li
756.026 507.998 li
761.354 507.998 li
823.709 445.642 li
cp
f
807.951 429.776 mo
807.951 433.373 805.036 436.288 801.439 436.288 cv
797.842 436.288 794.926 433.373 794.926 429.776 cv
794.926 426.179 801.439 417.26 801.439 417.26 cv
801.439 417.26 807.951 426.179 807.951 429.776 cv
cp
f
742.984 446.768 mo
733.767 446.768 726.952 442.137 724.627 434.207 cv
723.585 430.65 723.754 426.984 725.104 423.887 cv
726.274 421.2 728.381 419.001 730.876 417.758 cv
730.243 413.551 731.475 409.085 734.277 405.857 cv
737.615 402.013 743.009 400.123 748.011 401.047 cv
747.105 405.964 li
743.856 405.362 740.217 406.64 738.052 409.135 cv
735.887 411.629 735.137 415.41 736.187 418.542 cv
736.411 419.212 736.342 419.944 735.997 420.56 cv
735.652 421.175 735.063 421.616 734.374 421.774 cv
732.39 422.228 730.594 423.803 729.688 425.884 cv
728.805 427.909 728.712 430.366 729.426 432.801 cv
731.191 438.82 736.517 442.077 744.025 441.745 cv
744.247 446.74 li
743.822 446.759 743.401 446.768 742.984 446.768 cv
cp
.7037 .661494 .6318 .686549 cmyk
f
837.134 446.952 mo
837.134 441.952 li
845.382 441.952 852.092 435.241 852.092 426.993 cv
852.092 418.745 845.382 412.035 837.134 412.035 cv
837.134 407.035 li
848.139 407.035 857.092 415.988 857.092 426.993 cv
857.092 437.999 848.139 446.952 837.134 446.952 cv
cp
f
833.153 403.614 mo
827.102 398.364 820.975 402.999 821.835 397.844 cv
823.709 386.614 815.835 379.861 806.153 379.156 cv
801.001 378.781 802.903 373.651 803.314 372.587 cv
806.653 363.947 803.653 358.281 797.819 354.614 cv
793.26 351.749 788.623 351.26 783.27 350.69 cv
786.978 357.566 785.535 364.658 778.338 369.204 cv
776.927 370.096 775.388 370.766 773.81 371.312 cv
769.584 372.771 764.097 374.791 761.967 379.233 cv
759.757 383.844 762.612 390.121 767.539 391.487 cv
761.057 390.704 754.151 393.064 749.901 398.02 cv
745.65 402.976 744.422 410.486 747.341 416.326 cv
750.261 422.166 755.588 424.074 763.706 424.074 cv
773.814 424.074 li
776.365 419.79 781.029 416.911 786.376 416.911 cv
786.794 416.911 787.204 416.939 787.614 416.973 cv
789.765 410.276 796.038 405.427 803.45 405.427 cv
812.637 405.427 820.085 412.875 820.085 422.063 cv
820.085 422.745 820.032 423.413 819.953 424.074 cv
823.806 424.074 li
827.468 424.074 831.068 422.778 833.7 420.232 cv
839.634 414.489 836.825 406.801 833.153 403.614 cv
cp
0 0 0 0 cmyk
f
822.579 421.574 mo
823.806 421.574 li
826.973 421.574 829.87 420.459 831.961 418.435 cv
833.795 416.66 834.694 414.58 834.63 412.254 cv
834.553 409.391 833.009 406.8 831.514 405.503 cv
829.178 403.476 826.882 403.327 824.856 403.196 cv
823.121 403.084 821.327 402.967 820.131 401.46 cv
818.947 399.965 819.265 398.059 819.37 397.433 cv
820.052 393.339 819.27 389.721 817.107 386.97 cv
814.716 383.93 810.658 381.99 805.971 381.649 cv
803.123 381.442 801.704 380.104 801.016 379.017 cv
800.203 377.735 799.538 375.423 800.982 371.686 cv
803.555 365.027 802.127 360.275 796.489 356.731 cv
793.553 354.886 790.574 354.144 787.165 353.664 cv
789.071 360.55 786.407 367.064 779.673 371.318 cv
778.234 372.228 776.582 372.999 774.626 373.674 cv
770.247 375.187 765.836 376.945 764.221 380.314 cv
763.499 381.819 763.548 383.774 764.352 385.542 cv
765.157 387.31 766.597 388.631 768.207 389.078 cv
769.467 389.427 770.245 390.689 769.992 391.972 cv
769.739 393.255 768.524 394.119 767.24 393.969 cv
761.422 393.269 755.36 395.494 751.798 399.647 cv
748.078 403.983 747.165 410.383 749.578 415.209 cv
751.838 419.73 755.931 421.574 763.706 421.574 cv
772.466 421.574 li
775.573 417.249 780.575 414.566 785.908 414.417 cv
788.921 407.472 795.749 402.927 803.45 402.927 cv
813.837 402.927 822.319 411.248 822.579 421.574 cv
cp
823.806 426.574 mo
819.953 426.574 li
819.238 426.574 818.557 426.268 818.082 425.733 cv
817.608 425.198 817.385 424.486 817.47 423.776 cv
817.549 423.121 817.585 422.576 817.585 422.063 cv
817.585 414.268 811.245 407.927 803.45 407.927 cv
797.286 407.927 791.879 411.87 789.994 417.738 cv
789.638 418.846 788.572 419.563 787.403 419.464 cv
787.063 419.436 786.723 419.411 786.376 419.411 cv
782.071 419.411 778.177 421.632 775.962 425.353 cv
775.511 426.11 774.695 426.574 773.814 426.574 cv
763.706 426.574 li
757.171 426.574 749.151 425.536 745.105 417.444 cv
741.819 410.869 743.011 402.212 748.003 396.392 cv
751.195 392.67 755.737 390.17 760.692 389.24 cv
760.36 388.728 760.061 388.184 759.801 387.611 cv
758.37 384.466 758.339 381.019 759.712 378.152 cv
762.366 372.619 769.019 370.321 772.994 368.949 cv
774.581 368.4 775.893 367.792 777.003 367.091 cv
782.82 363.416 784.301 357.871 781.07 351.876 cv
780.629 351.06 780.677 350.066 781.195 349.296 cv
781.711 348.526 782.606 348.103 783.535 348.204 cv
788.991 348.785 794.111 349.33 799.149 352.498 cv
806.838 357.33 809.085 364.588 805.646 373.488 cv
804.958 375.269 805.12 376.151 805.24 376.34 cv
805.295 376.428 805.595 376.608 806.334 376.663 cv
812.42 377.106 817.779 379.736 821.037 383.879 cv
824.073 387.739 825.206 392.67 824.32 398.143 cv
824.598 398.169 824.912 398.189 825.179 398.206 cv
827.57 398.361 831.182 398.595 834.791 401.726 cv
834.791 401.726 li
837.669 404.224 839.523 408.206 839.629 412.118 cv
839.73 415.85 838.281 419.277 835.438 422.028 cv
832.409 424.96 828.278 426.574 823.806 426.574 cv
cp
.7037 .661494 .6318 .686549 cmyk
f
765.537 458.611 mo
765.537 458.611 li
762.411 458.611 759.876 456.077 759.876 452.95 cv
759.876 430.813 li
771.199 430.813 li
771.199 452.95 li
771.199 456.077 768.664 458.611 765.537 458.611 cv
cp
f
783.261 453.647 mo
783.261 453.647 li
780.135 453.647 777.6 451.112 777.6 447.986 cv
777.6 425.848 li
788.922 425.848 li
788.922 447.986 li
788.922 451.112 786.388 453.647 783.261 453.647 cv
cp
f
816.24 442.962 mo
816.24 441.788 li
809.319 441.788 li
809.319 442.887 li
809.319 446.88 808.447 450.804 806.953 454.507 cv
806.539 455.531 806.282 456.457 806.282 457.172 cv
806.282 460.769 809.197 463.685 812.793 463.685 cv
816.39 463.685 819.306 460.769 819.306 457.172 cv
819.306 456.432 819.03 455.466 818.59 454.4 cv
817.095 450.762 816.24 446.894 816.24 442.962 cv
cp
f
777.57 504.711 mo
781.895 504.711 786.035 506.415 789.105 509.424 cv
792.174 506.415 796.314 504.711 800.639 504.711 cv
804.963 504.711 809.104 506.415 812.174 509.423 cv
814.767 506.882 818.125 505.271 821.712 504.832 cv
835.718 446.933 li
742.504 446.933 li
756.496 504.832 li
760.083 505.271 763.441 506.882 766.035 509.423 cv
769.104 506.415 773.245 504.711 777.57 504.711 cv
cp
812.174 514.915 mo
811.053 514.915 809.985 514.434 809.244 513.594 cv
807.064 511.126 803.927 509.711 800.639 509.711 cv
797.351 509.711 794.215 511.126 792.036 513.594 cv
791.294 514.434 790.226 514.915 789.104 514.915 cv
787.983 514.915 786.914 514.434 786.173 513.594 cv
783.994 511.126 780.858 509.711 777.57 509.711 cv
774.281 509.711 771.145 511.126 768.965 513.594 cv
768.224 514.434 767.156 514.915 766.035 514.915 cv
764.913 514.915 763.845 514.434 763.104 513.594 cv
760.924 511.126 757.787 509.711 754.499 509.711 cv
752.532 509.711 li
736.153 441.933 li
842.072 441.933 li
825.677 509.711 li
823.709 509.711 li
820.42 509.711 817.285 511.126 815.105 513.594 cv
814.364 514.434 813.295 514.915 812.174 514.915 cv
cp
f
754.499 509.711 mo
741.579 509.711 li
741.579 504.711 li
754.499 504.711 li
754.499 509.711 li
cp
f
838.895 509.711 mo
823.001 509.711 li
823.001 504.711 li
838.895 504.711 li
838.895 509.711 li
cp
f
267.288 732.912 mo
156.19 732.912 li
151.021 732.912 146.83 737.102 146.83 742.271 cv
146.83 742.271 li
276.648 742.271 li
276.648 742.271 li
276.648 737.102 272.457 732.912 267.288 732.912 cv
cp
0 0 0 0 cmyk
f
169.513 749.233 mo
173.56 749.233 175.64 747.584 177.475 746.127 cv
178.657 745.189 179.733 744.351 181.324 743.946 cv
175.628 743.946 li
175.599 743.969 175.567 743.994 175.537 744.017 cv
173.886 745.328 172.459 746.459 169.513 746.459 cv
166.567 746.459 165.139 745.328 163.488 744.017 cv
163.457 743.994 163.426 743.969 163.396 743.946 cv
157.686 743.946 li
159.286 744.347 160.366 745.187 161.55 746.127 cv
163.385 747.584 165.466 749.233 169.513 749.233 cv
cp
f
141.539 749.233 mo
141.614 749.233 141.675 749.223 141.747 749.222 cv
141.819 749.223 141.881 749.233 141.954 749.233 cv
146.003 749.233 148.084 747.584 149.921 746.127 cv
151.106 745.187 152.186 744.347 153.786 743.946 cv
147.655 743.946 li
147.625 743.969 147.593 743.994 147.564 744.017 cv
145.953 745.294 144.546 746.394 141.747 746.449 cv
138.945 746.394 137.537 745.294 135.926 744.016 cv
135.896 743.993 135.865 743.969 135.835 743.946 cv
135.182 743.946 li
133.87 743.946 132.62 744.199 131.463 744.644 cv
132.214 745.06 132.88 745.573 133.578 746.127 cv
135.412 747.584 137.493 749.233 141.539 749.233 cv
cp
f
294.689 748.792 mo
294.689 748.77 li
294.614 748.77 294.55 748.78 294.476 748.781 cv
294.403 748.78 294.339 748.77 294.264 748.77 cv
290.218 748.77 288.138 750.419 286.303 751.877 cv
284.693 753.154 283.286 754.253 280.487 754.308 cv
277.685 754.253 276.277 753.154 274.665 751.876 cv
272.829 750.419 270.749 748.77 266.701 748.77 cv
266.628 748.77 266.567 748.78 266.495 748.781 cv
266.425 748.78 266.364 748.77 266.291 748.77 cv
266.291 748.791 li
262.523 748.903 260.508 750.472 258.739 751.877 cv
257.087 753.187 255.661 754.318 252.715 754.318 cv
249.768 754.318 248.341 753.187 246.689 751.877 cv
244.854 750.419 242.774 748.77 238.726 748.77 cv
234.68 748.77 232.6 750.419 230.765 751.877 cv
229.114 753.187 227.687 754.318 224.742 754.318 cv
221.794 754.318 220.369 753.187 218.716 751.877 cv
216.999 750.513 215.045 748.999 211.487 748.808 cv
211.487 748.77 li
211.357 748.77 211.246 748.786 211.12 748.789 cv
210.995 748.786 210.883 748.77 210.753 748.77 cv
210.753 748.808 li
207.194 748.999 205.24 750.513 203.522 751.876 cv
201.869 753.187 200.442 754.318 197.493 754.318 cv
194.544 754.318 193.117 753.187 191.464 751.876 cv
189.627 750.419 187.547 748.77 183.498 748.77 cv
179.452 748.77 177.371 750.419 175.537 751.877 cv
173.886 753.187 172.459 754.318 169.513 754.318 cv
166.567 754.318 165.139 753.187 163.488 751.877 cv
161.72 750.474 159.707 748.908 155.949 748.792 cv
155.949 748.77 li
155.873 748.77 155.81 748.78 155.737 748.781 cv
155.662 748.78 155.599 748.77 155.524 748.77 cv
151.478 748.77 149.398 750.419 147.564 751.877 cv
145.953 753.154 144.546 754.253 141.747 754.308 cv
138.945 754.253 137.537 753.154 135.926 751.876 cv
134.089 750.419 132.009 748.77 127.96 748.77 cv
127.888 748.77 127.828 748.78 127.756 748.781 cv
127.685 748.78 127.624 748.77 127.551 748.77 cv
127.551 748.791 li
127.129 748.803 126.737 748.84 126.356 748.887 cv
125.767 749.842 125.326 750.898 125.071 752.026 cv
125.823 751.75 126.687 751.575 127.756 751.554 cv
130.558 751.608 131.966 752.708 133.578 753.986 cv
135.412 755.443 137.493 757.092 141.539 757.092 cv
141.614 757.092 141.675 757.083 141.747 757.082 cv
141.819 757.083 141.881 757.092 141.954 757.092 cv
146.003 757.092 148.084 755.443 149.921 753.986 cv
151.532 752.709 152.939 751.61 155.737 751.554 cv
158.534 751.61 159.941 752.709 161.55 753.986 cv
163.385 755.443 165.466 757.092 169.513 757.092 cv
173.56 757.092 175.64 755.443 177.475 753.986 cv
179.126 752.675 180.553 751.544 183.498 751.544 cv
186.447 751.544 187.873 752.675 189.527 753.986 cv
191.363 755.443 193.444 757.092 197.493 757.092 cv
201.541 757.092 203.622 755.443 205.459 753.986 cv
207.038 752.733 208.427 751.656 211.12 751.562 cv
213.811 751.656 215.201 752.733 216.779 753.986 cv
218.615 755.443 220.695 757.092 224.742 757.092 cv
228.788 757.092 230.869 755.442 232.703 753.986 cv
234.355 752.675 235.781 751.544 238.726 751.544 cv
241.672 751.544 243.1 752.675 244.751 753.986 cv
246.587 755.443 248.667 757.092 252.715 757.092 cv
256.762 757.092 258.842 755.443 260.676 753.986 cv
262.287 752.708 263.695 751.608 266.495 751.554 cv
269.298 751.608 270.706 752.708 272.318 753.986 cv
274.153 755.443 276.233 757.092 280.28 757.092 cv
280.353 757.092 280.414 757.083 280.487 757.082 cv
280.559 757.083 280.62 757.092 280.695 757.092 cv
284.744 757.092 286.825 755.443 288.661 753.986 cv
290.271 752.709 291.678 751.61 294.476 751.554 cv
295.55 751.576 296.417 751.753 297.171 752.034 cv
296.917 750.903 296.476 749.846 295.885 748.889 cv
295.505 748.841 295.112 748.805 294.689 748.792 cv
cp
f
294.689 757.115 mo
294.689 757.092 li
294.614 757.092 294.55 757.102 294.476 757.103 cv
294.403 757.102 294.339 757.092 294.264 757.092 cv
290.218 757.092 288.138 758.743 286.303 760.199 cv
284.693 761.476 283.286 762.576 280.487 762.63 cv
277.685 762.576 276.277 761.476 274.665 760.198 cv
272.829 758.743 270.749 757.092 266.701 757.092 cv
266.628 757.092 266.567 757.102 266.495 757.103 cv
266.425 757.102 266.364 757.092 266.291 757.092 cv
266.291 757.114 li
262.523 757.225 260.508 758.794 258.739 760.199 cv
257.087 761.509 255.661 762.64 252.715 762.64 cv
249.768 762.64 248.341 761.509 246.689 760.199 cv
244.854 758.743 242.774 757.092 238.726 757.092 cv
234.68 757.092 232.6 758.743 230.765 760.199 cv
229.114 761.509 227.687 762.64 224.742 762.64 cv
221.794 762.64 220.369 761.509 218.716 760.199 cv
216.999 758.836 215.045 757.322 211.487 757.13 cv
211.487 757.092 li
211.357 757.092 211.246 757.108 211.12 757.111 cv
210.995 757.108 210.883 757.092 210.753 757.092 cv
210.753 757.13 li
207.194 757.321 205.24 758.836 203.522 760.198 cv
201.869 761.509 200.442 762.64 197.493 762.64 cv
194.544 762.64 193.117 761.509 191.464 760.198 cv
189.627 758.743 187.547 757.092 183.498 757.092 cv
179.452 757.092 177.371 758.743 175.537 760.199 cv
173.886 761.509 172.459 762.64 169.513 762.64 cv
166.567 762.64 165.139 761.509 163.488 760.199 cv
161.72 758.796 159.707 757.23 155.949 757.115 cv
155.949 757.092 li
155.873 757.092 155.81 757.102 155.737 757.103 cv
155.662 757.102 155.599 757.092 155.524 757.092 cv
151.478 757.092 149.398 758.743 147.564 760.199 cv
145.953 761.476 144.546 762.576 141.747 762.63 cv
138.945 762.576 137.537 761.476 135.926 760.198 cv
134.089 758.743 132.009 757.092 127.96 757.092 cv
127.888 757.092 127.828 757.102 127.756 757.103 cv
127.685 757.102 127.624 757.092 127.551 757.092 cv
127.551 757.114 li
126.705 757.138 125.959 757.246 125.273 757.399 cv
125.561 758.327 125.981 759.196 126.501 759.992 cv
126.891 759.931 127.299 759.885 127.756 759.877 cv
130.558 759.93 131.966 761.03 133.578 762.308 cv
134.656 763.165 135.83 764.078 137.427 764.694 cv
146.07 764.694 li
147.666 764.078 148.842 763.165 149.921 762.308 cv
151.532 761.032 152.939 759.933 155.737 759.878 cv
158.534 759.933 159.941 761.032 161.55 762.308 cv
162.628 763.165 163.803 764.078 165.4 764.694 cv
173.626 764.694 li
175.222 764.078 176.397 763.165 177.475 762.308 cv
179.126 760.998 180.553 759.867 183.498 759.867 cv
186.447 759.867 187.873 760.998 189.527 762.308 cv
190.605 763.165 191.781 764.078 193.378 764.694 cv
201.608 764.694 li
203.204 764.078 204.38 763.165 205.459 762.308 cv
207.038 761.056 208.427 759.978 211.12 759.884 cv
213.811 759.978 215.201 761.056 216.779 762.308 cv
217.858 763.165 219.033 764.078 220.628 764.694 cv
228.854 764.694 li
230.451 764.078 231.624 763.164 232.703 762.308 cv
234.355 760.998 235.781 759.867 238.726 759.867 cv
241.672 759.867 243.1 760.998 244.751 762.308 cv
245.83 763.165 247.005 764.078 248.602 764.694 cv
256.828 764.694 li
258.424 764.078 259.599 763.165 260.676 762.308 cv
262.287 761.03 263.695 759.93 266.495 759.877 cv
269.298 759.93 270.706 761.03 272.318 762.308 cv
273.396 763.165 274.571 764.078 276.166 764.694 cv
284.809 764.694 li
286.407 764.078 287.581 763.165 288.661 762.308 cv
290.271 761.032 291.678 759.933 294.476 759.878 cv
294.936 759.886 295.346 759.932 295.737 759.994 cv
296.258 759.199 296.678 758.331 296.966 757.403 cv
296.281 757.249 295.535 757.14 294.689 757.115 cv
cp
f
252.715 749.233 mo
256.762 749.233 258.842 747.584 260.676 746.127 cv
261.861 745.187 262.94 744.347 264.539 743.946 cv
258.83 743.946 li
258.801 743.969 258.769 743.994 258.739 744.017 cv
257.087 745.328 255.661 746.459 252.715 746.459 cv
249.768 746.459 248.341 745.328 246.689 744.017 cv
246.66 743.994 246.627 743.969 246.598 743.946 cv
240.902 743.946 li
242.494 744.351 243.57 745.189 244.751 746.127 cv
246.587 747.584 248.667 749.233 252.715 749.233 cv
cp
f
197.493 749.233 mo
201.541 749.233 203.622 747.584 205.459 746.127 cv
206.644 745.187 207.721 744.346 209.321 743.946 cv
203.613 743.946 li
203.582 743.969 203.551 743.993 203.522 744.016 cv
201.869 745.328 200.442 746.459 197.493 746.459 cv
194.544 746.459 193.117 745.328 191.464 744.016 cv
191.434 743.993 191.403 743.969 191.373 743.946 cv
185.675 743.946 li
187.267 744.351 188.344 745.189 189.527 746.127 cv
191.363 747.584 193.444 749.233 197.493 749.233 cv
cp
f
280.28 749.233 mo
280.353 749.233 280.414 749.223 280.487 749.222 cv
280.559 749.223 280.62 749.233 280.695 749.233 cv
284.744 749.233 286.825 747.584 288.661 746.127 cv
289.359 745.573 290.025 745.059 290.777 744.643 cv
289.62 744.199 288.37 743.946 287.058 743.946 cv
286.395 743.946 li
286.365 743.969 286.333 743.994 286.303 744.017 cv
284.693 745.294 283.286 746.394 280.487 746.449 cv
277.685 746.394 276.277 745.294 274.665 744.016 cv
274.636 743.993 274.605 743.969 274.576 743.946 cv
268.453 743.946 li
270.053 744.347 271.133 745.187 272.318 746.127 cv
274.153 747.584 276.233 749.233 280.28 749.233 cv
cp
f
224.742 749.233 mo
228.788 749.233 230.869 747.583 232.703 746.127 cv
233.885 745.189 234.96 744.351 236.551 743.946 cv
230.857 743.946 li
230.827 743.969 230.795 743.994 230.765 744.017 cv
229.114 745.328 227.687 746.459 224.742 746.459 cv
221.794 746.459 220.369 745.328 218.716 744.017 cv
218.687 743.994 218.656 743.969 218.625 743.946 cv
212.918 743.946 li
214.518 744.346 215.595 745.187 216.779 746.127 cv
218.615 747.584 220.695 749.233 224.742 749.233 cv
cp
f
250.531 793.079 mo
173.895 793.079 li
156.915 793.079 143.102 779.265 143.102 762.286 cv
148.102 762.286 li
148.102 776.508 159.672 788.079 173.895 788.079 cv
250.531 788.079 li
264.753 788.079 276.324 776.508 276.324 762.286 cv
281.324 762.286 li
281.324 779.265 267.51 793.079 250.531 793.079 cv
cp
.7037 .661494 .6318 .686549 cmyk
f
135.182 744.696 mo
130.84 744.696 127.308 748.228 127.308 752.57 cv
127.308 756.912 130.84 760.444 135.182 760.444 cv
287.058 760.444 li
291.4 760.444 294.932 756.912 294.932 752.57 cv
294.932 748.228 291.4 744.696 287.058 744.696 cv
135.182 744.696 li
cp
287.058 765.444 mo
135.182 765.444 li
128.083 765.444 122.308 759.669 122.308 752.57 cv
122.308 745.471 128.083 739.696 135.182 739.696 cv
287.058 739.696 li
294.157 739.696 299.932 745.471 299.932 752.57 cv
299.932 759.669 294.157 765.444 287.058 765.444 cv
cp
f
164.427 725.804 mo
160.892 722.269 li
175.628 707.532 li
179.163 711.067 li
164.427 725.804 li
cp
f
184.616 725.804 mo
181.08 722.269 li
195.817 707.532 li
199.352 711.067 li
184.616 725.804 li
cp
f
204.805 725.804 mo
201.27 722.269 li
216.006 707.532 li
219.541 711.067 li
204.805 725.804 li
cp
f
224.994 725.804 mo
221.458 722.268 li
236.196 707.532 li
239.731 711.068 li
224.994 725.804 li
cp
f
245.183 725.804 mo
241.648 722.269 li
256.384 707.532 li
259.919 711.067 li
245.183 725.804 li
cp
f
172.802 711.066 mo
158.579 711.066 147.009 722.637 147.009 736.859 cv
147.009 738.332 148.206 739.529 149.679 739.529 cv
272.562 739.529 li
274.034 739.529 275.231 738.332 275.231 736.859 cv
275.231 722.637 263.661 711.066 249.438 711.066 cv
172.802 711.066 li
cp
272.562 744.529 mo
149.679 744.529 li
145.45 744.529 142.009 741.088 142.009 736.859 cv
142.009 719.88 155.823 706.066 172.802 706.066 cv
249.438 706.066 li
266.417 706.066 280.231 719.88 280.231 736.859 cv
280.231 741.088 276.79 744.529 272.562 744.529 cv
cp
f
220.869 692.045 mo
215.869 692.045 li
215.869 689.142 214.572 687.804 212.777 685.953 cv
210.771 683.884 208.275 681.309 208.275 676.38 cv
208.275 671.451 210.771 668.876 212.777 666.807 cv
214.572 664.956 215.869 663.618 215.869 660.715 cv
220.869 660.715 li
220.869 665.644 218.372 668.219 216.367 670.288 cv
214.572 672.139 213.275 673.477 213.275 676.38 cv
213.275 679.283 214.572 680.621 216.367 682.472 cv
218.372 684.541 220.869 687.116 220.869 692.045 cv
cp
0 0 0 0 cmyk
f
201.742 692.045 mo
196.742 692.045 li
196.742 689.142 195.445 687.804 193.65 685.953 cv
191.644 683.884 189.148 681.309 189.148 676.38 cv
189.148 671.451 191.644 668.876 193.65 666.807 cv
195.445 664.956 196.742 663.618 196.742 660.715 cv
201.742 660.715 li
201.742 665.644 199.245 668.219 197.24 670.288 cv
195.445 672.139 194.148 673.477 194.148 676.38 cv
194.148 679.283 195.445 680.621 197.24 682.472 cv
199.245 684.541 201.742 687.116 201.742 692.045 cv
cp
f
238.358 692.045 mo
233.358 692.045 li
233.358 689.142 232.061 687.804 230.266 685.953 cv
228.261 683.884 225.765 681.309 225.765 676.38 cv
225.765 671.451 228.261 668.876 230.266 666.807 cv
232.061 664.956 233.358 663.618 233.358 660.715 cv
238.358 660.715 li
238.358 665.644 235.862 668.219 233.857 670.288 cv
232.062 672.139 230.765 673.477 230.765 676.38 cv
230.765 679.283 232.062 680.621 233.857 682.472 cv
235.862 684.541 238.358 687.116 238.358 692.045 cv
cp
f
145.602 762.286 mo
145.602 777.911 158.269 790.579 173.895 790.579 cv
250.531 790.579 li
266.157 790.579 278.824 777.911 278.824 762.286 cv
145.602 762.286 li
cp
.7037 .661494 .6318 .686549 cmyk
f
226.672 759.723 mo
226.672 758.55 li
219.752 758.55 li
219.752 759.65 li
219.752 763.642 218.879 767.567 217.385 771.269 cv
216.972 772.294 216.714 773.219 216.714 773.935 cv
216.714 777.531 219.63 780.447 223.226 780.447 cv
226.823 780.447 229.739 777.531 229.739 773.935 cv
229.739 773.194 229.462 772.228 229.024 771.162 cv
227.528 767.524 226.672 763.656 226.672 759.723 cv
cp
0 .355932 .708705 0 cmyk
f
692.103 230.988 mo
309.103 230.988 li
309.103 8.54492e-05 li
692.103 8.54492e-05 li
692.103 230.988 li
cp
.7037 .661494 .6318 .686549 cmyk
f
389.115 75.5338 mo
372.191 98.0987 li
370.26 98.0987 li
353.708 75.4591 li
353.708 113.241 li
343.91 113.241 li
343.91 61.2823 li
355.192 61.2823 li
371.448 83.6246 li
387.704 61.2823 li
398.912 61.2823 li
398.912 113.241 li
389.115 113.241 li
389.115 75.5338 li
cp
0 0 0 0 cmyk
f
415.459 87.7066 mo
415.682 96.2432 420.284 105.373 432.532 105.373 cv
444.78 105.373 449.381 96.169 449.53 87.6324 cv
449.678 78.8741 444.78 69.0758 432.532 69.0758 cv
420.284 69.0758 415.236 78.9473 415.459 87.7066 cv
cp
459.179 87.4845 mo
459.031 100.92 450.791 114.355 432.532 114.355 cv
414.272 114.355 405.809 101.216 405.809 87.5587 cv
405.809 73.901 414.569 60.1685 432.532 60.1685 cv
450.421 60.1685 459.328 73.901 459.179 87.4845 cv
cp
f
475.43 103.74 mo
486.118 103.74 li
497.92 103.74 502.596 95.13 502.374 86.6676 cv
502.152 78.5772 497.401 70.4864 486.118 70.4864 cv
475.43 70.4864 li
475.43 103.74 li
cp
512.098 86.7423 mo
512.321 99.8805 504.304 113.167 486.118 113.167 cv
479.735 113.167 472.09 113.167 465.705 113.167 cv
465.705 61.2076 li
472.09 61.2076 479.735 61.2076 486.118 61.2076 cv
503.933 61.2076 511.875 73.901 512.098 86.7423 cv
cp
f
572.263 70.3375 mo
572.263 86.9649 li
587.182 86.9649 li
593.417 86.9649 596.089 82.8082 596.089 78.6515 cv
596.089 74.4937 593.343 70.3375 587.182 70.3375 cv
572.263 70.3375 li
cp
608.486 113.167 mo
596.832 113.167 li
581.69 95.7974 li
572.263 95.7974 li
572.263 113.167 li
562.465 113.167 li
562.465 61.1329 li
570.703 61.1329 578.944 61.2076 587.182 61.2076 cv
599.429 61.2823 605.887 69.4464 605.887 78.4278 cv
605.887 85.5543 602.621 92.7545 592.749 94.7584 cv
608.486 112.499 li
608.486 113.167 li
cp
f
647.034 61.1329 mo
656.831 61.1329 li
656.831 113.167 li
650.745 113.167 li
650.745 113.241 li
623.428 78.1309 li
623.428 113.167 li
613.63 113.167 li
613.63 61.2076 li
621.573 61.2076 li
647.034 93.4224 li
647.034 61.1329 li
cp
f
520.002 61.2076 mo
520.002 70.7086 li
554.411 70.7086 li
554.411 61.2076 li
520.002 61.2076 li
cp
f
520.002 82.8741 mo
520.002 92.3756 li
554.411 92.3756 li
554.411 82.8741 li
520.002 82.8741 li
cp
f
520.002 104.541 mo
520.002 114.042 li
554.411 114.042 li
554.411 104.541 li
520.002 104.541 li
cp
f
655.471 140.377 mo
655.026 139.47 654.527 138.633 654.003 137.828 cv
647.202 144.63 li
655.471 140.377 li
cp
f
642.337 143.403 mo
651.316 134.425 li
650.424 133.493 649.475 132.644 648.466 131.889 cv
639.239 141.116 li
640.413 141.812 641.453 142.585 642.337 143.403 cv
cp
f
623.119 168.713 mo
624.465 168.922 625.83 169.105 627.206 169.268 cv
627.431 169.292 627.647 169.322 627.869 169.349 cv
638.664 158.553 li
637.219 158.196 635.732 157.887 634.214 157.618 cv
623.119 168.713 li
cp
f
564.022 163.633 mo
561.644 160.625 li
552.483 169.787 li
554.839 172.816 li
564.022 163.633 li
cp
f
633.086 170.222 mo
634.584 170.564 635.97 170.978 637.217 171.477 cv
647.091 161.604 li
645.91 160.987 644.658 160.442 643.346 159.962 cv
633.086 170.222 li
cp
f
571.937 144.241 mo
585.704 130.474 li
585.704 128.278 li
582.514 128.278 li
571.937 138.856 li
571.937 144.241 li
cp
f
392.083 186.37 mo
390.97 185.671 389.95 184.893 389.027 184.041 cv
379.427 193.641 li
380.356 194.495 381.341 195.305 382.391 196.063 cv
392.083 186.37 li
cp
f
400.371 189.559 mo
398.868 189.269 397.468 188.87 396.162 188.381 cv
386.147 198.398 li
387.313 199.023 388.541 199.591 389.829 200.101 cv
400.371 189.559 li
cp
f
628.353 156.753 mo
626.921 156.582 625.53 156.388 624.193 156.162 cv
613.764 166.591 li
615.122 167.031 616.537 167.412 617.996 167.745 cv
628.915 156.825 li
628.728 156.801 628.541 156.776 628.353 156.753 cv
cp
f
617.846 139.555 mo
619.705 138.722 622.033 138.171 624.819 137.969 cv
636.071 126.716 li
634.512 126.418 632.929 126.201 631.333 126.068 cv
617.846 139.555 li
cp
f
599.838 139.995 mo
610.489 129.345 li
605.683 131.632 601.771 135.119 599.838 139.995 cv
cp
f
598.531 147.394 mo
598.545 149.159 598.725 150.776 599.047 152.263 cv
625.397 125.914 li
623.383 125.992 621.354 126.206 619.359 126.566 cv
598.531 147.394 li
cp
f
571.937 167.896 mo
585.704 154.129 li
585.704 148.743 li
571.937 162.51 li
571.937 167.896 li
cp
f
612.083 147.574 mo
612.083 146.627 612.243 145.717 612.544 144.857 cv
600.643 156.757 li
601.254 157.935 601.98 159.004 602.819 159.969 cv
612.61 150.178 li
612.28 149.404 612.083 148.549 612.083 147.574 cv
cp
f
630.732 138.146 mo
632.248 138.371 633.701 138.731 635.064 139.2 cv
644.696 129.568 li
643.474 128.952 642.206 128.424 640.899 127.98 cv
630.732 138.146 li
cp
f
595.292 185.33 mo
595.792 186.561 596.361 187.693 596.962 188.779 cv
605.917 179.823 li
595.292 185.33 li
cp
f
386.174 180.802 mo
385.408 179.732 384.739 178.6 384.17 177.421 cv
374.169 187.422 li
374.87 188.494 375.634 189.525 376.459 190.517 cv
386.174 180.802 li
cp
f
619.237 155.027 mo
617.817 154.583 616.561 154.039 615.503 153.375 cv
606.025 162.854 li
607.071 163.6 608.202 164.266 609.409 164.856 cv
619.237 155.027 li
cp
f
643.442 176.731 mo
653.514 166.659 li
652.703 165.675 651.796 164.786 650.798 163.988 cv
641.096 173.691 li
642.135 174.554 642.932 175.56 643.442 176.731 cv
cp
f
357.104 141.011 mo
357.104 135.625 li
343.441 149.288 li
343.441 154.673 li
357.104 141.011 li
cp
f
343.441 131.72 mo
346.778 128.383 li
343.441 128.383 li
343.441 131.72 li
cp
f
357.104 129.534 mo
357.104 128.383 li
352.869 128.383 li
343.441 137.811 li
343.441 143.196 li
357.104 129.534 li
cp
f
357.104 152.488 mo
357.104 147.102 li
343.441 160.764 li
343.441 166.15 li
357.104 152.488 li
cp
f
357.104 163.964 mo
357.104 158.579 li
343.441 172.241 li
343.441 177.627 li
357.104 163.964 li
cp
f
538.77 183.499 mo
525.003 197.266 li
525.003 201.391 li
526.264 201.391 li
538.77 188.885 li
538.77 183.499 li
cp
f
655.868 170.396 mo
643.795 182.468 li
642.948 185.856 640.328 188.099 636.84 189.423 cv
623.127 203.136 li
624.426 203.215 625.745 203.268 627.103 203.268 cv
627.536 203.268 627.968 203.261 628.399 203.251 cv
657.199 174.451 li
656.879 172.979 656.436 171.627 655.868 170.396 cv
cp
f
424.997 182.723 mo
424.383 183.337 423.728 183.915 423.041 184.456 cv
404.485 203.013 li
405.194 203.041 405.91 203.061 406.642 203.061 cv
407.755 203.061 408.856 203.013 409.949 202.936 cv
427.566 185.318 li
424.997 182.723 li
cp
f
513.851 165.305 mo
513.861 164.395 513.832 163.484 513.785 162.575 cv
496.553 179.807 li
494.758 182.871 492.26 185.519 488.953 187.408 cv
473.399 202.962 li
474.382 203.02 475.381 203.061 476.41 203.061 cv
477.2 203.061 477.976 203.042 478.741 203.006 cv
513.735 168.012 li
513.797 167.111 513.841 166.208 513.851 165.305 cv
cp
f
357.104 198.397 mo
357.104 193.011 li
348.723 201.391 li
354.109 201.391 li
357.104 198.397 li
cp
f
397.016 141.62 mo
399.07 140.893 401.338 140.399 403.834 140.187 cv
415.945 128.077 li
414.454 127.699 412.939 127.42 411.407 127.229 cv
397.016 141.62 li
cp
f
357.104 175.441 mo
357.104 170.055 li
343.441 183.717 li
343.441 189.104 li
357.104 175.441 li
cp
f
368.435 158.724 mo
368.143 160.664 367.986 162.624 367.959 164.586 cv
405.597 126.948 li
403.57 126.988 401.62 127.135 399.76 127.398 cv
368.435 158.724 li
cp
f
357.104 186.918 mo
357.104 181.532 li
343.441 195.195 li
343.441 200.581 li
357.104 186.918 li
cp
f
418.668 142.922 mo
419.82 143.517 420.927 144.209 421.98 144.997 cv
431.059 135.918 li
430.069 135.082 429.051 134.303 428.008 133.583 cv
418.668 142.922 li
cp
f
409.857 140.258 mo
411.366 140.435 412.862 140.741 414.325 141.176 cv
424.228 131.273 li
423.025 130.633 421.793 130.071 420.542 129.572 cv
409.857 140.258 li
cp
f
368.245 170.39 mo
368.422 171.943 368.683 173.482 369.022 174.999 cv
381.645 162.377 li
381.873 160.011 382.395 157.655 383.229 155.407 cv
368.245 170.39 li
cp
f
382.525 172.975 mo
382.122 171.487 381.844 169.965 381.682 168.432 cv
370.382 179.732 li
370.844 181.027 371.374 182.295 371.972 183.528 cv
382.525 172.975 li
cp
f
370.544 150.524 mo
391.694 129.374 li
380.989 133.215 374.01 141.198 370.544 150.524 cv
cp
f
538.77 201.063 mo
538.77 195.677 li
533.056 201.391 li
538.442 201.391 li
538.77 201.063 li
cp
f
480.044 190.226 mo
478.888 190.361 477.681 190.44 476.41 190.44 cv
475.757 190.44 475.125 190.416 474.504 190.379 cv
463.602 201.282 li
464.99 201.699 466.442 202.043 467.953 202.318 cv
480.044 190.226 li
cp
f
538.77 165.932 mo
538.77 160.546 li
525.003 174.313 li
525.003 179.699 li
538.77 165.932 li
cp
f
538.77 177.408 mo
538.77 172.023 li
525.003 185.79 li
525.003 191.175 li
538.77 177.408 li
cp
f
509.745 183.477 mo
511.016 180.841 511.984 178.051 512.66 175.178 cv
485.699 202.139 li
488.613 201.533 491.284 200.635 493.725 199.498 cv
509.745 183.477 li
cp
f
469.216 189.577 mo
467.792 189.209 466.475 188.729 465.253 188.154 cv
455.636 197.771 li
456.756 198.446 457.934 199.065 459.17 199.623 cv
469.216 189.577 li
cp
f
547.46 163.332 mo
549.818 166.361 li
558.955 157.223 li
556.578 154.214 li
547.46 163.332 li
cp
f
433.273 191.089 mo
430.595 188.381 li
417.173 201.803 li
420.222 201.046 423.144 199.937 425.9 198.463 cv
433.273 191.089 li
cp
f
461.47 185.846 mo
460.448 185.056 459.523 184.183 458.689 183.241 cv
449.211 192.719 li
450.095 193.619 451.042 194.47 452.043 195.274 cv
461.47 185.846 li
cp
f
456.139 179.7 mo
455.462 178.535 454.89 177.31 454.408 176.046 cv
444.247 186.206 li
444.904 187.322 445.623 188.4 446.403 189.436 cv
456.139 179.7 li
cp
f
629.27 190.902 mo
628.621 190.938 627.969 190.962 627.311 190.962 cv
626.196 190.962 625.087 190.905 623.995 190.791 cv
613.27 201.517 li
614.676 201.926 616.139 202.259 617.656 202.518 cv
629.27 190.902 li
cp
f
611.405 185.813 mo
610.44 184.99 609.572 184.059 608.808 183.024 cv
599.38 192.452 li
600.179 193.471 601.029 194.419 601.942 195.276 cv
611.405 185.813 li
cp
f
618.913 189.781 mo
617.567 189.378 616.274 188.871 615.06 188.249 cv
605.355 197.953 li
606.454 198.673 607.618 199.304 608.829 199.865 cv
618.913 189.781 li
cp
f
656.988 186.139 mo
657.49 184.262 657.765 182.225 657.765 180.01 cv
657.765 179.998 657.764 179.988 657.764 179.976 cv
635.079 202.661 li
637.607 202.262 640.024 201.662 642.277 200.85 cv
656.988 186.139 li
cp
f
585.704 177.083 mo
585.704 171.696 li
567.855 189.546 li
570.212 192.575 li
585.704 177.083 li
cp
f
585.704 165.606 mo
585.704 160.22 li
562.833 183.091 li
565.19 186.12 li
585.704 165.606 li
cp
f
585.704 200.036 mo
585.704 194.65 li
578.963 201.391 li
584.35 201.391 li
585.704 200.036 li
cp
f
585.704 188.559 mo
585.704 183.173 li
572.877 196.001 li
575.234 199.03 li
585.704 188.559 li
cp
f
411.829 189.578 mo
410.081 189.938 408.332 190.128 406.642 190.128 cv
406.393 190.128 406.155 190.116 405.91 190.111 cv
394.428 201.593 li
395.859 201.962 397.351 202.267 398.908 202.499 cv
411.829 189.578 li
cp
f
525.003 162.835 mo
525.003 168.22 li
538.77 154.453 li
538.77 152.163 li
539.773 153.45 li
548.823 144.401 li
546.445 141.393 li
525.003 162.835 li
cp
f
525.003 151.358 mo
525.003 156.744 li
543.756 137.991 li
541.378 134.982 li
525.003 151.358 li
cp
f
525.003 139.881 mo
525.003 145.267 li
538.69 131.58 li
536.312 128.572 li
525.003 139.881 li
cp
f
499.844 170.426 mo
513.145 157.125 li
512.874 155.657 512.533 154.204 512.107 152.777 cv
500.292 164.592 li
500.295 164.899 500.298 165.207 500.293 165.512 cv
500.264 167.145 500.116 168.794 499.844 170.426 cv
cp
f
571.937 132.765 mo
576.423 128.278 li
571.937 128.278 li
571.937 132.765 li
cp
f
544.795 159.906 mo
553.889 150.813 li
551.512 147.804 li
542.439 156.878 li
544.795 159.906 li
cp
f
442.969 146.961 mo
459.504 130.427 li
451.852 133.974 446.357 139.931 442.969 146.961 cv
cp
f
571.937 150.332 mo
571.937 155.718 li
585.704 141.951 li
585.704 136.565 li
571.937 150.332 li
cp
f
498.6 154.807 mo
499.087 156.191 499.464 157.614 499.739 159.055 cv
510.478 148.315 li
509.944 147.086 509.351 145.882 508.69 144.717 cv
498.6 154.807 li
cp
f
569.398 170.436 mo
567.02 167.427 li
557.811 176.636 li
560.168 179.666 li
569.398 170.436 li
cp
f
525.003 128.404 mo
525.003 133.79 li
530.41 128.383 li
525.024 128.383 li
525.003 128.404 li
cp
f
453.049 171.313 mo
452.734 169.727 452.541 168.118 452.459 166.518 cv
440.751 178.226 li
441.164 179.567 441.647 180.882 442.2 182.163 cv
453.049 171.313 li
cp
f
465.978 141.52 mo
468.134 140.558 470.561 139.887 473.285 139.6 cv
485.117 127.768 li
483.604 127.462 482.028 127.243 480.396 127.102 cv
465.978 141.52 li
cp
f
439.831 156.19 mo
439.393 158.245 439.108 160.336 438.968 162.439 cv
474.436 126.971 li
472.32 127.058 470.304 127.289 468.378 127.643 cv
439.831 156.19 li
cp
f
438.974 168.524 mo
439.083 170.139 439.282 171.74 439.565 173.32 cv
452.781 160.104 li
453.196 157.442 453.969 154.816 455.125 152.372 cv
438.974 168.524 li
cp
f
479.389 139.587 mo
481 139.748 482.507 140.04 483.916 140.446 cv
493.725 130.637 li
492.506 130.052 491.234 129.528 489.905 129.072 cv
479.389 139.587 li
cp
f
494.517 147.413 mo
495.336 148.419 496.066 149.489 496.703 150.614 cv
506.284 141.033 li
505.526 140.01 504.712 139.027 503.841 138.088 cv
494.517 147.413 li
cp
f
488.245 142.208 mo
489.413 142.838 490.492 143.559 491.477 144.362 cv
500.722 135.117 li
499.745 134.302 498.71 133.54 497.624 132.829 cv
488.245 142.208 li
cp
f
373.792 262.688 mo
371.993 261.104 370.229 260.816 368.249 260.816 cv
365.477 260.779 362.814 261.823 362.885 264.091 cv
362.957 266.467 366.053 266.935 368.285 267.331 cv
371.453 267.871 375.808 268.41 375.628 272.55 cv
375.52 276.474 371.453 277.518 368.321 277.518 cv
365.189 277.518 362.094 276.33 360.546 273.954 cv
361.842 272.802 li
363.318 274.926 365.981 275.825 368.357 275.825 cv
370.517 275.825 373.792 275.25 373.9 272.442 cv
373.972 269.887 371.021 269.383 368.105 268.914 cv
364.65 268.339 361.23 267.691 361.194 264.127 cv
361.158 260.636 364.65 259.124 368.249 259.16 cv
370.84 259.16 373.109 259.88 374.872 261.535 cv
373.792 262.688 li
cp
.7037 .661494 .6318 .686549 cmyk
f
394.78 267.619 mo
394.744 263.228 391.864 260.779 387.58 260.779 cv
383.91 260.779 380.742 263.264 380.345 267.619 cv
394.78 267.619 li
cp
378.545 268.339 mo
378.545 263.012 382.578 259.16 387.58 259.16 cv
392.584 259.16 397.047 262.22 396.364 269.166 cv
380.345 269.166 li
380.705 273.342 383.91 275.754 387.58 275.754 cv
389.92 275.754 392.656 274.817 393.988 273.054 cv
395.247 274.062 li
393.52 276.33 390.424 277.482 387.58 277.482 cv
382.578 277.482 378.545 273.99 378.545 268.339 cv
cp
f
404.249 254.084 mo
404.249 259.447 li
410.296 259.447 li
410.296 260.924 li
404.249 260.924 li
404.249 271.758 li
404.249 274.17 404.753 275.861 407.525 275.861 cv
408.388 275.861 409.361 275.573 410.26 275.142 cv
410.872 276.582 li
409.756 277.121 408.64 277.482 407.525 277.482 cv
403.745 277.482 402.521 275.25 402.521 271.758 cv
402.521 260.924 li
398.742 260.924 li
398.742 259.447 li
402.521 259.447 li
402.521 254.265 li
404.249 254.084 li
cp
f
430.817 259.447 mo
428.189 269.635 li
435.46 269.635 li
438.052 259.447 li
430.817 259.447 li
cp
432.617 252.032 mo
431.141 258.08 li
438.375 258.08 li
439.887 252.032 li
441.543 252.032 li
440.032 258.08 li
443.307 258.08 li
443.307 259.447 li
439.707 259.447 li
437.116 269.635 li
440.536 269.635 li
440.536 271.074 li
436.792 271.074 li
435.28 277.23 li
433.624 277.23 li
435.136 271.074 li
427.901 271.074 li
426.389 277.23 li
424.734 277.23 li
426.245 271.074 li
423.329 271.074 li
423.329 269.635 li
426.534 269.635 li
429.161 259.447 li
426.101 259.447 li
426.101 258.08 li
429.485 258.08 li
430.96 252.032 li
432.617 252.032 li
cp
f
470.631 253.473 mo
456.881 269.599 li
470.631 269.599 li
470.631 253.473 li
cp
472.575 252.032 mo
472.575 269.599 li
475.743 269.599 li
475.743 271.542 li
472.575 271.542 li
472.575 277.23 li
470.631 277.23 li
470.631 271.542 li
455.189 271.542 li
454.793 269.202 li
469.371 252.032 li
472.575 252.032 li
cp
f
491.044 277.23 mo
491.044 261.14 li
487.41 261.14 li
487.41 259.592 li
491.044 259.592 li
491.044 258.008 li
491.044 254.481 492.449 251.925 496.372 251.925 cv
497.703 251.925 498.892 252.393 499.9 253.149 cv
499.036 254.444 li
498.064 253.868 497.38 253.545 496.3 253.545 cv
494.069 253.545 492.773 254.912 492.773 258.008 cv
492.773 259.592 li
498.64 259.592 li
498.64 261.14 li
492.773 261.14 li
492.773 277.23 li
491.044 277.23 li
cp
f
503.573 268.339 mo
503.573 272.802 506.812 275.79 510.844 275.79 cv
520.743 275.79 520.743 260.924 510.844 260.924 cv
506.812 260.924 503.573 263.875 503.573 268.339 cv
cp
519.878 259.447 mo
519.878 265.387 519.878 271.29 519.878 277.23 cv
518.115 277.23 li
518.115 273.45 li
516.387 276.222 513.723 277.518 510.844 277.518 cv
505.876 277.518 501.809 273.774 501.809 268.339 cv
501.809 262.903 505.876 259.232 510.844 259.232 cv
513.723 259.232 516.639 260.564 518.115 263.335 cv
518.115 259.447 li
519.878 259.447 li
cp
f
536.87 262.688 mo
535.071 261.104 533.307 260.816 531.328 260.816 cv
528.556 260.779 525.892 261.823 525.964 264.091 cv
526.036 266.467 529.132 266.935 531.364 267.331 cv
534.531 267.871 538.886 268.41 538.706 272.55 cv
538.599 276.474 534.531 277.518 531.4 277.518 cv
528.268 277.518 525.172 276.33 523.624 273.954 cv
524.92 272.802 li
526.396 274.926 529.06 275.825 531.436 275.825 cv
533.595 275.825 536.87 275.25 536.979 272.442 cv
537.051 269.887 534.099 269.383 531.184 268.914 cv
527.728 268.339 524.308 267.691 524.273 264.127 cv
524.237 260.636 527.728 259.124 531.328 259.16 cv
533.919 259.16 536.187 259.88 537.951 261.535 cv
536.87 262.688 li
cp
f
546.7 254.084 mo
546.7 259.447 li
552.747 259.447 li
552.747 260.924 li
546.7 260.924 li
546.7 271.758 li
546.7 274.17 547.203 275.861 549.975 275.861 cv
550.839 275.861 551.811 275.573 552.711 275.142 cv
553.323 276.582 li
552.207 277.121 551.091 277.482 549.975 277.482 cv
546.196 277.482 544.972 275.25 544.972 271.758 cv
544.972 260.924 li
541.193 260.924 li
541.193 259.447 li
544.972 259.447 li
544.972 254.265 li
546.7 254.084 li
cp
f
568.552 277.23 mo
568.552 261.14 li
564.916 261.14 li
564.916 259.592 li
568.552 259.592 li
568.552 258.008 li
568.552 254.481 569.956 251.925 573.879 251.925 cv
575.211 251.925 576.399 252.393 577.407 253.149 cv
576.543 254.444 li
575.572 253.868 574.887 253.545 573.808 253.545 cv
571.576 253.545 570.28 254.912 570.28 258.008 cv
570.28 259.592 li
576.147 259.592 li
576.147 261.14 li
570.28 261.14 li
570.28 277.23 li
568.552 277.23 li
cp
f
594.328 268.375 mo
594.328 263.768 591.051 260.779 587.02 260.779 cv
582.989 260.779 579.713 263.768 579.713 268.375 cv
579.713 272.983 582.989 275.754 587.02 275.754 cv
591.051 275.754 594.328 272.983 594.328 268.375 cv
cp
577.985 268.375 mo
577.985 262.724 582.017 259.124 587.02 259.124 cv
592.024 259.124 596.055 262.724 596.055 268.375 cv
596.055 274.026 592.024 277.482 587.02 277.482 cv
582.017 277.482 577.985 274.026 577.985 268.375 cv
cp
f
615.639 268.375 mo
615.639 263.768 612.363 260.779 608.331 260.779 cv
604.3 260.779 601.025 263.768 601.025 268.375 cv
601.025 272.983 604.3 275.754 608.331 275.754 cv
612.363 275.754 615.639 272.983 615.639 268.375 cv
cp
599.297 268.375 mo
599.297 262.724 603.328 259.124 608.331 259.124 cv
613.335 259.124 617.367 262.724 617.367 268.375 cv
617.367 274.026 613.335 277.482 608.331 277.482 cv
603.328 277.482 599.297 274.026 599.297 268.375 cv
cp
f
622.192 268.339 mo
622.192 273.27 625.468 275.79 629.463 275.79 cv
633.639 275.79 636.735 272.731 636.735 268.303 cv
636.735 263.875 633.567 260.852 629.463 260.852 cv
625.468 260.852 622.192 263.335 622.192 268.339 cv
cp
638.498 252.032 mo
638.498 277.23 li
636.77 277.23 li
636.77 273.306 li
635.294 276.006 632.379 277.518 629.355 277.518 cv
624.388 277.518 620.464 274.242 620.464 268.339 cv
620.464 262.472 624.424 259.16 629.391 259.16 cv
632.451 259.16 635.33 260.456 636.77 263.335 cv
636.77 252.032 li
638.498 252.032 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 22.1.0
%%For: ( ) ()
%%Title: (d_141-02.eps)
%%CreationDate: 5/17/2018 2:53 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KB7&o'e+!81^97DFOId#>]5^@t/Nk8.oP21+:eV:6qsaOW=!P7RQ*]X)O<s'8#'hb61jr?9]GrlAc!n(`NZ3Ic#?XHP#/Z6A
%"?8kJ!ZWTdp:o_NU[#8DmXpEcAR5RK5/N1$I_mSp3&)TbU(#?pNC(+J2`ho+.-U&A_PeDcHTR>a95=aW[5,=g"Wm;^h=r3+YA8h1
%H:C%5hpU&dSi4fIed4kZ"rHiKpu.]#H4!XPT5hF>G2,>O=hW9Mh*Z;epi>BliRHU/.RnhaA<')#,["OfNpqTcAa"c`Yc,Hj[ARfR
%>]"[YX]%*G0C)GuH7Y2EZ[,7h2c*^l%+)aHF>K$.93Sg]+^GGb;!;D%4TJK8!gbJeC#c+e!.u@_4gG!KDf!oPYlBD[q!Wh-ItH!O
%J.Dp]SP1@:D/]VC@KM.;DKFA2CgR9@ZA(Gt#M:k:%F(u^^Hc4P/uLX3FfhDPh@LDJ_W*$>-m+R?JKIj'5Df_@*ogBU+t*F8UBW_M
%LnYK<7\NK_T_9(&A?CVlVUBstl@3UTNc_D%RhkIkAg^g]>6c,bKH\B*J\8(,pUXS\c'r=QK92=:R6nuADA;b)HH<37?.UbpH,^?o
%[30LY=k5Z*1lQ_sW4O(+1A8D>DW=Ff9*\M\X[XpIH8B3hir2DM6l$hG0e+<i"[m`m7ft=$#'`O"Q?+!USL1$?W55W@QEcN_&H?++
%eT/(.NGoA\m=*,pLM!sX8qtOnU>uif4;.>b.e^'r?%dU'UGqQ@@C`kc\OXZ,aEc?O,?O+fnkH4nK?'Xb\S*)m]o"%3C*p?KL;j3j
%JjiZ81D'SeUUSWV<5A!"bX`BE<>>4t8D'b$%p,?X]0$UJH(NecVt&g.0hDF#8V1lD"CRAq@$6aLgQ`u^jl%l..-Ln#Xsa:I-iaID
%i%KU,&ce4g^nZ_hgdrak-Con'l*M_pa4"`&8>jQsUsl-_Udq4TEYfe)n+4=(DuhZ.$iU2Ei+6CkmK$5T(LR4lpks.$LP%\tGemb^
%#"ZR;W/;!!W>^kM^DM1i!6'I)ZqA?&oDlZ,2>@P5kqnXX<5P1R,>H1@$l/[dNtUdc!i5^hGGKZBH(.bk#l+KT^_-Q4<J6G:F)oSN
%*..`?^sT#9)&i'"i!=hk)^%]H!<-/mLEcL$@"9L"-,_(q63`eK!8=f*!I*D_,b&nOMe)/TN!u:@2?\AY!:Du6)JPVhD3Ks0fKT?<
%#hhBJ#i`l2k2\GY#_)l6n2fJu`e?M`IfT`b7$$)-DG(T[510YoFISh<VQoq,GFl#I@1$40Ctb'"-iG9":Kf)tLHBDf`l=']+2I7:
%8bJk\EhE83SL9"]31J9d$kTB^NIM3a]@'KH6''dKlcPVY=KWVT::FfMj[B$Vb>#G+]@=:0g8,#GaW=4T\2tsZGO7$;/X)(6UF[67
%d$QB8j5_H\iAbl$]ojI'+Q)!*q*C("+t7Q9j@>NXGP=^YU/CJE)Kf5E>!K#ZDRij>'9A@GmZm^Ca-0(mjBfr(.Rh(`=7X6g5F.lG
%)T#iJ?h3%P7]q7d-R8gL&P[6.Qi5VQ\B?<6flWC@3TOr%<WS6l"2WeldeFb?pkg.8%?fYB7i]Fgl"KN#4[/5`kUS#Z[m']sO(00E
%53dP`k8F(;+^E>n`P!IdjT]'`lQ\^:aMX,4s5K._Hu&@-)L:&fLL4\(j@?H!=:VZ-^7T\AOoI2obLEYT(0GqEs1,SSOtE_3),idq
%W_r=-rZR/<j:g=&HR_.\7_Qe7UZB72MJEpb]N<W]>X'DfhQ%kbkXX^<U5"_*+=@17-mkSF0465LE-9@^YK-a/96^2%7E/R(73W5l
%o/730BnT6E&YRT22;g9`bMbuP$D[c_!)(+b49VEE`aLh5D5O/m24s7:n*pXj][_9Y6YXD_KOh%9=LP<6U\h?-6NI*r/DrU9SBr0a
%kSTqq8DKkBPko;Lcas;_4p.dj\IugfqelTn;@%LZdLi9k)'ki$'e(<]%k%c/K;A*'BI%E*Hc-Jh5W!7;*<k!srZgu'4qm:")("-n
%ChoM^PVB);9;u):!A]gk?f:`G-L@Xir""XD-#rY"KA>3_o';UZ56C#6A!%oZmK[`$Su2/m+=";O(P^59rBPd`FC8BEoGb&=jKHg#
%,3RZB\3o\q#&KMor<3Qj`.j8`p=VEPh!GS]ENqUKW>:<sQ-rN&ceI(b`B^@OEaBAV[Q`\3J:t<'I0^-6f)\W;cBF2X&-.UAXpKJV
%UL&qX@\tG*@,IsDVGZnZ&N<SW]H&r1*'qae7hLGE^<7/?o,L-%J\RSt0E`/D@egsO]"Vcbqt/_U.P%!1R-X+AgS?(^LeB9CTEH,6
%@ll/BcdTN+_^(6tn=nof>?$EkWKq:PmmQGsWO?&@TVQ/>/8[^=ClL6nA:<"+m319r8XrF74S#ok%n%Ss-3Wlh&_id#*,/';AY=O;
%GeKQ3,'NQaLLq'%4_J,Q>[I@6hf(P?`6j&bD.spcmU2OYFe@6_0Rqk@^e#_cjF:.dq-3m)W>ab3%aS2NJ&/&]6FMKOF]q`:%n9l:
%A.dm.P/SOA*UpS]r.pIR)0#Pa@lEoSF.CZ#X<NWkTcZuhNVDTr\6@BIP*LhQC%U)i:Z`cR$[C>jU$`@q1bmL-NK7Y*>ZF7LX,sY#
%i_!C1"(ia8YiCDH/1PB+X2q"HLGFC1mii-Nn;ibe\j,'J+G'K3hJfR3U2EVS(1<"2PQ4EC"^RnU_LgRc'#G7Z&fQu&n-Fui5AGTl
%&V$\!."DaE7dJ[g6&o4;?i.H&3:nWn:L!icr:]/<pB)W2Mcs16D=aNMs&2AK(UZGkL_Cg)TA04/A%@HM\0#D?VbXu=iMau[^Fh:V
%W:aNbg\cH1b6d9g>W4LN)^mHk/5AchW<VB?$%Z(o#R4R-9@GqU=TkNkBI^r?-mZ`&SqM>A?_W,4G5f[L8'R04Te'&*g(PkEbZuVN
%$R((6"XsZ8@DQ<6r),XdgcH`=i!M(b-X/G&>35t/B2A@80@kW&=R0Hg#irlE[EU$nXFT=8=gE'i,DXaigYcs)0L3c_J',H.R1j8Y
%SiT0N8l-+^9J28^MMaas"%3:A#l0"8J0Mq9,+XYnH6ef,.S0B^]M7i07[bTH0nRpG:,f9WCl(/G`cuO>/.#>;+=n@)M]PlTnWU%6
%$:bg&MOO-Fa,t2:2ng8(G<1A4ZW7G&VqhcIG9@0N@3VLGdWdTf5\T7nBl"^8EV@nfP9n5jqC%Ki&QK5b@%W]]X=53ROgT7od,#m:
%(hDYd_OLqJcVDP,0F_\H/5b.)43TlJWL_s:b'S^ic&#PZZe$T*8&F;DCo,Z6nr42&6omR:'/-';a5J6QH_$gY<#,D_0@js4>;Sfo
%HW93j#rRnG:FJIhLt!)gE<=Gs,_cc!k@uB9qgY`LiTSjd]80i$/.Eg<-D<LiL/^PnOid_FE$COI$oScdL?rT9;'Fm,C:kqM3RB4?
%-'^n0i+[q![7gQ0SCh1k^JdbfTHqUY(MkF7Psf3c`jmL*b!Z`h.@qP&b80FgEZOW1TH5A`9:Si+^GPij9F6oAIajAO`g@'qi[6c'
%R)W#DU((\WHf'G^"k5sBOU<X&l6q%8INfi<mSVUr1_-<"r"pPj=kka6O0`^FSd2>^\j.jDEBE3^$V!l7CC^\O<n@TdX>4?\'kHA;
%a/]u!pef8:j*_lsE_aX/2WC<\,QP0F#$AN=5of2jK!.W@)<+r]cO;O166&cFMdoqG.q3&B-!nHo3YXdF-j'70'sY.>+q7uk5_*f"
%UV0:\(*\/.Y0#<.#HNq3<$Ds1V2Zt)kV6U8Gogd_Xd[@**/o0H'cP0bi)r?`)ZC2W.d=4?P>K%)\EmQX\Dnlq.adK**-b4cS(.6=
%e%!)nKA!R8Nj9#B%0q>9q=2uaCs#"Za;#m*9`I)#lQ_5\dmj=lWq_FQs1k?Dl9K1TFd/$b"g.g+Pn2>5\7$<KkD@Dn"kIn*P7LSN
%nisDP&b4\l/2FuCF\8u">D2;sMdo\Vs,P1u]%4XagWZ&#d\Jr(23I]'Xj]`Q1IX9@GfFRrD4K(dqA$=rHbN2ge)Z:3)_-tISDUN,
%N67gO=+XR'#l9c-RJfYG)llkQFQg,eF>KU1!li!3[/^,mH!$6)+DCiRRinb8nRN&NlRYWoMg,CBIHtBAT`/IHH3!sp]d_37="Df-
%Mr$1#Gd/#j#VSO,OCRXB9f/tn*)(+Qcs`GFUMTmE?B%[poG?ZI8J6]Xn&L5m!og!h:mWZNBh^W7+Btb\4;NBNU$;?f+E?TRpm4Cg
%/[D8`/EW2p4(5*l#7PU<#3Uuf,R[qe350O8onCt)j)goa)mXW;N6RHq'2F4"S@rOk^5gO$=u11+DOhtA2oP^g(b$&8V1GUM4%DV$
%_-g0.86&\V?oc<Y3`fECW2`]?`,m==:T"fha59=/d+nL@"$N5l*6r1Qj;7--pM1sFk2Af=,G'@gV]n[#(OlS=+h'#A2+DjX1NnKm
%7*rCWL5q'WrAn=XHP^Aa($@,<:G*cr"mQ"7R8Cp#37'%Y*-RRf6nQhY:<F[WHC!EK&_JgQ'/JZOh^.3I9I;+a^Q?)uA/nJNfK$Sj
%7E0u_dmnH<kV(KG'g10$d/r+n/3f-"m^IIi'5Dd;=dB^lGZ^5bcfci]=8Z?7?,JO=3fg)C6$2Kg%qK+WMWZ6S[dLhdi3;.-.(BbM
%pjoPGXER7OaP5J8nEpt&_/#j@`6?/_,oh/P"Q=X3clCA\;-@$smNJ)3V]oB<SK#ZArPp^5Nj8..E#EI9nLPAZHY2?L?E\G2>bjM]
%7])=3[i/,r3@,,5gqV6SYB(KF87[=+>k-kHdi#<i&OE0$7d+Y.r0%!cra/hZ_\$pOaWp\,pj/;N@3Cjn/8*nudVl%[ED:m)&0#Zg
%nM$'2p-IHn9>/`3`l?D3IspItnM+0^AK,4H'LBTP`:"pSs1utG,=I:[qCgrIL(J@q,QAE]s5K!qe-g*MeY>mS(#^RbiWM[3f<tTH
%ZT*:54!aJZ4k"[@U%L(a#gNY5]N:.gS@lr@U=T>P^<I0>PkeaMJ[Mk0Mm;h+$LA=Hg,F-IZ8d4-^fmlYr=\&h6d](-YDc<;K*\AW
%MaLM%F^XpM[ri%a87kL_qZJopGqGGHpqgR9[7cG9#l0$)8=P4JDq//i3t?M6(%fep39ulM$B310.!R4uG3!($"E-<;#a+%8)'SU"
%FGD1!3,Y&Kl_kQj_kqDY1+s-U+KJ#0I)o`cpgH;65pIk&/e+g'>>>GC=CM4(.YN%-C+g4=.5,IjYhY^;*H:CCT*%Ld;S7[1Fq,0K
%XB6]WUH)N0=[upm/d\*)=WXMMF&FucCp.<WIMHYE`"9'jBESPr1+/3ZP(&$>?:[R$Z>*Wu*;t-(F3a>#'U2%LDH+W1UNe/QK$uK:
%/VO&&Q(_VHAurN=82k'+'_@T#-U@5"\':<T6UrOXOh#1A>K"=Qg]32KGu3!'3MBF5!&9c+-.u\7)/J\Ki-LE*[WX"uYGH5FIZ2q;
%"Ha$SZ6n)&R4soo]Khs.j:*'ZVD2IV<22:YFh07<1QmFGZ*g[836-ja,f.PgJ%Pr>-0>OI@oRQjjMNa=;!kTr&ifjNLE##0j]4Ul
%WCi#GXXs"d(`M"GU1:%sJ-oiQ%NupaUd?EV8%/uh"2`05hOKj5LH,p'F#l&O-mm;(mYZnb,tU,@;5T,-]Ut#$![R1#0X-V`-/b02
%/bqd3D/3HNqC%l^Yr9q]:.kd#p_hs5%Ki;P[2&EA[h+cg`_Eo)rl,>J!Z\2$M%q:MR.:RC+AiEH-$:I2H.Y)MoF('tbXMlh]W&<&
%B["PMFT[%W<kON8MdaZ;XZ4A*%A(p;p=MD@n'Ir)48k$Q]GClmPD+LPeD]".N"R.H4q;p:*$H>b3?%qGP':jHj90M>&nF!6XEpVI
%FVH#%oAZFI'%d]HXoc%Y$AH:T6^]q2TP^uaadTQ44)r-n2al5KO=Rn8Z/0)gealJ55o6(4W-AP,`mNM[2jjJ*ds8a%,2RrA\d']k
%`0_&O+Q%8^fot`>Bu8a*J9<J-nug?AF5ct]2CMUPhnj:?%7#I6-G-46eN#WF670m^`fUe72KIjm#d!@5a0FrH#$S`JP<!WW)=Oc]
%^S,gAlX[Vo4)&UR>EYjtr<oUNa_+@tjAChkh^[/:`"[YR_Y(;8Z];Bk.0BAs=s$#Jkns5gf_QC^T<fuN*iJX7&T3P1S<1hi]%2@M
%7W<P74s2DHDB&<PXaabKE-;NM]im=63^i*H[;O$BbGf(c?D_Ic9Ge4`""q5YQ+Ucf@iBKbCu'6Ki-SV?dr#%Q?6P47hC]6/5d^o:
%F8bKU(Z\op/Q;,4RtmlgD&kQ.`c(l];i=+O&)?H(NaYuger,+&r!3)(*a$<5>n5phXao\%h]8)?<c+t"WA%W09KbZ/U1a!tqb$I-
%;D/o"_l\HRVOG9cFee&tR)%,!R&Ojqbm`ML:5*?2hpEGRNK[Qm!:$,%W]G:/h*T#2CV_\fooB+BgnJNJXP3$A!gdV5k7>J3!Q"'o
%/q1.7@7KlRol2j$CO2mTl)iDarK1:<SSgsDVDC/d:es_7+?$1Llf_!YW7S(=h96YYC7YdgN7Os2icVq;Ccd8@^:Jt!ifQ!b)A=%S
%6eTsmQ"hHR2nSHL+D2O6VtL/cSX-q_n1AmJVU=a;NP&,l[MqsthNA9cj_CKlBE)^jF?1b'=#QPmb9e+!IOm%#?3F666_=*On,M4p
%S>QS!KPo(5/(jtFR6b]bD`R2e`RE?EQKYphOm'Dl&WKu&UGZ6K[kGiZk*/iMMA4/DAN:AMqhKn?doeOm7bWDoV.pZXRm=DdmHC^'
%)i^02D&*6,MUp4\pt:a3[n?0"=]_g"%#;mW<L+deZaY]\iH='Aoio`)^c)%4IsuQL'Qs=6=Y7G4j>HP40t1VC[6GW'-Ft'a,D/H(
%&Hcab9a%D`VUc,RW)W(O;f?+N0!KJWN1+f$rcJ,@[*d,UQ=6*2"'\o-Bs[.2qH^.G/Z=P5/QXu#i0mi%J>"%:J=BJsc6'j,'\HN,
%P<t!.Q+n`ophRH<plbc55:;5<J\Bu$kR5nZ\1t(s*fN]ngi&Y3:7D;D+7uA5<0,qdHE3dRZ/a64(+HHhTM<!=:Rb,GFNo1LH'8D[
%r)f&Y`f>dPq.-9T_MI5La_P`VD<da!KK5#ql%,H@E^6bsaI.@d>Gn`62W1CXiPsp+lo$I(*US'A7_<nr-\YLJaEFT)AK-\6)oLd;
%FXl0od$2[b(^B=T%*!(14Z?,MGWJ$W%ML!_f'&P+rK%/j'IKJE@fi+JXqdt]@H-FiK:<i)6V#j_L=+Fh<e^Yl(NdObJn)#CNlicg
%jVRRkHX>_oYa*^2J_3)LRmM5ZU"hJu0G!9B.?kM.Tj5^hORl\k0WOO/'?j=,kjqno)Ib]6!M%2No2olObKXP-Gq:n8jh/Ejn@`9k
%.Wf8JQ4%ck+I]&m@`m^k'^<R/ht;<(U(rYPk#5?il,Vc?2_b.Drc>\M9^9Ao2<YR9Qg"[G'OLT]GF56'LLJIR]mrJPgMU*#ApcR]
%e*T(mYZm5Z,8MZ*&nu<X0hoUng*SlNR!S.2PY,f+1I<!l=Oo,[DDNa'/43iG>'clHf?Da:/Yf:(BaE2faMaTcHMeCFZea$CKV/._
%V!tEP/-F'M$V&r+\,WB8%m59#_I%GSjK8YF.HDo.l*S'78Ls#XJjtNW%t(P/rt-.l"de%Ro("F^oP)dO.#p\[j2^1uMP9flK&JCV
%LW6\kocb+doO7\DI>j+^D0F4g10g<`XrCNen=<]oB-s/jC:uLt)Yf4.NrSaA^iZp:XMm;/S)p"q%6tL?e7aN32F1K>0Q"4+GkuAe
%V]1D"8K8f^_Gj$m24b!WIaWE#qb30&_89!]:"7C%Vp`pR1k_8GgK:Y&n.>bDj7nZ>J(e`)=#.Hr;'_>NkdbSsFVr5goQKF%m<d:A
%QhFn&b%JH2B-98%G?X)q7@U:&#?'J6jbnNc1Rg98L/F#$])FY-Ct<f;a2CFqp-G0OZ.c%JYRNSF=S'/+aspHX)U46,9LWP-KUJ6F
%-T"NjPP)sLo/@,b<Is`N.1GSXL*>GINQma?PU`m*ZtGD2VpAUnrAtV<G?@N7%<PXB@_QDsjEgs?1k(^?cgWDd.Pa]0@!p/Rr=g=5
%N:-,[dl>7OU;nYtlH].t>Ia@om@RSMRh`gsis-9';^A1Q's60=lWLo]?T(05U[EJ>;QQ`n9H8F#^]$_ML#9,B4^J:X]/sH<gCh5Q
%)apOUVLR,lSq=(V`]]t\Alc!-ZJ'3H[=SlATfL_.1MLlsJGh.JpQ>,s*)ANkOiHjp!N2@mVd6nl1fPL7V!h!1GBo(9g?e%5#okYo
%X)qSJp6)#.@^YIODcF*2G#>0j\NH)=I8D0sAk2,8OSSUn;^g3>R7;g@nIYtp'J5eDP9P"H'aibdGJq.n(EkI$UsLl>m&s;p<\.;1
%[<j`T3M;SQW^OBUXG#K<8$hQa4um.%oXL5_G2jAUJap\L_bUV2Alt/Qc/n8&._BN59aVUBV;F"@gi$\S3)G^3898qhJXR8kokIFW
%.!D$n[!L]dT\2$W!M'p&>5]!!0+.Oun#)qKP^X6rS7lH,26.09_n#TDHLM@RAd_,l.oE/f5V%5[PpeK1bY%_@L0(*GO^ZrIj'/ZS
%q8P&s/:=@l-o<:icI\dm\4sqG'H6\7("4sGM_]f8o<g"H(4Hsk_2PHaq%eu%Q"HNb[4$atZke?"R9?dQhf::Uq]Apu6H+W,Y2-hB
%>*QmJ>)P_"bcL$<=^R(R7>kjrp$]I-V=:&,U<k#=.oQC'B5(st9aqgh^S!G28^#dN4HF62f:3J[GN-X/&E9&M@ZinL<p(:!a)=Os
%T$#dj1(;Vi(c3,*=ZPa0],cq1X&&\^W+,_Z.5Q%Yp(b7fc1N!o&Bsh$>d)EFg.^_<P_i#pmb6H%RqB(*"-_$<g0C\,9rlO0[CNV%
%f4oB/p0G%oG=Le5!qY0q2C&u(n5#rmB5.Ke/k01a,C(n2'LOPjUU_6;GXc3F,/n:bK(LqNJj^.9Ucbs_bc?FQeN`_QVQTmj2M"#P
%e&KS]Al13]S&=,`l!"JEd^;i5l;.Hkm%d085L3nqc>t`5L,$'9ZZ_q`36aZPb[lYAF(&d%R=UPug+>8lANVI6P>Id5:aX(u!B.qP
%!EMU<R/m)CU!Mp@6T5(]Ark-r,*9!upbH]hdJ%raiP,rf:1eo,eVhF[Ae@6J3rd01r6n?"Bc$b%cQ5gZT&cS4rY$W>-F;aMBXE^V
%MSh*Z_t;GCe7XtE":6$ZRFD9PH(l4:`7-+^0GFi:g+YX;33^kk_m"D@*tH-jh1#bOL+UI:iP<csY*osg8F>V:]ku9CC8]M,4#Eg`
%Ao6T^3dgI%(s,pNM"i02k<&Y)48n=5^[q9YY@?acs.-sAK@@i`oD.;>r9o%4G<Z'(71AAN^On5.^BnC6s%DN<_@/-=`$ddjq4-o<
%VLk[-Yr/0FS^7,WkBt&2&C@^`QLZG@+8!M,*""'k=t4[LHGX>>'A91DSA$?tL#$*^]l*a&*lWH5>j3A]Dukt6V80>0JVeX]'WSf]
%Q;Cs[bE[PG.G'!sDJ:[gpdR`0)P_S4Cn;f>B?93QZ7dOT..$Fc9f>^[ZM=l<k@q5Oh4p$r9jM\WOI)odO<LcmNS*]"UTSfMVI#3!
%VUc_JY<C4(9gVK@.FOX<hpk3*1[J[r4uI4F:5TE*$?Yo$qF6l;o>"*\9p;[<OSoRrnO2!+,Y=YKApFNcan@RMGtTe5a4O)afg9R8
%<I1MAObm4j$9>>;qh=rFs!*a!Y(q_9h][>7`LlbodDXD9j^=g05Gh/Sc4_l&`61:51/GR,'//sqb<5=cDjjs&Z]N+`Q%d'MQ[.S%
%RNp1)ioLQ)QcYZPn$C;PC(a'?.sRNI%+:Id^o<B-^Y=e&Dg0pR<$WH4PsUl*_^9%,3LKNX->3lLQle4@*B6ai@2%Pcbnp![l_`Pl
%IbU&5lIAX!Wt(]<RN'9r2D!<p*9S\(9o!`d%OX!Yl`$kmMdMEnkI,BY4?#KUl$Ju:oEDhO:LBQ_^,.8srQh!4Pc\Ufj,a"/C;/H*
%I#:k#k.C2^`[.#JmHbN?MC]7dTt\JjInl$3BQ0VhgF<DrDXj*?m:DMSD7p&"@-U0QPrrh;Iu/1C0?*uV6J_)J$qqUOIc3-)lk!_L
%U!5oW`q%@EGRgk>F=W+d^e%Zk<hMbAO(selAXru`.:g;s8:_2/0/Z$sM@Kq2VfmYUm=-^K0gBLMS)lB#GogIM@[`_2@mn't*eOZP
%GogI1,McLdq0=#kT#[3Vb09Goo/t$Oj>$Wq&R%]">,LrJj0QTu?MZFFQ]IM;Tqg-kN%3'rF7S*gKUh<TZe@6&EILVgC[5\5s6T$q
%!f[`H"$\6i$5@cJR5m*kk*W)Z[rI6AoQR<`iEkG6+k8ETSSG&V/@k(>G5tmN>,T6^#<g>upYFC!2a1o28op:lUI!qB@'IaEiV^cm
%q2n5^8U+)l(>n&gU^4roJiX*qY@pT>MtpLI_smKiB-g8)q=Bk]K76h[-eC6Ih)\G1Z^DN'nj96;n=C_J1(kD\`jJC8C;74!CRurN
%$2_KhJhJTqAn8^o%4Y;jgkuAjq-pPlQqD<<OgebGkPmo;V9V'0D"]XSbkFiN"1>j?17hs[d6&4`iRXKVT;6rtj09Sp'[<D`Gr.I@
%k2t(H[%K49k,&H=Gr.I&d2[kps4sH\Dn302ib4$k3&_<**!N%uiS6PcRtl(VE,H`Bc,2P#rXlnH3(J\JN.c7\p)=-VF@aVC]'0Lb
%mL5jm2DlEMn_N69n+L?"M?mX>+N*7B3Q_g'1\)HoR6Ob^IQlol>_s=\=(6d&I37SDEt69Y9JX2>*'*R*n*PL./(A#/;Im/A6FHF:
%2H=M$h>+*HPGP_G-H11n0.WY43MOH)<l?BqN&Qqu6q`@)BQa=7=jEG/e')L52Ep=Zn\'&![sqa+iL4RKUN-Kbd$%oq$EU><CaP)f
%IS2[qm*kjMUp0`k6?No,h0Rn&Ga&[/,1ue.V!t-]8^d$q-*<ih18Q(?*l.b"1oT;-4#;&:rf+PI4Q4QU'XFY8?#=\_-I3[Q8J,!t
%3,V9jUMlC]D@c*0:r5hN!b_*%.ebAp`Ra[?DK^<s=*=]sJMYITcDENj_=.)5<)\:TN2BA3q=Hm,`K$MFfe7SnrK#0.]=D_O+*?na
%oSVa;FkHB:.Fkt-1_WX3gaDs_*Q_L]@&BKh0>9Aob#S(]Sar"Xn>F-XcBI(:84-h\C,>ujS"RDj6pS.g0KpK/al,KPLLFs3HoMD\
%NPht&DL=G5PI;dpB72:Y*d@JJU1RFfQ%i',g4bs#O7d68UK**3A`h!PM@Ib9)b1gC4?&;L_+W6p*9m.GeD%qq7_j*"3;ku6T='Zb
%QpI=YCiERKSmS8RB87PCZkkO?&`;mhgu%ThU@3KFm+A(@AoVtLr1.ctK8CqlG6,_[2s?H(17j*m,7X0Z^faJU;fB5c)QJhWP`;(b
%>)2>+p4sGX1EG0!%J+r]Z)1`"HnU9D],pM4lZ^9A;MJf_N/[7M3$]_B&Qha*.2flQb;9fQ0)qdHY`k=N)*VTj$\$@0A@3;B/GXGs
%lsM:DW0I0ja#AL+M38aLc.&csQKISu1[.\^#t;+gE7UgujrNaUA6=E7mRt-ZY*p$JInUf8\H#')]VFTSqCQR`d0Df`C?&(er3Y9*
%[7Rsa/6pMs)MuN9-89)=fjV5)fjlm^Y0:L7bMj1@*.gNt3(G*(C<^pYk"Q1]aR`d1C8TiZqsn'TH/`<H*(S(,=\j@8qA;U@]];eh
%fB3akO7MUaM<1pD@ekq.nAU_:/ZZoCo9O,,SX1MY1(fE#/rXBHeUij\$!ZM2]j,E#n,2moM\a#C-201f0)BpO?d+*_U_\s&*f-<A
%FsV+1279`-"tn.ElJoCD!HL,mea(a@Z%*U'c7nNfk\mq,)/sq<4V4kZKTP\Ik80dLUjmp2YTBt-F\jWEs"b)_p&+^_rE%''ea-i*
%7.@WbLaqs3NN#"7eb)[-s6Y<_btK0a,I3u`*/ZNrP,tmFJ3P`d%"1qh<Y/gMWO8X><("9-iXG.r3aVK%s#1jPSf>HC02k-NEOS/-
%X'\6b$ru#BVc3F:_h]QAhou)Ma;]9#lMl,UW2F`>$W]KU7\SR%mWMLoBW1iGb:Wc@$"&,S!#9a;`IQ^\<A+DsPjc@ebti(cR#YF#
%)en>uhpthsmC1t1ZQ1!#i".Tt(`WB6]kRAYcMUKr;:J)l8p-n*e&S'1K6q'[DGC@eq.^T"%Q8c1.=suNPLV`2(`NfM^#2,=.K9.9
%N-$;1hrofh$AfNJae5@"`#7P"8n%U@HF3aWe%tO(B;+)J(l]t@J%q4:\(b)]<S,'A+uuI^e:0i'ZK#!srS.;H?D?4-r@nKR4Th.c
%?*>$XNuI3"-m+;ON"jpUf!Y>[]]n:5Mn@to5ORSe'R2p(n/OA&6)s\@if:NebagkB@?)/!&OmCtYm?@qf8I92f9@Dt6o^U$a!*Ba
%`AQnsPTY\0:Y[WniKH2]aON9!9:\_^=rs:h`1?.BBPP0eX=d)%'Yddq3nt'QmA?U"%DAMOOh^Q&3huW5c7Ba5U^7d^H(`8e#Z_2[
%A!RQ`q%r*?F^'DQX]b(,ANc,0>2<5_0]4<6VV]nKht960s0EA0'rr?,?`dBk[Q\.H50>r]f_$W!k3lJ8>Q*=ER3[[&k^Y)_c0XL#
%bq'(gZ/>X@:c<H/bX>4aU;MPm5i*NQ5%VR_h:Lpl>H2qgNjc<h*O@hXm?V1AQ>A(/@]LF3KkkAhRVf_h0[q8p*IIH=TQWCdi*'o?
%FON[M*K!L.'*-G.>.PSb<u]u,]2[6Z@0"`,l0FXI_Oba(En)?8G?SL(oX!3o:hpu'RaLLFGf-6J&D1aP5],h#S9:?&TV[S2,XfZ#
%gI&i_Y\pjYHf/J1[AS)Z=RA!Jf/gdHCF*O4)&ab3BnUY"DkcdBI,>6TdN5L2fN\PRTBkm%6YT4B:HLJl0tp.1]:B]]^mKnI8)eYs
%0BS5EX[a=dp<CLdOk8mMHE17g%t"!gr&rrd;$S5=RrC>cVu"#SL`#=bXAnK2NiP-/^uBZg^h^"_@3XQn3&U@gh6#;rn\%@kTPgL9
%"#u>JPal_`**TO(ofrb]RfNk1&88[c)E#QeH7P:Dcs!bS%3V47[<lF$-tCXFH@FDp5eR?Ho\]=fT)c4Q>8F1GZLu]q%b3m/G!)hW
%O0fB8N&.6%eUa^R(gsSuGG%g.\p9h<_0YS5+QeBT#Eh<3h%)1;]d"s2ZJAOhEHsWb#Od*I>lLmq/[O.N2sc6E[>!ZNEY<jGd4?NL
%gLD:=fg`oagT[<3?,?7u@:C)\s,OT!aYi("%IYkj4P4=<S='S'CCAu7@c@PjC)[J!qc*Tr=+#Db(PpZsj@-Q:_@"1h9n5?I+B`S)
%.'>=&5rMd<<U?Ur#bIAP0t:FAbbAD`J8Sc\_W^d`s&0;tb%*do@8Y1-&1+Pu+@@X"OD>QMCKV,g*MloP9L/GA<92U^+b/9;I])qn
%VUe)8>M%2\hbdTr#c;'u)8j?u?;,>t'#;-dMg;LSbf^D8Q/"W1U]d-@bKtfT'+9N%N.fmb5s(j]L?ZZbFJo$jIWCHY,fZRqQ5c**
%I2McN^=m:7+MpM4PS_&6DU]kUi+o)eMN@hZ2Y0;p)k'oFpVF0<]&U!.gXZtK@k"^'N:KY1j9E'B1*b<R&quoXfEc^9UYtH/6>c[p
%L_5)Lp"fg><+$rn:e4qCAe:\j7\o"3(Q(t2$sU<pP'REH^DP&l'hFe7Ap]k:oKMUJ*X2_S47rkkE8@=BD&&c)FV!saquF+&QaCYD
%K:[&C,tWsqGC"`([T_1?X`FSu)u@_h'Th'Nf.g3N6q3-X@u&5I1]H81&a\,)$V@%07N=jIhfq<hfL+A$6AOmTg-kX(N]KEaI0sJ/
%Kgr%F+%6q^+:IQKeH$APHPqO8=c=20'q$7a'Jl8!8;/ZP$lcg1d6p@XJY9,.#3DT9Y*PQG?YB%5$L$E(C6W2F:_gn%0^Xe>#**f^
%b,UE"nIJud,?gs@(q,c2B`(jLhloUP%713J#Aik?K59l?_g(*!Q&o*:P/:IW*@?us'/-*i*-A[%7]56:QT0Y\YZVuVH3hER,F&kc
%RROP'.<V*`G9m&9,!_GgDNA6^%&l2%dk$Lrb<K3n[cM;bf;uN_HF/=O;o]^u7hA.jfGt2o0ZHDca0Yo1Pid/k#B;#@Zt0ua+_*d"
%@lCo$X"mIYLr8OETOsh&JqNe`T]J@6Gn:W58:M2f1..H@n"+XRE%Kr91edlF-s=De[H`I\7d1-d<+r^1.<Y^V<9l/B.==7=G;L9A
%7(BhZ)C_,b<kg2FX`)^fi;203*c@e<_-k4TGZ<6"=JXn;e]p_Ijpo`tTRuFl![bd@6Ur*KA8pbG8pb6B/`begS#&tk:>1FB7U@l@
%.6%`LH580^o7cLl;E4[9R)iXBf6O-ih!N3+_'h0&O^d/,O\sWlmD*+1_3RB&2N:Sn7[e4_-)3KKQN=U>2t)PT5DW3S1l2)JWud@M
%'r&H?"E-dQM?Qp9g1s$*9tdVo:2i$hSV7EYOo?U_MO`.m>noS+B-Oj/74[Z#5*BOjPhlH<mBPLM%=O/%q(Y>['Fp;?<lHcm*`$jL
%?Q=,6;'86!g7SIBb-!rF1Eo7B2AJ&(R&JX(FEr39Q[%K0`Z:^f9Ls,^Ks[?C64`\B9uP+b>;u%$q9biH!,A'E't.o.(5g;([=NE[
%1%N@U?hR=88bh:u8oNS7"(:5JH6N4.1B8;W4nGPbE(_E3?euY+!e+ft7>S2M>-hm:8W90m+A\OoE_&(0;g;cTmjW`j"NN/S7NS==
%XY6RWYLW=AQ\0@.D7pA2cG"[u".(jP5:Ge_$E>k3EZF*d<&<&hom0(d9DUp4'h:SOFnX+W5Y(\*c"b#Zk9pV>+sioU#d(K^,Ekf*
%ksB>\N)k_t$%LqLZ$,&gh!uarA];^K?80^$m8gl7Wu<jb3'N@[8Yg6]3kd-2?`lMFG4'NTA(pnD$,:KuNZXXDNQQFT)*CIq2qM(D
%<@uX*P&?:Xdc0u:c/INiYePV[]R#$7Fpi=O`LTMc=[?/#R!/$F=l*\T%UuW(NJ!eH<r8P<b&*ha%Us':dtTpJ`61YPB*UMMSkW1.
%pBo#5A@:4EelhMD2(0j$bM2UJ@41m@&f2V,Rqfi#CSS0%<'kr[@Q0hlQL<`Sp!l.R9X;U,j9O8E,V(2:p?LmFbp=RC_cufND8.(W
%eC#uTg[.NVPh]O3VUl<9-.E>EYOq_HAN*b<\Wc(HKDPOi.:26a.e4hM)j0l[A:Zo@4P8=o]d"8c::Cn?j];P4>5:i5(QX4=E:dX3
%c%[%(U_EK+Z&>&J51W&S<'e0#92pSRfT*PeYCtmOS+!&'`9L&XTm&HhDGM#uYsLaW_5D#r<B@1BVHIM(PKiC@qf_Z*U_p9gn#qJj
%cuW8ObH?3o!p^)rP7!A>O^bdQ#AUTLg'I);a0t'Ko57Qo\(W-72%.H@W4'r3<>L`Fm9;Dfnu=>"nP!r7Rb6%"OkK?^[IC%7YKN=<
%_;X?hq&j[iZZqhj<(,BFP<=;W(AHmCnJ^,l/O"#mq8F.Tmp:&QTsQ1a/-8tGUc[h@#t)*:YH:H+Ma;9>B+4[CGb3^=G#m&-d%^ol
%89!T(f7H:b1JE8V=MS91Hg)R:e';7aPe\Y);t$M?mX[Gh*.6(cp@_CR>]RTlCK5Jc]+Z]D>eFN\3^#t*?,f=F)$C[=EOtZ!G(ErR
%]`olj^h$t/Sp\GnS^cEkK(LI>'\$CY,Es`rSURFmD079[j_q;FNfn=-C9CIuW0sL!\XMQ'?ia8VH!!HF'd$BKn,$C'PR-mW\Fm8l
%eeYAXbTiTj%n<jh9bm2[U3a6?d,&6uN_g$s7a7acf[+J?\3EP,QtGGLfKR()a&IqR<Du3ugt3%S%HY!A2#XA"LYa(%6<pGr2%pAb
%G1Y0a3ZD^,`,5/0OK"D#p8#?@&Bf23eD*WngHV,ieFX0_:&TDp#\?$CBqLNfg,i9iCIM%&XgHXm($YQLQ"P7uP.G@F14!Okk4F=c
%Lbg#`L[*V#Mg91fr14+T4cL_J5@i$e!edT$lt>?X]mPg3V\>nj.)VY=Ms3X7nUNL]!'2+>ldG3l>Ii6DgO5#&jVE&e3e<_crQm3]
%LUC\6[<8kZb(aP$gNQ,:Is^,]kgO/,YdKQoPYb&`kS]T:0a`OGeTOs0W\aR;iRSg+O'K>,qY!M`an56e0\L_bpZ1k_DRKD$F;g5.
%/tZu#G2A)c2>_icgoBeFV+CieeK[Z1SK$[CgYB'":.;AS;):9W-M?_a81V)^>]ApBC&8q`^8n%:[EfT""Y;'ENMu*,Vq!T!.sG(F
%l[!?a$[8Ef+]Z$%aOc]:LjJoZD5(W))VkUB435MoQ\i&p*:#C()_9$n])(\J$.nG6gNp)U&O?c6W?]e'o0%;7('&lRcgl<%h`tfH
%cq&$9$G0soYO7L.h_0]WFsS3e<O8/"bs\sc<<VB7!0U!HSfWU74"5.iho4642jsk5GCHb9YFdK\T\#AXW,d!p\fi'Kk-sEqdJ5Yh
%J%\_TQ/GPt>@2\NY_S(A"8K6Y31\l:o_eDH]=F6[GKTVU1]E.8-n^.UER9dRr$;7kA^@k:\@[Y@G?RO&=e&HfmY'&p(f"CYDi_"7
%JF%f@#'_Of3c2h:lGBZZ1]n3`lSrjp^ZR]k_][<s%.4es"CQj3;FtL$;h?fI$O/!aAMIGZgC16[GEecLK3H6$m6Q@SZi1!E&&mHZ
%7V(Bs9`ba:,6QUMa0(puaPn@cRb@4?j&0i7,^lYKd6e5i9Fil!6SMhajVSRl<;mK_`H\q#EE,c_LMeJ91OarD%:Zu4A0IM`T,bL7
%X6s&Idg!)_"`FD1R=gjL0>3lk@5E#<FpY<RK'X*&Fg2//b<b1B,I46cB,Gi>0Qi+]gL&"8^H2br=a[]V<LYnL!.+F[8(p+mGqgu]
%L,qS1@SR^qNZ'(BC13=G@u9NJ*H"Y#7PYDoF^P4e9;h?o6.ukpkK)l=Qk@fc)RLN_"l.::.E\f#i_P41%^**Z)^uqQrkVfn:f3_I
%FfBbG*7!#6O8Vmr\#7LC!R'%j1Pa//DeN7k29Fm`FK_!SdVk]3`^,R*"Pl<H5FsE]fCt,7Fd\%u*"Si"'Fqe$bAuQX8Al6LEnqM-
%Si03Zq*ERnj9bD0pm\Em2qJ_"U:L#WN;rR5CU<-Tiu)g).\LC^0A'eM=jPi.?Sfpc_<pOA@4HA-'TX$5G@Nd[j7U!\8p=&agW>Z8
%i)3>f-cZQQf;eb]H%`<_@*9TX&P;Ds#?O^j`l@W3UqVu&*bO/("bl89>e&g':>iB)8LX/377+9WG")D`/i@f4HsZJ!EN)ek4^PP`
%;IecY80!6^\;'pr`_,N%?<`'o[gBdGY[)(ph?b2F!4BK"Z]3FUEkQ__NYCIWm+Qn2fV=GuJ2[EMfV=Gu:btkN(O#aGg;(Tb<(G9V
%e$ucB\7@a`\Y%jS%p(L[!t4nfE'Qt`=Bo*,PUi`A`VY_O>u+7\RXQ`4omoPoN5b3Db;Dp&:`ocN_6B<Ee()Z>rRME&:eVh3-7Vdt
%'Oj\tn,;p&1?nI*4dJj#O'HAen3(T/)T.jW.a[[!EpN^<+5OQ_jB!u%Y,o7T$7"06q$_=fRVs>q(?U@o=,bgn]uTH`gB:GQ'#uU4
%F<?TRCW2@o69!2oRlB`-/LW7a7%:)U<Jd9$SJr'bn%HnbDF6piWX58IZI=\9L%]Gm:V2p_N"]Kp%gto8.RAj)[NYHeWFc[!+3:M?
%27\@/TRseeZamI9[(FoNF;4VSPfSj_9"U":)$f\>#SfJ[@_6n+a%\qHAjGZH]4is7:?sfN8o[hXF2VcY:;=MZ/>c@jmQ7nZ1nnmL
%;7UXh'#2R/+ERA*\?M,K5_Q1rln)g3I"R)L[OpRWgIC0^=hdHhEYVVrM4:!!p0J5_;RcBj[e`5T*'S8R)sOcZ_^\L_KK2VP-D3H5
%X/i@i3a7*=`KT7+FX<Flo^!^7;8R[V"+SV9>8sCU6e]hnMBaDb+`\8lSsUJcj2K["'+eZ0#Z)pO$m?Y(V^1;8D\XVtI),W[KIfLd
%ad"hE=grgrL"CY9onmbako()3(#fQk@9g9?Tae!^g8o8Z/cL'8]@?'V(>M'tI3uGOr)SJ6]%mLN*#b<fQ7p:&Xt,4oecHmB@emJK
%G!HH1h%;B4glt.[Cc$C!?@U%<]I*!J\E0sr9`*dD^!;>';t!Vb".qci<>#1(@W[\N-^eq4\>j(cmC<B=8enM[G9QpXTni3n$m3Zq
%,h"8J(Uu#&O05X4g;g1a<-"O"XEot$T!Y[DWu`c3ji[n`G?ZKP:R3q=q5(alEF=TRO`o:cbcoMa*_?5>5Vf<dDKTGSpU?6^Ee\=S
%50kPd*tCobe'f9EWM/gihK$7MM7=A4Q)/<nD/nYPd8C_V><V3t,M0p(_=ki<c"$3m?ID0ORBR=B<Z.j]n7OYF6L8mG9dYl9Qed!s
%@jf/Tj?@WZ/uBd9m<Uci/sl/Zh[*oAcm-0LNuW]Q57N5Pb"d"+'EJdV+5[<R..R.7E!tH_>N@0HLhJVD,!n8s&/W:P:Kn4:b,1et
%@/_?LW.OO*V".`NXT8i^ge>Z$4!@)9W0c8<dt:c8j`)4[Hc%0gf+2=D2]5S!f]]5cZA,k8o6RVc"eT7Z;*O/&a;,qoe[Uok&!uV'
%kaY+?Y?Egd;1aRcCj-G8.>W7&.[mV(4EVn99D=3uMo745]&a^NQBuBC2j=KATnRp5\+2nl<4_&n$n6\1'+VIT05t(+"b!HH=m"D>
%(W#P^45E--Ea1N'&G=Q!,tMokpM1!qH`\Q.#-"q22"atl5C31L8W*sIQLsa!ggTU\e]PFa%^+ET#(f5nZ24ZNdqChb8hui-9hj_K
%=h+`36h]d66Tr,@TD-id=D%(0W.,k,>jdGj\6Am(^Qs'\[$+cJb)#$e17FWuRSBfWnA4MVIFZT9_X(%7>K>T5",U5BGjr7Nd!`%!
%G1C9?<H_s!@Y(%cT!(QnQW"j9LBP5er%`?kFLYgDDL(ha7(+b9qV0k!G1YO&I+[+O.aO$TjQT78G-q,tE'6mIXln5<<R!Yn4fd7R
%Y&!iPdM7rq'_^1(rM*J9W#A[Bon+jh;CP*LkE.-&VUjUWIM$h["<$%6MA7TUJ-Gk6KKP"7lG:b`/Vg-05:S6:Cb7.ZT@u/)flm^L
%FI]@+F]ONTG.m@%H?jRr<j.M=2cVu#jmh]')^D(hgi7k4Qh\l&dW,@KNQd9e[$^%*$2(-b:@-"HO&4QeOlZ&ETE:oHcO^OsVQ>04
%X7nuM!N7?5"56I.D[$L%W[_X_:6Hn\L"qU7gM[%9/_3nkkiEXnLb=lEeVD+pc((u:=lJae80'3$27o58;4C&pTBVngThQc;_#8.I
%3)T`Yk2@!'Y<lhJ$?uBVgYD\Z:@e$'a/@OJ/(P*0W"$[9G>"6Onp41:Z\G"$)ru$EFi2JKS.jQ6lutO]4?gJdJk2Z.e9>48e>nS2
%>GN&cMr6\%@PbBVZuPd$.[X-)5Y)u]GOKOA5Ch4qVYm<Eg.JRG.1K9`nb>Q^q(]?Z5Ud^*WmNN4l>rVM2:"si@rFmoou1HT.uFbp
%p!)V!!u".uYdOOTlk-fWV,QQdd8=5d3b4nHq?PUm6?C2ppfrS7Q(+W2a^n-`%YsiF"i9^D6l(F>RJQ>gr@i5uOBd`i*;&+AMTLH%
%JA&IEJVgIHT831h24%O]EfDoAIBiL6\4Bnjj0eL*&qo\ROC$]3l.bP/l=Fj5NG]db^u!XN&gbKc)f+cj.YZ1H1SUoua/..NgU)L+
%[=5l6TQ=nJdi<V":T_OrFKQ@^2iO\B3L@0(qWiKh=Ld!o<^OF`jm#Jg/BJ*aj\`46-6=*J6_3"W0uRi$.!M5l8@BVV<lALG9?H@-
%>$X-KfJuPlHCDBj?::)?*^r+DS-8*1kbl\;J5fdQV-Z*i<d(+!gICbDGh#BWXKA>h9QX/C[PgDt([^l#bASGVhMn5smi]C1iT=$U
%]P'=Za76M#[:AV'TY5fhJF!aFK(MpQjV:610=J0kj+bdQS9sQ[6$;QAbG)AJZe9c08pd0LWEr<]-o"5AfnS6Z=`#\;7-$VXllO4U
%8\@LnFljtnB8adT@;G*blt-p?MoA##S's8NnTpSI*Ss$;2j:)=:>AQX&s/%'HoM$'d]L<bN`DT,_&CN91eIOSPq;KGZK^u^e'X9.
%Lb'ZC(;<.'FgIr'o4?NjnQ#D-2:@?054;Xt5r>?:l)gBh?b8_(4Y1q[VZhV1O;g4C%\HW\pc(X.2su'E2%9*R*V(%O9Nu(O/m=j2
%/nX#9l42%B-TA&0"lqS3`^/sab*AuA<%^+70cDtH2M!Dd,__c=GX9#*4jq+hH@V.9E1\8k[CULgO=EBV:GM7^pdf;!4qO0?;,+a\
%=)LjE'7TH05_.agS'.]?@Nfc)l0"Y\?!nMVohN_%'r5t,I_NO&Q(,fqU&MthdJU%9p6Qh!iJ2),0&5u*%gu?D2p4a-[Pt#.;f*UJ
%Q+i!S_%,4TNDn6EDCiP.gN?59:IXhkr="N`UVZdgm8Ul.,q9-gA.n3b44R/#C]:/2Xt%LTDAo)in-.PZ,VrJ"L$h:XNLS_&Ip^Zc
%;5CFW^e!La`m3[0.L10!TbY3caIa^77WJ.BVV9f9Arm]$_LYNG-Vo=?`m[#Mo!d6'n`A0+[!dFf8(d#Z7t?Q`bPNG:S>A8AQnin`
%l_oO#YQn6DHguf)-'P:?Ki7(W"\E'7'?O,^*2lhF&%Uf,S!DQfEg(fQ;Ta21lJ%F$_8%R(Q\0V[Is^Up;u_0U,X,jqC3f:%drE(X
%`Co_11LTU8r6j0;5mr-MSRs4:IY/Gd-&k-XjLE%TC3.nmL%2'!%!d__VJb*K?@&+,fkW@MD],hco3=(e3T%)96_D.A1^ld-';]]p
%j^8+h]+/l.H@$GL(:R@nBB"le"P4`>G?p0EU%^s0;+$d.[8tK(E&+4i!?gb]e"cV@fKF1K.%n@,B3#s:TJ;hmhI\iQZ`';aI>Es=
%)=F=+ls<L_BB*I(U:9fGAg6rMkQ,IGCS7eRi5"W$i/`cP%(%lo"ru!Y!>)MYr1#?PYV.Dt[Ge!po[Z2V-PA\g$l,PPD=X4#ikLFi
%TN+LC)U3e=XMQ"5%8pnCX#:(1-@%6%Om^HoC=oMYM+/W70qb7m*iS)9#.-X$,L?;lVtqP$f;f'qUeD_fA4IY(L9RpdDRu*qQEBl-
%J9OkoNKW%iC-0dZes]-G,"'k;9gMa"_5t)bm0W=qn_1<dAeZUulX_^oN<2gimEV8o^THdN:j4-sN7r"0W#Vq@+1p:+7e%I\P,bk%
%?kf\jSsG/_.Dci,X[S9$Wp5#1UPr$_UJ=E!]Kt!6b.5nV$5M$'kcUKsZnd-0'I+Ya*QL:/0bF*4qJRqJfM>e3hU+CP"J8P>_g44l
%[u@bBq_rJLQ_SZmL?p`8(8O:r0[,tUrGgU(Jda?+a)K=SRQ$c8;8U+#W*WqlGk_Y.KcSQ[c86a"">7\7hd?s83Mm.C>nQP94t\$:
%="RFC]f8B6Saq`4Y783IAU(YZpn+BEN,+YW%MAr+b:mHk)Z?(1K=;p5nQ#FWrn<H2RnDVjKY,p`3r"T(aFhgr)C:UcE\>.IZ[e:t
%f<b`"B/gI'fs.RI0_Esda>Esm"hKIAI6pN#kLG/ujL*:$p6T[jSiep"'0W/]Yi8cWG:5o#HG)Za*6Gd@S_(om?W&^j2F@07R<Q5l
%)_`k9;\%q5n@7&sF-UVfhpeZK.X-OO8'Z0>,?<4o?0hkYfTEU(gW]gr)pQYcW#Vhr[U);lfD'T0Pf3B.('V&NPh;=U'6*[5NiVDo
%A]\qX3h-MTU-M.']l"17_nFgPgl6EO=mA.a_-etI<AGrl\)>0\*hV6!4AoX&D;!^(B1qEGB70%i(c:]Ki/2JqIB\-Fcr$h-oB3l`
%QOhnEHKFXtp%R?n#D;@2a^B'tFWhT,4+T4a<'3fZrpB]XAqJfhH$.?*%ne6sc+u5a*IV&(6@TcFL[bKFOS!4_!W_5rmE=ZRqQRPg
%^S]iqa!^@6L;1b(BP\d)?4u2O@pp=j(@YB_HH!A?LU@;aHq00.5"b%fqC[/L[+aJR7,:7<2?7LNqJ`ug_4seq([uZ!;/PL)i%+5q
%R#G:*gZV"l`HTc;h>Dr02t/\pHJeU)K+AmsUPNomOuMo4JrPBY-A`0J+Ispom/AS"9!(]8T48Yb43=WDiQq3Vq"RlLUZObpbNVuR
%K1"\4p6*QOD*PiHO6,G:Q[cuLL;sr?\!R4?FYR"WP/mJ\QX"jjB&7IZlbEI+Be>_XP&sSR9=aQ0,F8alj'.eg?HAuMH5nQ)cp5I;
%P"!6Ig*8'=gg)\_kU\@%=GPaP+Zte-:CsP,Vm!&3<jdJp[Xgi5Ds5L:[G,+-1JRcs]-$.,0-]akr8I0L]e8`V`)Blu!q+H>V#:$,
%9((5Q;_,ld`aSdJHB6[dMjjsD&(S1FUYKTmr>_un1Bb[^g8EXYb2)\bqY3sO:(+9:nRt"K3^7+_W`K\,cI*LA^XOk5rV'@[j>7_-
%l^4t89$NQ:CUZjF#VUpq)p`jC8;50ba&4sYf5kc!Q9p2YG[bT;qK!]>DBE/]o#t]I4agE`+aSTjiaLs6$)afnUt\2+O4VA4]J!cl
%]RZY+>b.OrcO;\c%9>gc'N[=p=YgK`&G&p<48d;Mj6,TP]nEdAqDW$K^OqI1CcJr7<G2LOMFSc)@.I&Xb\JPW_>TQ-oQ7nnf_WV2
%6?)n_r\M'hX__BW-e(R-QLq>n^ph;TRLs-1QL;W_cp<#l*/.U*@.N5JE+.j>41Meg]Eg-0TmUf^7T-n)HO1'oK<*bN@;p(urY/U5
%AW>WfBe0l*>qO!IS%#T1_=2O2,8eOXf7R;hl>D\tA?LN#>LnH)@V7.2GAj:M\?^/gPVs=bK/3=9#,;FdHr*BB8&=S^i+k#I^op$3
%m]P?e_7dOGbM`BeDE2sgA4+3.p-pg)GZoJ&VH1p;?omn)&3O-64U7$$>Dp>HE*!L?C!1G2MuD"K0XDrD#I!]524-Nj(P4TirCudi
%qlp^F2`=UNa1#>V#82Eu^QF/P=7tb7HVW?)k&7H0_;]lY.9J(fSHUNued9o.R%n&!qr'>E>Xf3UT7so'?tYZb=pQ0bh1`gKr-Vp!
%^::JQ<k5tJ#UT24KlDD7I=XE1@LG;FhE]=:L`bA!$djm_[>!7Vo6Fb_<SLY90HWIp&s_eL6Mg@S=?(aiXtQ;.+'gL((=.\glhXV&
%iML[c>BjOP7F,^s@GrdWHs=ZN:t)8n0t0um5nu3l>;$Ad9_90jl)``4M[N[/BlQSoY:QhXo66,OXE:hjndj,:EJ4oT7N5NXET]Jc
%>!0=oG[*pKS6RZfAXW2Mfj/H=1%Tc=/ET->_i#%`l`5ps8o%j4b@p%4?HtGE5If/QeBDCn3`0$rYGgQZL!0GCdctG=]G,ZTX=Q*2
%duPe0GgfbmT&2_up.ei.V*pJP>rpuqnBuUG:0bBeD!s"47CE_nT!rSn9A9+!do,H.['EYXDg.OOS\rNh0\1r;)p9c+(MCpbmcsC!
%H_E<`V2cHthRQbA>E1M9m.+THWj7#$]">\HPp6OW%h"s*jk"hGF1M'CQ'OYkhD<?W;PC?./8E&EC9;`g&m8qU<Wm[k[^)H4T2lH%
%.O>!p%].q/Q1OlVF!\<$\\%EWFdQO`R&[Agf#=PPB(@R[dLED;Xff&"_Q.*nl[DjDI>P&FY%#_XnP_eW4hf,U=#80Lql=qk[FXVY
%[rT2dOrcrjNO.ZSeP>L>+11"lhJR9a;Gur7,XpEng\lqOel(bbrRs9[O__L>G%L(:=Y$Qg:KhCHof+1uFlK;,l`5$=YeHA.A_,tL
%Zb?&1f61^'n2&a(cU;Nep%srkh>4_q4C,/Yje/%7c[&RG=AF="2BjYIM]:);noJ=@8>pAFnOr_ueV^&;4;dq\7_Z#gDq(d?:E(>7
%m4#EV?@E3#;<'5B4'K^\P4)'nFKq78L[NIVc&fB\?4MCR7jF_Q_DSFHh->;2N,Nb$j,;0QYjo)gC8\,%Q\G.mk/0iHh^lG3WQdoH
%Fr+Iuk%`lEnm3^qDhllIHLZ7s5-:01n?)K0LYn`mcGR'2FX>fp5;J?tr96<fXlSf1K1ZN?M4EG*h*l5-G*X?+l-3)$IaY<9/Y);l
%>N+o6r)U27-uL?B8$?-`gDtb/n`JnT$aHJ:opL*M1M^dk%`@0TesLk_9/@rdbT_+4:>R`$.pcbTW*slFGR^N^=nZ<QMquX\=4h#B
%3G37=R:Gi)_I/j'R9OS)Z`8'$mV7R41K&A`2"CFXh/>[k\Y>[\\^.V$<IR*!D=Wjorlun0pDZ:@a%uIHAa+aF3%ILQKtBt^2'Zp[
%&g:\-7pZd&*^U7OrPh`*cl\S-6CV=sMkSio7o\p;"n=:/=;Gh`0%\'/\BKc$RiAZ?Yn>l[U?qc>P`BZnV;-4e:!2)>lI)U$YTe!J
%$^.Tm(\',__q3@aq0%h"a[O\2OP<2X2WpENd@I&-<qJ3\(SZt;Z&<;go\`)>]KG*d:-ZuOnWhjpEg<Zk..@!FP5OOhk4V:;iG*^$
%]b!TsC]AAN6*IZ(X1;M<F;A(AXW&u<EL;b4PH4(Q0)9N'/)Hhu`]>#Z\&5:!ME;'"O6TK;;E3O\U<i-eT;BU&h=1D2@Wuac\A!<`
%<=6?V[nEX2XV6iSgH7SUpNDbrQbA=+NT7^]a)bX>]iMPKZ6'Q(CAW>ok0*a8lR]BGV)OV8AkQ&4[Or*"%TJj'4ijcX#7l]O>"]==
%^=6+gH`F*Fi^6k^/)QWAO&`:p?eq]0`0IB@,C\?UbkPuOE&$3)$S\3DLg4cc$'dU,94U,TP=-jLGahsLmhV,Xj[D7VEZ']Z?g]CY
%ZLr[<9l7$!<E&GO`d6q43N/gT)i]XFlJ4rl*S[SBkmP1JPKmNYg5!N3p"_ti*.9t4?GD#&%UYM0kD,\'Fn:Dd:(p.>N*/6RYGClP
%)B8A?nRh32moWk&s#@`<.O:$=PXG%Q]us]Om-0G%PAIDmE`0HupJ0<mTA$3TO0?$j-rO$+nuR#[etV<Eg$Tda>O0S?X6R]-jn@s!
%I%:`'T'o\>M=]LsPro#%a+>*N\Ql[AV:<u5S[`oadF`_>?:N5hZ-22Y_d,GXF>kj;;mk-a=4%d>a8=3=bZj8<Ets'OFg%NRA)Z]N
%=^+A?>a7Y(qXrQCL:Q1(5NM.bkgo`Uj5T2H];;^dA.Q/Po@_a=oi<]Tn/TS>F8J&0bkBb%Y1tJfD`.s3M`:1(e*WXFm(q53R>]U5
%`ReDhp:R\TITouIIGCsFZ`j_n:+_fMmN/.H$[62s06Jog]mSUBL=Ti.jk>"=+nWJo59sTRnddBL>kBbL<D/D-Q*^G0guc'8fLW-:
%4gCjW`mZADIXN][k4bJ!G727M`,bP@q)R?dHO7DS<_tS*Z&A#IbKX&\m)@&rj]=a3(1/_IO/:I.]Q*NY\[b;F*Nua=>N*:/H=%JK
%]C1S'>C1jJl4gV%j8?6lIrKb44W\.>>5(!tQ&f3`1AT\aD'j1=jKAs=M[jPs04`i(;o(FVer%mfq4i17@*E*?p1[eK:)HjSlorG^
%H6RN<if?82V9?LJDQ-Yti6+7'+."Xe.rXNQgB^jTX(JGrfkT;Cl8@%l$IA%ClIF/Q;mgmj#*.r'PURT%A=l5KO&l($\#-7VMm_<8
%.bEAr/ZlaN\r,&\\uaaj\8U^k%X,.;`[dB>Bs+TfX3K-DqqN`=0tYH&*9e:f8,SoTam\W(39G7dQ-$bR[u=/Q"?#cgIGY]&muFdZ
%1WW(.o-!UECVFZ,L[FcrP2`,/m>GdDZbPA+7.d#/h9qb;a^.2PMK?1.X1(0QK$e`''($p*NgmEV][,,PqN3r"H)@u2p@0rZae&Ec
%H5p;rE`s3Jo$]=`[k[NIN\g/e)ms"ulB!c?js":;n0'H(`\4jhH(F:W]T<oKk;U^[D/l9ZhCq\'1&*'-Ck*2<J?6P9-6PY6=oPo1
%XlZrW%:4ej$)+[P*aR:-5q`>P3DQ<rp,tZ1OEj2hgc0og]mYO"#HR@Wrf>t9f7hMK/bjXKh^TW)'i%SMoKd*MW6!s>1(ahAi17`t
%-q,FGE3B:!CV<sIr\+%iJj+UUZ9JCA'0$Lb]eG#sDs6?VDu\i7,oVWWX-ph^_FI^*'EZAEAd9$BH&F[XN6(Juj"kToK1gVmP^`Me
%c#<V\!c.+Qq`FA[jSRqTs-)i%1XGBH0i@j%+!*s#"pi.f;+rSqTrJ8YJNuXK$[*Y<S7CIgWu`'Id>\!9I$A]^M>\oHfVg>i=@SAR
%@?H`u;3=d2FeZ/Y;5/YU'uN\@EENu1L/l5$;,Sa!K"!:>4mjbb)$L[4.W^E(cqpIrBS6tC%VfAqM!K:6;p_G@JBB-*=L]:cH,P\=
%<e/4:3PrlN$cQA(+e=cm8!1<V,/aPQ,!lk`@2($Q.3hVE&M>O_5#<sP;)gc)X&5*+]HBeZNJg\&'IAkUZgcsk<//b1U/p/?<ksb(
%&P;+qJtjLt4;e`1X@Sl3G@"](1*WY$Q<,>0%&8lAGZM6q,tY?[6CkIZ).bh?:M<!]#*4rZi><'"UdR1KJj/_'GI$QW&5kp96UErq
%,p+8p0arZC4rO!Dh/To<6qS_Tph;W16%;`L++ZB5i"6TsJ.(<gX%6%u4CO;L4[q'"&j]gaIJ$%^LrbCc/Ot)>Zm>E-)&4Bd^kuH'
%U'bY((OD0D3/"Z[Gl\XJ)3NnFqH0[lOV#r7hfpB"_oXZ(3[mZPFBhZepf15q`@/b3=G>]XJe420Aam4HTO(6d<Yn_m80"OPX&PI"
%KN48n+]fKa3\#Ff='.ATn:[bmHk]U,>jFa^@?h*O'@PTb*/bZ)B1[LQa5\qn.Lb8W,U=q@"pbFP>SP?f0KOu"n-g*X"r2.@;6dtG
%63*?,;8F.]?:IO#[j2<d,L6_[oLY0niiKA?1DnP7>=cF5H/r+:&LjIfk6FGgK,DF3-%eBiV;l>2%5OhhGm:t"-l+O^(2FRR_g,p0
%QeAG_7V18N$k_)^$n$>$"R\Ub[(#]V10C%tb!*e>Yb9,aT7ZWQYud8\-.I4+on+GPk'[sg8`<*%g=nLu.iEGoX`6cRISl59*R2eA
%i>"c$1k637=;JeQ%%*Yi`B;KA#6^<3S7%[d<i"(",]'5mgM4j=e_QoWc<CfgKL(>#ML,dKPk>qI]<'%l61Frm`U`t^M\Z'tQd)m#
%L5V>o$l<CK5/Uruob]:te2:KKNNV7223&(]-P2LRLN")WA5=&Ze-I-b<WF3REskX`OA3#M";OQ\Q>mZP?4o6@E!\E)ULMG6W$Ei+
%N)3#H1$Z)LW,.RO67SYSDK/@Bh6Moam$8%CfIaQrf5CDQG3p(1GH]ghj48"T=E1"iEZlI8jjrVI/RQ](h/YUAg+<OG=5pna]6;?u
%FR9jHYK(PVRWe'6l=?OC!Yg"KQ<i'O[lg=Dh/]OffI_%-*kUMVm]ftS4ruTM5oa]o,V`WD_4!nc"8V6B0['/INJaP\@hg5:bn<iA
%,Y0+C"cc#_Ln"4=6HWDe-m`+L."o]fUa2\?AbJr1*#VKP2&diB:LH_cO@R>X\DXW<(puQ.k=Dbrl8]LF)%Ni*n5qgaW+5K_<B=1,
%f=5Vh5\]mp4\%Y]3Ir,_oit5V>!8cUO4Ej1m]h)@eoImaX5."un0p]Ul?PWHX63OI>!66IY14c^g2HY?>5)5agB."L4WEu6X622h
%Nn*`gTK[/a:TYZN8q)<@KAp4<#A(SLcS"OgH;H`>lCh[lfBONf;0o>cB!6ZaLGXP6C\8O_Zb9Dc.dOKg%]F19g_sJ!kA)&?4dKZ!
%T>2A--q]$NJOoX_&cF;%[[BB?b3/k8oT5:Lp.(Al4_NG1U]cK26d7D2(U_.DbQ+S8&lD/H<Y)aVK<-+%NV]au$aSa#H<*n(eT1as
%X68!qZ$P9(?)ra,anAh"KHelTp!B'T"0A(%ku^*X51f(F>P;/^Vj":6F)^Y?]E`0&l8aA9WsA=j>!6fQY13VpoiaLDZ.J9oANa)?
%"6ruOVb4/Co<dqnH8ab(X(UJQ<V%j&*inH(HE<]:T?$5BRmtA1g]c,!KbL6"_XU$DJ`oWU:Wecb[bs-@9e<?#S3t6n6qeF'qeW;\
%nX(.I$50X1f^'cp@1=S6pBQ%I+T'BS,J%3fB8a9D4?V?5C\D"0a6\)OFNg>[ES'Q.f'5,>NdgW+JlUB3p0:V_RQ[Q@O4j-5mP0'k
%g@CUo8%j2$^oIc)B$UXgbar%4C\E-m]4R,fCVSOIHJNN5C_P0*p2%s"bauk`3+gKHKDNgB&"5XOXhcA=<=Q]HPL):F3/hk,)H)VE
%SDejA%@%5$/,/<d&#c8Ug_q3PB"-TkfMF5'6'-JO%J<%77`QgT?.Pe)>YnM2i@9-+VqZU$]=JIJaTt)\#$>n*)<::o?.Pe)4J7^L
%ZYT2H2K.=kc/rF%d;0:R*`;W?XrpM7:aF<sMED.[$Q(A2N\jTM_!JQK7?Dae4$iR?A4]!s8KtkU5[/gn_j`QhG![e&;/D#!2T!P:
%jR8=5etZS7TT4J`J1K9N:VWQbP6I9@eM##.iC-f:knhIe\9Z0Sbt0tM7<3F3NcK.)o-bDndiRW1o[9L>*,N98kX""!>We[FEcEUO
%Q&Dh_=1OuA$3DIJPRI84$BW]278R-Ojk3u%@NjU'>FaYk<=9M'0"ItcQ\g_MCH96Q8B2<c.s)b;X/O&J[_(5Q"qur?T,UHX(O^0T
%*[F5?FbAN?FPL8Jcs=-,7j$drb<56'9Q1nq71]a.o*ib)+P0:q/;:mG2G0p8QUQ`:OVG4Q2l],BYhhe-`Zac(p/1Ji0DQ<FVb^XT
%jnb\m:raGreR?5D0)S*(07hOlT`$n3Nq[4:KMJ05B2BZTBR^iJec&='NqTs:ma;"H$35C[58kZI=8U``4kecsFgXH:Z:Ffh>5)][
%eB_IgcTmf"8,HM%^"V?IFg\taUIY3.g\,<1#BPt"GL5k.=tf$2PG:gY#?1^Vjt1;+7^6_:>$S>TfI63'Ig!P#WhHJqqh6G1;[MSZ
%(kl'+ee1Hj'"tm60'gp`*`,r4UI"7qr@CdV:\TbSnYa(3?]81f]1WR5W(6U:J0*P8eE>B\Su034hsR=2pH.#P\^5u=8,%?qD;FY[
%kgB@c[U%^M\uG>eIY<^-X8>1!%FG%hi]Xm1)%KaB6W(&Ta(9\1hZN-,I^_X6b?ICu]&2pfO7"A4q/np<]LV_6+:Z]rc?MC]h]6f?
%chcjX`07ZtciJh7Lr<C0&il*T&QiL]=]"83BV8h&[FGSH+4a<fN$Z2I6t/ae"pl$&;^ee,noW!S\6RSQ!HhAVWsef)p-2RU_I1EV
%ms"^*!KKB/f^\,03<"<?j"Cgar.P03^G*In(Buu#_>qV`(uY/sK,oHUhsok73<&h`a.FI3q"+HE^G+=1(Buku_>qV`n2^K0]u._F
%Jg,UaAL4BL$)A@b'mL<`]YHjYC<o0j!1qF/aq/M^SN1@O%LXT(glW:=PW23aVBklZ6$kb=G7N@"nX[%?0Hb0C#)<Z)J?XSH&2s$1
%_ZkQTfYI6:%K+#GJaX*gp]4e*5<*K;#D<Q'J?V<V*&\(N@08_:Cu>PR%K(a\JKGF]n:SU_IULgDpP04UJ?XSH(cLjc_?R_=Cu>PQ
%%K,.gJKGF]n,pN3IW3rTpP03pJ?V?'#ofu4\I7\*m,Z[[=mY3d>XZ_)YVZ\7OgRq<E2"Y-Z6YSq2_UA;.Ze-V"O$?Y_\2&^bnYpl
%j308L4DLLE3[^(_Oln)@I_G!^BQ2<A$j\nI!C;M1PCa8f3\]b/jM%9SOSXS>5o^_`GX*:mj4<EtT'3t_6W!W3%[$,h3pa-nbN"2#
%/<A4$FSK$`/J%K[a794r]p?\kl`iPn:ri/)J+ha&f9>""&puX2mnbYFfYXYYJ!`g)p.;t>^]lE7An2b04:MXo[agbZ/YgjZiGZIn
%5r-`BjR6-9WiK<j`B]MaFc*pV,;L)E#(s`X;-0@[E7<d9bKAl3Lm_;h@F:/'#XZDNZS0;qauV!GAT)?PY,c$tVV5gg4B3%US)q;/
%a9eok\`V18rQ(PH@b*Hr!32Ptj[lB:)gpa=fln9<H-3d6);'B!.J'E*8G^IB3p4YLd_'9cqm:'/qkHkYg8@Z'e!$%e]9\`&8#\"7
%R5Z_?\?7sU^1e`VXurCrXupioe#&s^1Mp;Fp1Vq')8E:9/e5$HJF4qK@FN@D/Uc_(6!n+_FBa%10Q/I;j!_&mNUs[NR#pHqL[sNK
%;s$eIpcc"S']$.'Q%p'anq><S1,Ji"FEt6Yk?+n:TEFEuL+UI"c&)7G:]8nq7I5aBMp5@L.dNp*p%f-ob#=bfUG4#a_/=;TOeuB/
%Y'J><[d-Gc4NHu2cZ>mrcZAIESu6%Yp,pdQ<ut93Q"T`;>C!5"V`diS][NHb@/#qab^1BUH!>P\mp(,lcJ-JD0(1=:^htZ`2"d,H
%:m@58qj*Mf3S0Oob^1Dm]S3'1/N0`2f)n/.?h^ts:=d,C=Ig6FmSdJ%P(1\:=&0?OQ$0B_7)#[QDu(B]gRui;f.sSbg*'1=m6IQF
%II3uH5MELbgUq;^Q>+rk/<=s+a"m$cS=Zf&g9n"&5"\s>S/^"roAQi@ReF.A"M&]/^*V^Fc+B:ac*V7HQA<)<cM0Q\[7n1J5Z>I6
%H*h@LQ4/!ie#oN7pOLldE7`Mt\coaTH.QLlRb&%le(5':>qGC=E7_t(>WYK=CIdUDAuMOs^rDYR:0d\Hc!IClZ!hpiqQHr&]0'K0
%m*-]lJc7C4/Vs:@>FV#a@HJ>mK>4G[9NWbT[k6%X(Cs]ug$!q6iZZSoEqYV"n.M89/^;rbgG*>J%.%R[Uo>:A+mB2@FFH"_F`^RU
%"W[%]eUDe2IGmmXeUF'q0=5r.)*Um%):"<jhB!360;N<k)'hbB&c.emqfU2u^_t1WC;2mT^)3Bt;sfo3qZ>E7C;5#eKpiHbb.Cs&
%S1HY(S)G2o^#/3\k%)<JIS:M68^5A/'WN)^8mYE4O,(i/CeDT2MDQ<HF1@3rjV1f`;qcP:j(rpDYUeN+h6(<H<s%\Fd_D748@A1=
%&`a%ta]%9HX!naG"OE3T?V2Ei<D'pZ[2fe,"h/PJ(Ym#ML.F_XPpArX)nOQC4^+E'2-nHfb'U]BXpEk3"fp,oV$jT*4.;u.Nb7LC
%N[=u[8b.KMRB(Y$`[#go9QMl9khXYj6eCrclQE*I6*PT0(ED)Pc'5*nAi`NR1UVGs1S&M[OrpTX@\CiQ-HV='9G\s;V@/-].pQ/7
%D@F!amJ"E]1=AD5>*mTjS_N"N^@#^2$R.+0:".hZiR&7m,jUUt+da=N+'9TSP1t$MqQd$NH9\b>m^YplELBdF?/]Tm?qDd)Vs&1e
%F*a<K("74LnHpg(rq4gR^HW#%ofmp&Vg%$GrEH7gqX3ZVrpnZJ^&S)f\,Z0H=7qWadp;tSe]!%6bIudA^,!,#fe3fThu([L^]".U
%UZI';GLY1.ESICp:quoe]lg;Q'4:INXoHG?rVC/eI_FXR^Jk0pp[A.6Ish3MY<J*JjqS6(_XF["k9%&nj.G)Fo$P4!qYbWqIe?td
%f^bJ5XmN=LrV#PArdh1AZ%H9@J,K$+n%X>Gc%#cR]AJ)3:.qg@"R5TCLAts]Y<O_H?fD%aXO2OO3;,S;O.Bi1d-g_q5CN3#^O$2H
%s6\Wdmp8Jcbt-nR&Ga^<]_hE3hgG*f<49FQNd(I%4E#^po,g24$gGrIi+ct5\s$5D6-j:1F2+ta(U(Nf=JtH5k;DuBRKZn73+Zeu
%m@MgKG@,9a5@j6^qA74SaOSk"5lU3?IeE^=+('KqqsWE6#u7e<<ZW<er,ZM_9kG*6=OWQ)#D>e9s&K(Q?1e_D.nih?OH9JJ?pcd-
%2amOX?:o>YNm`PoE!3MD+a(.D#,Snd=P?]Y*D`"3mQ;jVD)_5b\HunsoCqBue]#/25p^fk(G6"04,N07UK"q$KN11#bRSUL":fPW
%-b?G3TE"Kf[--mBQRpIlV7Ad4<E[Y*2drl>\M5rZnFI)aKU'V/0T!HBCK-r;rql#Fl,QEU_T!'8;>oJphVLp*O>lqp_KD>HrUSIU
%Gh@i&.6,4f%RD%M"&qaE1[a12&"df>f/?PcSJ/HO.Fk!0](CF;E<Y]W[g2$O'_I`t.7rkRNcJIS]6X'?j&tdi@#M?qdcbJNMP6j3
%#N0Z%,#o(1m#rZ!s)KH2X/Z)9h-1`/qP.a.[U6?X#1i_=KSt9dgS?rl/LsC4%k\`H$1IgAIWlg^"*Jkf;"WnV)7SnEY#\Q@D1kVS
%SBtJ89JdcCZ,%qp^WoFqYJ<JXp+:.<a2Y:JI`6f5[ZYUTlpHTA!Xk,$(qC_D"4q$u3:@kG>TQ/i6c#Y7DZ>YEU?TTKX\D?Zl]*PO
%i4A`c<&WN'=L"2O$qb*`Fs/L"(c64oe(_757r4'5#u6qI7<J80<P*d#;>[c=ohWW>QT%MKImPhmqX0ID(b+/dntXhKqj\teDg-k@
%%q(4@m8rW68m;ZbfDXgcb9j)C/Tj$#*!fG18Bc7\U$I<tmhr^>g\,b[:e"P1(:Y-)aG0mI7Wodt%V8hH.lKh&k4lC`,8Me<;WN0h
%oq-GQ.*(pHPo8$R-(6;Bf]jZh<&OMh2,\:_."&_1#31*;mb"N_fT;6L=^;_,eMLFudP5^H="CVK#hNe>q?[oC67EQ5S[Y4)`\&8t
%C$@)"@:4QUT=8fde![$s)9Y7mRVc.4NW^Xpp`]*#<!q7';/l$1eIR<(apMEFft`qJ<@7\9FNcpp2=iht@^Bc+KZf82LeneeGM[dD
%)#!H(6Vk4L\XlMp3_hT(=DFT$7DP,jdg)HcL/TI!k;sp+4i!q5kD;R3;rEP83"X;.$-soqJCX=0h:?`ZV6GZ0N_\-`"VkT&Vf?O5
%R+3k\<NS2BP)<83\!WId$Yh?%;i[u_'amc;Iut?5hG+_toj0@AX,`M"oRJoE"@<]QbQt'5gX_'`4UiZirLsY_m=g1Mg=+W$if%*&
%#NBG:(>%h/<XdT?ED`CRlO#!Ye:PRVKV#ZrNdEJT]$]3spL!Xu\N,J/j_\^o9:H@bL=mmUr;6^g6re$gkcjpHqQ5fgM&6_a`fD.Y
%jdp:P%Uls_CI#$9V+S1=]b^fN+gqQ0=O!@9UV!Y=96`<8CP/-28plH6/sHaP>0Wo[M-%3:iTCJF)/tIA9T%9RQ0q50pFTShh;j?Q
%m?5%UVR@NZ2U'1jYT;?TnYPf.F)Sr-q_j1;bSMgu)3mVVAhnJ+/9(NfoO(DMfUP*#lPuKAFp1T7;")_H@5ZS>Z2'[Oj8L7cJpUCm
%U4>M3o";iH\+R&<2GgUceWJ_@//nAF,ib*k2Q"JmT5_8roR):2UgZaR]\5b.d<@=g1gXJ7,5kO(G1GY`]oMUZEqi`0IK\-1/TB=*
%k6P-qdq(?*>$>BWPK8k\bmK%)V29*#H?=F&r4nW>3h>RD=P)*'j1FV?IT1@'FFlK.`3=$^fhaWbAj>mILiD[*.gV$qC*r9C2<IF-
%1c^s>j`V!c6tA/X<!+LZIJTVOpt9i/44O%1Y/0_X[eU!nf]*a:fI-<3CBeW]loX48lX=-$)HUQ\T-c7PD44GoD._.po'a2YfLdoO
%\1LIVSO6nY?oQa$$*ImUIE'<1Qe`G$l6fihpZ/?!7n-r39Pe#30M6D\L,hE%HJ)OhopfN1Sn7k`cqBmX?tq1BB$9U[m=:n!Fe%>W
%\/O66c<8,d@R94+EEl/+/\/Eh"+*7EbBfZ[)qBP@/^#"[J=#kd4V8WcEbDbs2IH;_$!2"a%+?3E_p1&3.KD*N)/?H]Y+BI:0A'5J
%^&p)s3t?X,)/uo#HcAR%o7$H<IsembYrb[,Z]`k3Frp`F&\H;j[45dLV-rCKX=-Z24S@UXgas:rABPF":`MX&0N7u/hY#F$PES:q
%h-.FI"2r;/VZ1L`Q2Qm%V"t'%gu.AsJsl2-%1qh+NcNA1*9Yn>[-Fo43)$UM^Uc8$]Ccu'`A$krNb(biTYutD#AS.!E$G4:"!#62
%$um>:Hqq@9]lm6M*/=uIF<<2lST%$V4Ds1#Ud&^LfM9<9h`c(h8=u$JFuo(s+W!3XK^E,JLFrLI22:\,%dfd"J+=FP]-.tT1[_-*
%/_rWI_Dmjc*Bs(OJqrKdl?AgKJ+?:dXYpcGZM3t4%3`5%aV#I$fs5bVLNe?n'R;4Z>5AB%q]@VA(s9-DI&Hm>"0>8jJOta<YiOm_
%Q(R@tB5?ITVHeK3&X%ed>E^51.Ss3PrGII,CJ3KCL+)5o<ei-XTpbKC<6k:Sj2dkPN&`KAI8F.N94H#P5uf'[bOE2m:cPMZlc+?L
%KCYpgo=Fc?<eYPWRJ@0Y4ZE9#U1\gqr9Jj9W+X@<1HQ-^GU!(]5<1WMQBVsjdfI(%??a;OORd/#>VJhXmZ4pS_(a-@++A=$W5ie>
%&"+iB>X#:%1!'f42.P?FDqeNs1\nO#c'V0pCV4LOnRg2kX*ASpF5(PjL$YZ).@85FeV.h[p@O:JY(BamD5XC,j9*PsBP^qh/R!AS
%59;#*W%`5gGY!V6%f=:.&E$fsqo9Y_5B1]PboRep&iElN7coYCN)#h7N>(PP*+@sYnjoO,6"IXM,oE#\\N4`=HF#:AC9:Zi0:8,p
%p?/'blm#VLN^$W_N^&nJN^)1`RJ'/*D>lBe'-('B)EFnW20)g8CRf+R0%N6c*VOPCq@E9?eSZIA5BG_%dlq>q;:iJ,HA!?@j@-%@
%Gek`Di4;r*99q.F.4\V@4d#a5RJW#>YGqjMHfhIo+?m1*#8q(A32B;Z??,U[DiLCF#*6A%WFr(l+T8hU^LR/%TZ^XhIs!^)fPute
%RKGtE@EVS.XiVn]C9:.DLfuageX3bJ">=M_GJ]u#jPDJ+ZGU7#$2l(D%`oL4OeJd2a#.6[<*N_m13#-AJ*t/5No[TQGF_=%(RZ\M
%TR3Q=*/GOJ$UEj`_gU4#k'E?Kg0WkXn3m'[N4lArqd!jYZlo#qlAV-sS8UGuQGnlE<+fgcT7-&cF0^<=Ji1(lNB7p=1Y\V]=gb+[
%FttRf!<QE$j*T8Z@Vr#T<Q>;+dJdU=2%6(f*<o<q%YLZsLVZc^^P%k7/X2ak!24a_F\eK'MlsqI.B.X@%:?+6jCq,=aN&Ja\^q#`
%CALe/a$_Eq8Up0Ej,Rb6NXb:fns_O!X46ekiP'c!Xm,\8Z#/a<Y>6t=0/n.2_S5mG=9afg8lVt(N?24)FUHnoT25f+bh/?Wk8leW
%R%Y:55MChl2aYjXAj9*hhp,KWIT-qq^\/6kdmX#<X#t.6QuKnLFi#0OVBm_0>VF-GM6[2Cl[=JU8UknVR5*5'qPZ%HR`abn^99R*
%8r*([OZPHaWJ,SZHfo?jFuJD`fr<=RFFL+cj[>/]e%!>8'0QEH90^c8d8ut,4SS.gq@s/ANpSIq62Ipg]^+n1KU8X@5nu?o6kser
%">-*WJ+h8kq<T[`7*Q18.438HD)UH%DYr8De0,VimYo_/-N3$1*t5gn?L9kq*pc#0*pieuq9+a\plmu9YRTRLFW83&LMb++q=BXF
%KA4?eR04aK;b0+;O[;,0Z^Y;3Y?NVB,8=8'cY+b34U(1S;GUT8&Nq28d$AH/N`C[s/[bu8:@tPVF.0LF9B:h4-?r0'_0nVc6I$A*
%KQ#?qeaNd3-06Db7$HsoYe48]nt*:PFQFpVX%&b,rr?X[>O-H&OTTOd#.`%6X]X3*Tn#.>q/?MX;8C=<Nh9`lOj7>Zhq+/A\%KC8
%8\B^f-bDnP/</`@Z5T1e0"`(MBE+QMI_]CFVZn/bp?b0g;#;t>8`^XjDD'j.i*:<@6@'b_Us[ofKd;Kpo(s51jbm3[2iFV*9;J*:
%ADOJ$\*PH?eS:+\m3NnipV(EIgOu6"o5_2?qGtkiY#D+6NiMB[g5g;J4U=dPU==H5=\ulrSGL5mHnCc5LKW3"eh?C21fM]Cg$"3g
%\-.'=+A9OMliR&#,"[5T8Pmot?4]P">AUkoX)M&j6I+S>:&8J$=)/kWH)?nfA!Mn^$E'#eR;DI3[2i#=S]8jkBGVW)r,JZ2[&5)@
%El9E[mjC6;`ZuXW]kq,N3OmKK--ZY!Qkem?N=jURc_g'lK5]VOViT$LILlOuk'=;K1(NgFee:8kg^@@$IZ?*g2b`Q%Md"dq\ub\8
%=OGQ/Vk>!73%Q"C0I1Q0bN/e0NYS^Fme4jK:(*D[M1hlQ.!KV9B"ph3qdtt>2GH_rZUcRKULq\U5d`JmoiuJLRG0#pm(0K>YI%m6
%NUn2Q[u(iG\p&U*]rrqC7H*3sm,RFD$_.Uk699'EZNOG%)\&c24oTQLP50hl`;#"dHs)[^lb?Wbb7_fk[UhiJ;5'g,gK#t>cQfr!
%(#@<U%5+TR#OGQqNZn'mK[u53ZLi<5TiH7ZfR"\d@Oa%J/*^Og'@*6UC#;/+^tt+p?a58,2GJT$=X)a4[`3D5[<B(S4>[6<"0AX^
%a;&XQ=]%QE)GLIJoQsVuk[E2'#icfC8W=5?go]#k'q6g>8"=X05tD'h4@sQaSUJ\jg$uGh^1fB.B/m?hTlGG3o&a4*St`qf%@Yf9
%q1gSKrVVGR2sb.!D/hE@\?0YVE(NXZC0dj7fG@Gd0Q=H7=BcWdra($/_5ZSJ=/`I92\iB7b`5X1Nj*NuU)45dYC4e3fUeQu_#TR%
%Y1""nG8rjgXn-;S/N^4\NpNHJ"nuO`Xn2^'Z`AFGJq4$6=N2Pi'=Y5=bFo['ME.lqk7&9['TTRM6Uo$!4*WUNb,f9!DN\C'IEHBI
%JgNS]Z$C2!PYM6:TIeqN4UK[Ep!gmk*QHolEILRqmpre)k@u-kQ=ju"_<Qe85gR+rW+*:/=]8/'`NoHH7lVYA,R`@[0=VgEfL2aS
%Bo1a"[G1Fj^UD(P^)pZVS$KO2B)1]AiCp;#&1%*'?0t6*Fp4-cbLg\TH>4;"Es5:.Pu]]+jV,!&6"Bq4VoP.>'heO+EEnEJ%#V$c
%#nM0(Nc9,]O4-LL[./=l?_oKaXf$5@XAV3..@].6d8uNTAL4gmo^)Db-d1idYrG`'Xp`sPD>YpL-F^\3N]Kp*lb.&OhV?I=_8]Hb
%OB1'o"Uf?JbpYHENJhp.gI0"ps1.U9T,O%kTQHL+LjM2FE7pMA<dbi?8_^A:7TJo!3.B6KVCLoa-+2@%+?Ce9?C&BQA^n(A4[hWf
%/8Q&,WD`@GXBM0i9,UC*c)793f^7f6YWbXMqTQRrW95,d$A#ci7h0j_krc2Ja-ua2'7DqR7p8Q8a8H)uqcr(-R=V]&Z+Zm\;%Q73
%"FUdDJonKiFUO%-@%m*,-te)iBTH4&2M?)d[XhQH'`4hL(9&oM(H20j4.!:PWh"*?s8S=ipcmjkrr5j@JiDRN8&Y$b!rd(!fs5#s
%fQ+=f%anff,R=/cckZ5ec=&W%`%/(=E6eXZ$Q?.;V-a@Fg5cI9*+>(+o.HQQ@oQ"s=haos'WLgK,^NSSi,fbai@R!$o>]HNoV"\-
%K.?+<;ZCDrU5m+5HNthd$N-5&l+*m*Nu2D"[0SN6N9cl#Ln>oS=5\j3V&BT<?G:1a@O6t2AYTbZnd>:2Ot2E'=@,KA/%Gq+($8JG
%,k;<?8?O.[Q0Yt5j&[^3JQ76s8KYj"+h?1K_R5'=IUc.7.^0gf+n?!<:p(LZO=Sc!QMV@s=A>_*Gm40TaYd3EkIYRG/qR>^\_N47
%Sg0A!i.l?LfRmH'14Bu!8f/]kmt4#7JNm>@T5V8,XNX9q@X!#=P$g2@?2_6J8a"j8pS"=omr?Cn'6WcFTYc`cgZP';<0aqjmFCfc
%+ouhuHX(e2_DZuJHZ.-'Np=&ee$DYZD)VKdib;gsko.1T'8K3U\8ENPEVe5D_,L6L(oYD@#Q0R0/0(pRX.2]9qO7Y&Q#6fu-X2(e
%<qV1V;:U+eX7l1XO+mH._eJ@"njA:^&O9Xq^.;_[B+ik2=T,GZ4g<O$&i_o*<TYdRdV`DU)(-BkPU^M,*,d0?HY7<4[WX'?fL=Q&
%=6?`mRLRPeAC,AVG9MRem:0KNfSZ?U8%"7<S%C6=?>nAN$c1uJ)bL^sh.<Y$A%[X83bE-8T&Y(8S"<i`R!m::e`?nbk>/bNQ1HJr
%S"cV+A^_53l=nq-q[DMel0U*XoC/g3.^Tkm"'KRjL_p>1^"TSBKm-c*0E'`5PS]9\Z.K]'nZ33B4L"^IRh7#CXj4W36J7+\JFu"4
%ddIoN?*tjP1e1t:`(P3."++t8CtK6+7*8XC*=ds-OM/"_$GH&/gXPP.;qTmaJckkOQgQj!r,%bZ#1J).OU(g\[(Z^A*X&6G41Abn
%NAc0pmVCpMHdfO]L9Hm"AkEGN9gE>A_9q>L2QS\r0U(FKMUZJp@oF(Fc<%mrY-V1<FUUo]\(C;dM%Bn+<oO<`'@tqpZDR.VjP@7$
%q:^jp#AE5<?i!huLRm]Qod9?ZhE'7<WSH#\(K:c&:h4q+L,tqt)Sk4m[.CP];kbl:OWs.12q[&YDSln-6[3ILaK9,E+"UX'J!>QJ
%[TX[[e5,<T*=n[2C_j@1;(\Z5\/_#/D1DePhmNQjC'48u,b%]>X9OS_+$JHF_$F?d.Y?Nt81@$ZmdM[3'h(N'(Qncf$]K0r1Tb6Q
%?b7qc^$HK<K#@2;5qCMM"kR6)ElB2+C>!M#]);H_7dtZ$=D*]6W\r^6V3KK=_"LV#emmVu-f82ripFtM4EiF/gM/+qYQp(j`JO;(
%o#b'1\"54W0#M,8SU*A:3&>r;DM+);\(L%4(#Nh6#]^(A-<`h+EOp69<UOT=8m_0aX7l&(g-b[MlWM7=`ph\iO`\(8m;R$t]>VL$
%BatN6=nc7^X]jYlCJ-lWT$Foa^2>Q(-jSH)bIAMjJG(LcXUa0mmqE0a+BD0ja`8`?8ndCZd#g'd3>$O28a7SRGFI1N/D'pT"E(mr
%ds1,r\>l_"h'6_G_#hX.[X,D,o<pV2^%*<B9#i?NF<9[g3SoM[\k/srd#M'U;e>D)S]sT=qN7K)_bWkt<aW;IdUj(fkf"$sE2ZsT
%"ro6pmC/QKd,^.3:/.#=ghNFG]q-pVc9lhNXp=*t)(FY4V_S!"\0UgPLf\5m__T^#a/rCa'^S-rCatJ%8A@%eeG=)BYjdNY:BNVY
%-Aj*PKeZiBkBTd;0TmMcdB1L<Z1aIQ!U\K&)D[WL3fJ;dHTV_?Si"'2o&]0KKV]sg66cf_%'4[e34E0a[6W>e2+OILOp<CVE":?W
%N5<CIYljZNLLlrEn=%!d6.@@nm^SCcZt$*L\!pU@^*&fn]Wgrl?C#>&M4g$`Or_9aIVfWE)J6PA\AkrLZE35TgN/[cZeb%#Y7HRY
%Z"lli&5@&G-H`M&+eMh3*&";K["[t_:[2BOUNtE/SAa-T.PAc4-fH$+f<ba[[VNX[SX*bZT1\g][1fUnILOtgb#kd7?U=,@n]%eE
%Biih:]ARM[`12m;G]$<%4?`-![8A+%ho[QNV7!cc?i'V>[]Bh*`u?u%`U[gG08Jf_@0m%R17IqBLL`Jnbs^'?F_0E5$+A:q$4geB
%2MBZkct4`Qk*)XH%n6&-544;M+HmO?QL:@W#0-3Q(6ifXAY*SMDLj?3a=_@8aMhkR*H!d#aT>Ilml]`hL&u)_%Ku@bO'U>2)sqn^
%&#E_=YJH<sR^UlQ-Y?Gi9lYEs<o^*(q!2A#<BL"P]s^mHO\jb-T`o3!Ih.fh4*[R?(2M?N6bY+0G("H2F[Yp);f2opa=:E7Ob=<<
%GI[<Y8JJ/SVJW*6r6"`G3`<Y=r!qCd]lCW;Q;&Pl.<aZ]l27O,FUL]n+[,T#*t68=XtmmB/s)M0LpDJ6GMDZYU6V;p49?g?CNa0$
%[34;LV#:mQfeY]\F1Xo<Naj?0oQ:O!ZOd;?A*PKR<`qOQ#WgN\,mA)7VG0ic(UVWb,^J+]XgT;l]g$WEcB^R5.H2V=r-a2FfkAGA
%Y<s(L0Se^a'WtQ_Oq2fU<m!=XA[)JNF8(V-L#FEI>>K:?mWs*EY85;IP0@3"!uhi0X2VEt'Sg4'/#G'm*gVY#2)e%o/OY.>U"=E+
%eBIAW(^7pKEMXW;rE=rAU3P;rKC%2NoFBF$LQB0>mR$TPMakX&]f\M)rP_-tjpE[bWoNFg/nN_\EId3&[VB3mcIo6D8)>>Lr^kba
%Md6Nl?rtt=R9>JDd'e%h&Fu8.]WPh9h5#L>!@pG.!A#>nRq`<7$8ks#QjQ&3?W!8e_5>:#1.dS%9aig@hYC*B03\blN7c12>iF:B
%g__>r=5')T$ntFlf!DQ2/VEPk]9^$BYW^JnF#L82eeD45D/&EM/+;L4Z.,.@)dP[^mh/+^i,eiB_>fi#NS)CBdb&Ok4]q&i'3NF(
%4N?auo>4\-jo^Y]Q/N+8*qa^O3Pos6118lelIW0?I,Q."W#VD[*r(?`jKc3VbI(O1js!oJXbA8$E66eKg3:^gJ$<]ek]j92lQe2V
%Q@<VNp\m#3:0I;F=:s]1qX'rrYfaeHU=c%u^poB9>al)qCbM,liBtiHlm&^`r7KK_T%7^(7b4tSg4f0:nFI+G";W2b^a/KSIA/mi
%FkIi0.^5'P,-See=3Fa6Hc<XBd&Y$Q_WMHG[pI6'aq4])e8'NSPS/6F%_[==ip>i,U^Ma$4DK)/G<XZdK8`1UAi5nB"$0]ch6#ij
%_tc$b>d:Egd5>,r\8%g>9l?P6l0dJFn/ub(]g&Ui/I@s-HGGrGc,36tA%>d@0+lc1"iee/6uL4k\'&s0J@FBh+`c>MdkI)Ii^E:A
%5LJ^0:2K;ZH_Vt)<1F"#(7lUhp0m@bQmD#s+6-UF'=(1;-0<k`Nue3(E#n%Xf7k8Om:"GMoG;!2e'pdiC>r)K^cW@K8?5$FqJRR:
%_\[Yt;0lCs-=k9^K,WD>^)oSKd'RX72B3K"FmM+4IM`bX\@&.I#)n,(GQHhS$<M%^020Mr"WMjB^^(H"Hujpq^n`=om"8*oV3E:R
%oLG>Vl_Ne&ObYMF61:kiVLS<:`0pg8_8;)hXnEB@[`]2=);j7Y+`($pRJhf*ZfR$X:\G>6^V1.l@)H,L/P,;Kqtd;\WK5Tp..tnn
%>);e$GR,ICaETF`R:A5HRdf%"Nj/pLfWoK/*^Y+c_*_PWPKS+F0%%U7'Y+[t4r`>ZBofh8f]LSC/tU0ZHbaaA!pbXW?Mf^al,h)3
%RjNs>loo#iA>^cF\=IQa9(DYC!^e`<+2pX3"BJ50fQiaR>UKC(=nDt3l*Mgh?&oJBWcgg3mdRh"`)#^$nUp<$@0?HGP8^\2`62o*
%nX01Ga.p>=I0r)';qVYi*3MZLWA/SG#o325KJKQrkC3>&(^0o"4F">M!!]37JRq::aGn$J:$KNXMJ!D/"DF,pZ1gCtET5iA2C4)K
%%c0P;7mSR1p:e-rq.^FUGuJ/tM8OHt4EJ_k!c2dL45AUO7%LbD;K.RXiK1._=U,,VGA.TBGuMPLUkMV3\UYfce#n5)@Jk_>,UtA"
%.8]@ofsSlQPSctq"=8lBIVq+/E3_#h&LkBHF,o9"T4a];X/JDC_\!s4o,Q__Aet:"9Q=;VB6A\"n08"U8nh@LmCg6IQU3f2p=Lib
%3*\2=%VUn:U6KnUg,$QNVheM.Fc4F)6*!,SpPbKrpV>M/F5>Um\#'>LQYRj<9KRH_UND+)bf'8Q:FQC)m8>tWJ<07g!K&E$GjVGb
%H0W0N.0kGcY>1-&@F%5cGW98A@nWW`_*TY<@bS5b*93\>S4l%pRd?+TKp)(n%SEd\ZYY1EJ8X9@C6,7E)jL,51J-3T5&83qpX!&c
%G0eeTcO_+J,,*lfqn<U.kgJAa&:-;f3a.E<G<N2)4XefMaelq7PFNNj1]cUiG!>dZQ.pKT4U@FZ:lW@E5*jr-Ti`h774,IV:#!`g
%'KELeoTZ/JHPR9ppHGhTF1gI@16eZ?M/WZ`,dG]X@1LdY$:>Kq+!nfh-PKI<7$''=)2CSKa'f@Q*")&L+@up"]a+A]RRpF:H:!cs
%kaaC4l6M(WM>-b*%](8H-)(e7n_u7+"nl)T9^U87OnHhRKQO6r&EboCEqP2gfsHVgjdW4lVDDFac9is.o@80u;k!l#;dma=cFeY\
%e4,FK`Lc0$WeW'1G).\Vl9o&QEu+R?"k/McYj2Te;P2Tg:d(&S4j0sA`\if5OsCfh-d7-&8RZ;lrUWhPK%dL'l>P$HJ[nZ`G^FTC
%MK`3pi,R@G/D\ouCPjM<[^c)<VE-32.hkQQn^r38;%?Q+.PepWD;tM(V`##5Q=IO@,uV<4Mu3#hSiA%%(EE7U'be8WGc6^cFB)i6
%Wg)-QPdSGqX!PT!JYHQ+\\K2_P8&K6S:?!YUgFl!]_d/J+`n;VP6B?+-a:omVoWSr^;GnRmn[,uO!k-fKt[k7R"M,P1\(G6qM;N.
%lSaY)*Ac!D,OT?qR<bN'b#NOPBc:E*dC6"'gV=1@JKut<`!VPC-R=+P9(+ftAY<j3I[oE9pno]"LK3XhGEk6@E0nFC65>_BIS3$(
%eVUkdO<4(N>mH?Vb"GlT9eujc-'BMh3[`-[3_A:B@f-lCLeDBhVM0.\?oRp_p2l@B(d+C"B>\^0_)f9kfG*ZDEQ+bG0O70OVISU2
%\N$hfY`<[qdZb/#adMm!P+g\^[=$H5Wo0R^H[\Aan6U6H4ef>"9F\VL^'9ZEf*_3mQ5,XUZRf-kMMbG3ZN\dkM>AVl:Ulf0s6PXN
%XoiS/]*I;4-S>qJ-#Q)0]q!!E"]GU/G#=>H--"eoE,dhh_SH!gek5s)iqFW44tU1Qe4C!7'CR$VYh7X]I47)/Ib[m8[N3Jt3Z,\b
%Y<eOnM3AYJATSuHL9jOrGusec-R_D0(G'qh_AoJ;'RoJ?Ipug0I8mji:m\QW@(VI\i9lYpH,^<Bis64]6MG5-JgNTPQ@j6r[l^%:
%iEZsfSF[GaR`A\88\qcTJUNn28T&.[5;BYM8)V&'YD&@hcm-G"*1:3WKYYkd8Q%1tH&s.9@FB0abiG6Q'L&+`r5qc1Pi9p]-cQpM
%)^!"2g\<Y++1LSVR:+0i^s4N';CLlpaNriTa/u>[-)(AC$QkE`^U'+<I@,9Zr6#G\=-[^u?F(,sY,[Od+Q6,C+UOk*&sKIu\D>3>
%22*]$_(Hm&9KO'CLImZiAnLu$2_4Z(l[G2RZF#sqK+Yp?N&?'!_1Gr:lo^FVA\m5UfWb1sq:>1'8VfNm,Sn*3@=DK0.7u;arb9(j
%Se,U+RmDcJ!aFmp?/jp,a)sg*j[*?fQm=*tp)[bSfbN!LS)X+(26*6UTm+?nW07pM-Jgue]Z-5nF4Ja"QgW5Op)7qVCN5hL&!h(3
%@(I^$fXK0Pa_`q_%m+geR^O"NZmgmT/9-k,=Ql;0#O3RgTo&MhC-U!5p`*;7n=]&qp<4"G$6PtLddjOF4OO]m)sXIXhT"gKCZBU%
%N`Xd!E5oWe'"Fk*_/^YUEO0G0![1QPAA&PoPG"m&MCFLYbdjoifj8L4h2AV@(:l`fjpNX>loM?/,qO:Cl"mnhgNApRYi@A7eIhim
%]+_:`.Z.Ioa+?"RJ&a=mkm?CQS6^H[/*_:YDFlk3d_3a`)m*D:(HM0\]5-^CXoh/$@e9N#brupnK"'e^_%:VMp!+;ljnt5c5oB(G
%jh41CNh5Nl>>SC^XlW9NV]K#W$_tVch3tNJ:PK"F6<8>cr=BklHKr)mdBdDa4@^)OS6Yoe]q]@G4uV0$m'pDf7$jK_=tQ3;5hVc"
%T#,fF\8,['Mc*`4*LdAF[iFAi#e,2<oa[`4"g1/"@T[e"-6XO3'.,WRRW:1bW5HqE>dddPCf5efGYH_8&o7uVAH4`l/0OiS_m"/.
%0[c)d(<p%[4W)\XmGefp2KGZ'Drf+l:n6Z:3!K*hhNM?ifn45:&[t+K/FP"%Hs'':SI3PC\eTl%[p2@Wc!'jp-LATI$aOU9;H(OM
%<eRqC8*>0+d9Te'grfFpjd9$<\9_;UXke=K2SopRZBiiO%s?rM%4(==GtV#_hGJ9&Bfu2V\#n8B&r,ls5ro]qNp2E[g`l332VbI2
%$V;UEVJY=@8c<t&$l!uTp'qZP3pa/uEp"H3GP5T"Z"]cpgTD6qktN`=9_sK(75C;A'5#kQEYEV(oZq=4*(SBCJK\`brQZ.3M:r[*
%R(bVI2nOgCj2>G/.=QD-9A<B5O`TT'Xg[n1;acuHaSCC==qg)?KXZ.;A=0=bDtej;*Om*4bW,`Wk8K&]+0HY[ZE?@`@ikC$&Kf3)
%;<0^AaL-F(fg/M@$/aO^Pe^LULZ.IuU]FPu:;X@TFs'-T$Pn>qV%_\D?aMOn>u&Ik93*PgTjWqXE*V]2JZL%,^DEP;YJE=mU*RS+
%37lGQB-]ErI$hF`eE.=q&QRIO(%C9dhBV3nq;8M=SKnit>;PZZWc>==,_q6Q:b@0QlrZ-)1iZi`ph*ekBo9U(9m)UM`TOdTI_ie.
%3Q,>mJ+=I;Qg$/n_g9i"J\pf;>)C+L8'jt^F:Qc2mrNH8n.X5nL(C8<:H6Cl/D3I2Bo5PNBapT)p<`GWk8_+6<n]ioM2)tWps%@Q
%/*GQBXaB+kmB.L*')-5>6D2"Z@BZ!6l2uaWi\lBD,R^47ITSb;aEua-oYle8l\;9"DAIT&H<cILmrdr\o8RtLp0@dh[[ISoB`O7o
%?'a5+LbbCQD&l"n_eWQ`X%P>bg_VPYZn*;*(:Vs%Gkt!L&An&ZI7KDrraB'8Np(OLnHVRT_IHOnf]BqtHdlIc7_*a,BHZ[V*i$!X
%O2"?^RX94[W)V2;],XB1Dcb;h'oo]XD'!Z82O%h=[B1)0;(GU'kt3Pl<+1.6mYqj4Jn%0CI1NFX)De4[Z"]bVJR&5%kd=na32[u`
%9^K3<5b/jm[UIJoTj1X_@AjRJq)N1X)I,#HnZp:`G[M21%KSr=dBu\QL$Q==05F1CGVdr"ZL\:.+/@QQSjPl0=?b;,O'(V70Ln]l
%jCVkKLnno>p;:W/%`0kXfZ14i.%oDDpRuK/)<o-R4Qfb;M!]N1\3Q(AZ6ZZ\,SZdqG"n"6(tk(bOQ+3e$`%0=fif\r!q55^$u9^6
%9KLs`2(BOsVQu6?[Hd.T4SDf7mm;<=5cdpPO"55(Do^RmX_.#6RdRDJ<l'G7"k10hjrd6YX@uk0H/Pp3fDSWne;;g-G`i9&J8:E"
%fp?)-/:j>o;KPC)miW:EL/F]?E/D`;eVKTLL$q<p1*K6[1NDh<WOgV$gBo^P)i/2BZ0F`WgNB'rc32U9$1'2K8P4]MX&SRjpc7X!
%N2F$oQRHKUiKFi8f-<jZA`CBrV7P2qgS8F3P]G^dXYjcr\PR&*$<jEr$qoQqJW_"C9'7C^\o,/DXsh#)_4t`U99CF'coGNpP9e8r
%ST>T=`gs3k[do^l<BWt*<==4`.jBn@6F$eFgm:VVkf]stXXe>#&-^i(Y$+k[]Vi"/$Dd!k^ck@<.*PA4O/]IU]cJt9#qWd\Yc3)V
%WdGh(RW$/ibAs6Ulk(s7/UI+:6XZ-JZ.28kY*I7`Kg>M&=SqnKl3Br1lH3@oi'9WT"6:"bbW35?4Ll\&(;>6]JhQ`DO^L3oJUQ`K
%d2A1_<>P#3B[bqt-qRmAGJY=J8NK([`l/n]VAU;3NUb1$`hW&s[+GY#jUs0=^tsjS8m;&m7#HThc>RJ5ZoT:;Xhlg\EQ5D$@(3P$
%9naUc3-4LC)3.HLHTR,H]L4,__!3u>+m('UW,D5_p/a1#$[]a+\1Wa`N`]>pF24p`FRuc5V>F1:818TI0F-hFKpOmQ^@qCa'i[S/
%ISaCcjMUlc'i]kP/=UZC-:u$Q7g/N=.O:u=ls5lE#0NfRLh\m=m\]%b[9ukhlKDfibShbmDnsU9SB\miXk#'/bcV.'Z8q0RSKd/S
%9!VQ(`LK`mI:2I*kd+O!.=r\c*_?tP]fRbIFcsVg`;AoE#H?)K-B[8_Z`AY10feHM-S[BuIY0cHG`+]>5o4eX$hA7=#3dCeQ&0:K
%4(DnC(*)4!dm1BZ[M\N8W3IG30+(%e(D#b.f,5)6B[[Pj:m/a`f7Z.PP&rVMr!pKcb(Eh[B+&l(/J+TEK).<CD_1+aRNmA2c;DZ`
%=Cl%o,;q5sXYPLBkH-0S!';AnLO.kFa,\_BNi-3KT%+KH>NgB@mFONoBhE86EajEP"?/<d&.LCWi"G3^<fGm@2>^EU?CX93e5[6.
%\>gfF=-\2(=*;@Pau+LQ<YX^&c7bmL-51Q(eHlR='Am\+h>W(m7UTR=BU6/Ucn'm9LA"Q7\t'S!`,qgffTuabl-"kSXt,J?PYK72
%8PZqE2K_i@M7-+a]>5,s_ua.rl/@c#91jM3U!a3>dr)1>i'=Y^#O.,.(gXS,CZ!L?eJ/LDTpN#]ML34K;qaqjANNI7loYS1(-n%s
%_3a"9(9m/=[^7q]77)@0?:Y\:OU/f4>*("^)\_\XRN1@JDD\R!]/`:Qdr)R*Bf2(ha@pd[RrDQ^Sh4AL]Lu\P(J.LY26d4p5pT#?
%:A,`F/-j=p_N9tOH$:3c@oBB))+#T[o6TW'/#E7;ZuWk0'u<jN"SRA#OS$>DoWBn]HUWBJ@oM0m3?gnI6JmfDPb^fe-H:g3ORTZb
%>lnIP\X=+^Wu4E"YFUdUY,7r24,VNhbgLQSX'jRoamlrj=Rd6E\fE(TXindpcPDN=Ld8Om;7Q(7KV37;Ui5'HaY9QjZNKPL;9]/f
%lCpmDIkAP1cU=$V]F>Vk\B`W6mZAnYYqRO2F8?<&1<[?!0HlQ"cl>5f$'?dJ.5%"]/[,c7.1/!Ihl]*%Mn"!+EeB,laY-)<P@#g7
%VYj?GFF5NFkI,:)V1<,ns.4i-_Wa0TItgfLS9SN)H4tVi/ut#S?.L]UDb)41$iE726W+6D9]dF7<knUs\q:nj<Y0Vnbp)TLG/o>)
%ln(IQZ8[Mn,qt4R%EmK3,!Fj@%uYiHChV[jR`EUKGT('r"%>PMDhg>F-Rd24Hk2((G[/R$H3l*d^okCr1$>hl`Dgmq`j@4-_h)mp
%Tf+g2>.\TjKb@'lKYTbr8<Qo']n[>["-o`oLa4A)I:KXY0Oqi_#rX1)g(kumc,ji<QMgms$D0rKnPPhu5<X?'>%2F:XeFh_&'Q)5
%E-_S"c\+<u5u0J.G]ka;+T#lY\Fu$D),2_)j0;fP.V</K,86pfj<U]`loh9aP"[E'VbI[aXd:8(@bSH0oN7WZGW$6(5')f3GOBYq
%JaTsj2CR:Z]8,M9ncKG\T8Kk&<$s*OhYRddK"!D"&oC2To=!ag9*>TM43UP_6"+Bbg[t]9jRue_`?^FEfu.Pkd+RP?NOE4-i_\8D
%0qme]POtu8(nSgjk8Kg6h(p(6,dG]X@1JMISY&"(Xs:hL78MNPRJ;MSo>HCu9YF/Oh(KM+m_2<^lKPm*e>C+t.S4*CGJY=J8Wod(
%pM&d.(lKo6KI'kN)8-SPiuA,]L^4;BE5K=VN5[042B?j9-kZl8'D>9a6"+BbHWk?^7#$t-)T.k6=+nG`#`mq+4Yk-NK07/rUb0X`
%-1hIWcN9.^3^%L=oBamB_7_gD4:Wc32St0BMhG&FM7S-D4eDu-[8%U#.r*NF6WB5e6Ka"^9TgY['B?f<?LWhnRM;RU<S<jH1LA)U
%K(KA'mmPgCW"YE"V"Ym/Ut>bp.5nS\4$i$4$6`9`*^"Rs&sf'_St(tB,ef"k=FI:fnI)4$8mq[t6IJ*4oWEN"rem5riTI.R,o00)
%@1JMIaj@u<DfE^F+QTdV4;,uM:[n9=DA+jhNLLf"34:qAO-h2u.6Q&(Pi>50e%R,l9h3=&jG"p-`a'i7N"m)H,@2QqO,Sqn"k-6n
%Y^]Xrl!IeD%uN,oBW=uU@&CM*/>t"+.LJb1To&O<pF&Wn'D/d:cd<T$i-Cf"H8MPh35m+25O=TJoj#l(/_Y5uAV?^ag,EFMdj^HL
%R;Y#4_q0fF7poD@G6']Kg]\*ba$!F:3#l+u7nfh@^oliedH?/SX]%_Zaen-R,U^V1kf<:+6dc-:CRM-:'O8ss+;?RQ"<KQ9,fipl
%p)UFkQr,D/4nG$T$&-)6jsZdn0Ji7d`uH=\ah)K3*$a927b*]s3$nlP6j*)OO;,aQ?8[bdj=Y:1P/)aF6a::@5!gVFCePgEa66A9
%9ReE%B$#C,!pQWhqtNaECpNLP&a$o&e!;L[Ep`>#f8f[bS<!(mZ0R#2FI&"q_9<]B,qq]@aU?$RSqFhM&j_[SSRCn0bC[hmdaSqC
%85_//SM1:@P%87gI9)DJbCEr`WTj?E9MH<soATrI'RCo_1@:oZ8]g..A]+6'KieRHV]FgU8;Kr5r6ArM;*Xt$PKOUM4Lp=]$O`QA
%e.3qKO3ZU7IdeIYRehT5O<bUKdpZ*a-RfBenNLShW.%9H"BR2;:N4hs9\2shI<cQj@hk<TA[uD^KK!H<"R-5i>mp"o'T1s`@XNub
%q8-lD-*<SJB$>_t;`K@#]T04gm#`D$!82QU.qDhiX>-=FbVdD6\Af*R;*%!OB&_Pk1/c8IQcdNrR5pi^0/LYR3-,A;=%SSI5/$RG
%VD@aK>'bq9:a?f;G?DlL,__jPkOZ=m8jXi%>WE[,quWj\&9]?C5q33<N_8;70)FY8JSO@E<)CH7,Yh1'RJ<AO9s>nmEm?gC#+;7)
%_K7-KR88u`+P=5.'%_/2BfHp=fEeA?NPHM[.?^0Wn_$\IM_CVoY$8dGjm(u!(t/IFGS5'=frZg;F=Z%kSPPqL/9FRQ,:#_K0sU*"
%(qUilM$u$LY3NH][3p?-oIJAl_?i9:]2RC?L'VPZf\_Jt!eBf;X`fd%^:Cn%1o)j.B#"q`EQe<IXB/2t(Os[#n&908VS9G0KRWI\
%*/i)b@JYt9U:?QHGKfgS@7k8g\RZ';`46s,pe`4"DCs$kUaEaKHq6@cCgSBX+:da]Jga@l=AVO$lb21N&<g*hkY9674XEbVn#)'?
%YunX12PD&:;]kpH(]PM)mdOXR)MNe4krm98RC(dGpS,+NkoRu\MR(r_VUlEeh2_7'j1;5%*A+"W6r`nYo`9bQ6N75^RED!hA"'06
%6TJI^I#Nt7K3hen"k,o+0GdlTP\?0QY-UOuH.(1EIM-"./;Bl)1MZ"s-+Yu(5)4..@L;C:.c[:/H5T<aX#-TSdaY%uV!(WWV$.p@
%1^S2fB&=d!Mo1dVAC;o%Hr"Cu+VZ6]0_3/dRI`fpn0IK?!=<e>loX^TpmO&4=;iV$$@P"[;*%!OB&\/ti/V@*(r>kZ?jY#&'!Pi.
%#-@;b";Zk>%p8^pZtdTbV58rY8Ph,.>@8O".69CDhl\1flSVUH@Acb.+G>/(C/VI`>\WIZ>_Yj%E(-,q+@uot]rO\8T\`WbEfr6I
%Xs]h<V-+\[;"H4Bk-6Yo5qpQA&D0o0KVGAJ8Dfl$_%\b@lBuHTP$$q=0F(45cHi'Oq0Y3h.X<(/X7+*K2#7[cRnqO.53^JUZg4in
%jC,8Log<448M"uOYRJuP$9&XY;Z]9^'$j?pR50VYU)-M<P/.&_8^P5aoW0P%$#4:u1c>s\9`#Tm_fUd]baiI7L<D@i&qPJ^;p;TY
%'QYrRe-B\Ke4(iIUh5:Y:O/YsVEqdo.jCa!;fY6g'BAM4He+N5#]nI"W6AYEkQM?$M(h.B.ItB_DcIArVb'h5@2"gB6LTRf:m,pL
%mYjpj)*oI<`'=[$l6%)RVIL7kLG'@4:$F`5RZY:Wo4oUskVOP#Ah7B9)No2kmYnbGr-C`7X1X*O9>o!lZrk7uE>.!l+A(!fZM.a1
%Gn392Np@TMd@nq]5\60T:Ulf0T<hMhR[>@CE'?&QKC_qo2$O-2UEN4<0%.?M+ssZf;bqcQP/O_OJa%WF,i+]AG?:"PemMg@q?SKc
%Ng.Bj9Mm+3WN2&@,c46Alq@^WB1dJO""OIb;s/oMmu1$cb[=+,jsO.c7VGVVD%I(T3=,N+(Q*)RUi/+;*p_=Q,:9E9M5`3AfSt`L
%*6)Muga1s"nt760q^5tMS=eZUk<VZVjd29^)B]`NWKIPRT2\AXQY5K],;Ms$,Whe]EB]*UUR$jH\O^jre5c:^_KR3J:J-LLEnIj9
%M4YDodrCbJWu/+Gi">,*8<U^Jg_k=F`06=9Q3cj7PW?nap<6ADC;OLrC$J:A6BYG)c\-#S8Wjj]]rRaG5hVA1OlXIXjI4!h&LM_m
%#_>"/4DGF$%n$Qo!tc^@8#tu]%Rc]>abHAg.S$nb_Po.r*WVBJO&dXJV[ZB`2=lc?L2`M=m3*I#1k\6K6T@i%&KLKaU2cb:/M0,(
%Re.R,4UXBlkk)s<bd/B%q<<=;dk<CJ^%e;8P_AQorE)5&ZOb!cHBs.b=(9"W&n^eRP4VE2d_"B#Q[uFk)'[1ZpNbI\*H<)9dJ@,+
%#9X^EQ,ENu:/F\d^$hU?<,u^<PC[AS%`M@P_LDLM"Qa0:id9DP774qM'qBT_J&*Q`R*K;pIGtXV@3;:d0dOD6_1mF;6Kf!h>nc?K
%8Whe%N6`Pnf]:B[k-ff#ZCF6@((Vr%o5)<9ar-$0*]?$#rn3O*"HjHmHRC?HFcsVg`;=@Wj,,Y:Th*aoVL/DRiF<J^K&[Qcf9`X/
%:#$_oS_Hi37P(W_KXiKl6*?ale+:3YQ@qj_bDf:%/iSI#EoXCMHP3-"@,Je`:s5]7cN[9h./$Bf8*L/1R>GjKM#05Ag<_FGQI1,T
%2A1q*9:.d.,\8TQmpXqsdupTr<=)6+Tm)9'TMAB%RWtIR1dXcKAlc.+o>n]9Ra2Is_NY/p!gZSRl<JY=TboYN.\s$k?]ZJ*cnf)P
%TbA+u-B<j4=JZANe)ZWDlG^+kl34Zj'<dKg<A)e<hdaf@g$<k,0kI]L.A/2gCc^-rlQrp6WL)<OP/K]=KK2G`F>iRb\faK-D;"9,
%UO-^iZIKED)Cs:&/`DnIdXI5PpIXc+XuH"f@j*:'n(j8(_kh8#@TD9:#A)IgQ.N8aP;,ll,stFJk'`[J5s8?-eE+h.W"d!SqP=>g
%O"(kBj%J:0-S09f9m\<g+ZPS1o)Ld=&p$h9/C2]fObL_s8ARYYdLi`<,/RjR8oZP`I>]X%Zm/:."=,7L8ad"IJL\deccl0kTo!h[
%?n1s(-g3r8>Dh1*)7pD;jXu64'pCYQ0]rj9qF$G%FjA&nfouo-jM^qWMJ#mWW<hignK]]o,U8p38nDO^C!2V]VRD>K)A7T]l^]5Z
%"8c,ea=t<,Yi?F1cA,(qFB@i8CBOIh@0pAf*Pljc#jg#H.(XD[^=A7J1pAh0'#Htu=Ql;0#>10)c^f(-P#9`RAK"4pM5\*OSVUH'
%rQYICa[ji[7s\5_oBLDN[+2*RJcjDl*MbTT(q!u8HAXh?=edYurWqbgJ`sr-^^n?$g2_k1Pp3J@8dGs1PiUap3gX!E_dlEG6])Q?
%Xs:UiEN"#s@`^/3_OAVR7789#2kk8p9HjVQJ-ij=;C=#]X=Zq:AKaSmFR:aeklc^,44eNr4tOJj2Wo\Rd</UDLkR.:0NUnFoMnof
%echF<F(speFcmG4HPb<>.O56`'B=._J4bKmq+cKrrp300*L"9&I%fb?9&D*1*p-*o5P,bT`'WpG3Dbl\IdW.jJYHOQ,sdr?Oib8+
%Mh7oO&D1iSOEB5$]rN#[cEfA#6tRT69R@T.#:_!iTpbZ>^a9t$JUIqXj2J:/i`BNG`PJ@L(D.=D`.Cel;uS&an&4)5]ZNLmPRN]8
%`4P>m(D$q]Ufci:jd0'\af@61$MBnl*gN?gO9MB2GGlh,1.TdBb9;ulU!U9d*2O;_AgY5t,$mDhk_[+)<A-ncO3cOV5u1VF<18+n
%<0@qhogE3fW'\os^@\RS+p6q#+[_bs'CQuSot&[>.KV[>/;6f!=Z&93Ka"o]l);KO'HL)>&G>Q$4m,bT<ftHOfp(9RjM^g-Gn(4C
%-Q9ReAi_-\\R91J"nkB:"FVkaSor`V4@<7o4<7:"*F`I-+j=@U7;(c.Zo]Tt_'J:N;?*#TYThu[F'GAbGT)N!*U,=OP*d_T_#??J
%UjmRP>r>"Sb,3Gp.Gbr7%eYF&0WC)8NT]/T#=L+&98)P2OWs`Wp)Q!.F6Z/]4SMTmN`]+R_Gh,1FFNY:q[Rib231T8JUN%0Fjah;
%jsAR<L<Zd&CXZ.W>tGY:gI9!7=ct%ST^5tE!]!S1,srq<nNQSug#B"Z9PSd^1A@@!(JMT._#@2bU47RT>P3Y0mF'L*hh<>\coYYG
%PU)fl46,or38D(YfWWA9K?:09^(h*Dm^QtrQG0mEMT#/8S\T[hmQsUGFKAi;]C=+Y3BH-I>oi*N=]?hT\uRBYChEi:JS_Wi8KtKF
%)fI,;G0];';?CqkK<XQl8lPIaKd8AfQGC-lQth9HG/*O^S(HmWX?+]lp2E=fEljIEfjmU:6tRena@]iQN:$]M5YiTFMGAp`*PRA,
%F@[]HeAlLR@@Qd1T+rlddsDa-*TaQ0q(AWTcYu]$'Z_PHRcH3*k!;g3SLZ=UA=i+$O;!seC$J?uO<g]d'%e'M38?M=UD4aB=B/>^
%I(PqDW[b"UkB'+g,+Ir_/s#hL9I6P)i(Hh>S:<Q+;GkR3(7Xk7N$JQ?;(4Ue\<[3qG@_Ij:?Qp:'a@jhqtpPDV*,%j_Pd,bMe#"%
%$,R=BSG<bM8AJ"OU9OQ'6O^RKJ;@V]((<95RbJ5AlAWS`Hr?rJl9OrQdG,kG"\)p["NVq)as7SnPrspEA0nJ'MSX/PMF$AI/&n?\
%BocF*_1AO_3J_n!O8d&'\k*@SHV"[YcEg`N[B>Na9%E)bpT84A>pK)%ltuD%>t14]]WP\*J3>pEbP60LH?5G!2BGK'a_X/%$ITWU
%bkj\e9N+.h$I\Rq,AHCt9JZ-pWB^XLgc==?gu_^^+$gXFNkN.#*Yklq4kN%-_P[&a9>i^6YKRNTmU_-Vp/"r3p=+:8FaY1;nFrsg
%R?<Kue:%7s1ujX@h,AN]cSEeIcbl:F<+jm-oFn4X?h'cWc$?6^[qjg:eUG$tb9!kaMaR?E1$0Rf'%g!lGS\(n0b;?\o.u-hV56]W
%Kd&67582\qc\1@=5@`U=-AOm547Y^Y'AI#RkCr53JIg2\G_$Gu$ZCW-Mkn<N5o^i8J%IQi/cB]I#n#8\*nu\bfDWmT_cnNLjXT6a
%(5cVqCEFj,Or4n&q=_n%?]7c_!Cte4B`/EFXMeF00:i0"[4hjJJa7K]?^giYIj%CbFWMd,\XJ^n\P<U1<aW4KHeCaK",ijPD+]7J
%o$4e(`$;fRCD?KU+="PS1G[)k[[.ED8lLf*$;"^<]bK,.QU5_/0;Wa8)]be7,WDMX0eQ*jIm6r?7+(Nrj]PU`oR'\>PsjJXQ'VD;
%XAC03,uJc3;5*2\SpdZ"a=*l2\KSpRhnEFlMg/u-'HZjP*m/R$+:mS5-'<uRUo?S9-R=P*.1t3F^6!FE+hap.Ob$,'B1PQg]Slej
%f/@EXeCJ8Ps(u[UYoq_p&baq_(!Bg=Q"BV]$gKdh1:#CMQB;Vk<bGH;Y-k7*,hpZ2_RqI%qb1d3\h^1Y:4oJ7o;djaDf=(SId0.A
%c)Yof]5T^KT;Ig;YcAJ*Q&kjYJj)?D2Sunc`urg[O%W#A0QmBtgk=Q/AHOHb7Qdo`q+lg_er@IDmsW5\;W_.__pT'(b-gp@;]T(V
%VX.Es&%<QLP:4eh>OLocYpr3mNp>n/6,.[j3FBc([Bd,ReoE*e^9'V9<oJ-OnXVS(c0&;FTu'!c<Kj<ZqO1L<(J$(C$Top*P9;CB
%ZYrFV27RPEp=QaXA(q&m48d"9q,KJtK]dKLL-V27EajL:(YpQA=,A_BFb28\^V(ZMidAI1BmoEf0Wcnp/6KjP>qfF<"g.X+*Mu!q
%m?.+Mc(Ed_fLohQcA$1_l(b@dm`42CEjf^0.*HM[C_?f@q^??HYAUqt1dWB_m_&7m?ceZ)o=[P@-J#)sJh+X=^)^0aM\X!#,>5-5
%ASSZEp\K'ndlcMqCh!"d$)Ak+*OopF87i?eqW)bo#3'A[5_CQ(Do+3S\&Yf10WOd4U<-Lbj$aW-=M-d`%neVPrdq_Y3'hunFrag\
%^DJ.HrVhTa,UQe)l@X21jCRJ"I!aFU_p);^grg/05>>.SDro[QQh(KP2;HbW(/kc<Dj1Wg)-ZU#5k7<Vn9jh@:f#OBmGXI80(aNk
%Q&@\1?PQ6VC),CYF;9u<p8dhgcc"6VOf%QW#YAL!GJY=J8Wod(pNZi+dfTqYpYa\V\F!`=_T"VaJK9/9<#G.qjfS]9o=bDLYR=7Y
%''J2RcN;%$5\@YaK8uA)SnLVBUuVhEP4qM/3I^<VU]WC0<LS5?/1D2=I65YM3^I1did3jeeQ3G"*q.Lu8Ys1+-\n/e`1<EJ8lIr%
%'p?MrM*$F3'6cdkT=C*AobBn5W&,ef,WYBYkt/PD6s#f.K'6,0m3.&QSrphK7M6$uiY)+uGF\HVKJ`?,.7fRtkaSf;dKp7:'ApN>
%om!^TUaVpH&[b,+7F]8mLF2@K6'B_<p)__Bd:d7J_otGd+PO/S5"$#..l5e+DW;IA`s2!$,J(2J@gQ=VqhTr#Vng#2Fc+toZL>$X
%A[P]"AS#%C'MLS9b]/fAn2#&J7lGrX-h,J\`XJfi*aK%dcT$TboQUNG&lQ+RGc3b3;XM/5h+5U0V'UD,JeQbbS;B;DkNOGFnVFl7
%^*E.e%?M[\M9/9^I\V@NM5:fH0`a-U67bMm*0rlO8RZ2ig(RKaWToT*,r!db`s^I]mHC`ELE%ssDji9R/2[_@VC>gQHU8Js1+eZ;
%CPEWqad-IlM3\h4SuCYX_F!rIDm+-ek:JW"km7Nc5i@dj8qK`nA`"YXQ?UrVWS_\?77*G+9A$R`8W_W31Z'es:K.Y(3Xb<Cj"bb4
%n*#)_:3^cFWB8PVo5TF-0n"%C@"30_,l-H&G95U_jtNVXfce=koD.$#ph0a+>/t,kY)#46%Z;]q]gX>uQ7YEH(5,$,QV`k+'$B'`
%O2c`C;_gb('CVN%iYOZ8h!p:MU2GEGKj*_;e6g(qkt[<RJpiEb_eUXJe?>c07=hga_ELR),Vq76/s29,&uH.9s.i?"iMU>:9pdt8
%\rik]8L#L;WKmhVMGB>)&F;R(*=c&;3^9EbB7)nO%l6^`HAR)ec^D[\q_3*hfNqbX=Ze,?VOj^$Y2rE@PC\.;H,F'JQV)Gbbtae@
%2=\<3@1UT:j0IhB/T\'T%`L;\nCY"/+?-aq47%NDK3Xl=Hfh+_JC&3>3Bef:CePh\IZ0J1WCeNcj'K?ZVr4X^.%!Jm"<JlMPi=)K
%-XBAB3]Xm?Q@?t0'T%Oh$$2U^l0R3Xp.^M_FpP+a!Ygl5Y>X>"msbiiB40a-Oq']4]*oUoWY<h1X&G*(U!U'^*1mlY*[Z%X6%i@B
%4P.TJ:-S!`UJAYdn4c_DHm;(OW3Pr5pr8ZTUhP24:$?^b]Bp/"kCeMHM.%3SBB'./.PM='-Raj\oE<.sI!C7;paMeW./jW0[@mZN
%;fIn/7(r>&6oe(X8qq#F-f08%j#-:JCFA66-/6A]kY"g2@kiIe0N28IUnkqRmict2(&-CGeb)L30^YDb#>1/rd)>gC$HiSVWN`N;
%M6Qsk4!PN\-*X^@P%9ik#H=r1OYlb-7m`A@khTYbW07pM-JjMWQlMl0&V\8N.+<$XCs'tlE5KaC*bjo]5,:_?:KRcA-`eT7@oN(A
%:09MMBhE95il&=lM&4nR7q&J*->-an3_[i9M!8%Z;*VW9736HRo5GPdU0uF!CPN3f@bNh>%auj63tpe[-!m8tbT3"tUT1T[SkN,(
%ig_@>l0fn:9R-$RU3J+MR6+_q:Z`.l0R"M&JN?A2B]@k8X?Wa!k)R5Ee+l`L-NjsO_qa4=]/92EFAaB[F%>/^kp4=V_7mhBi@q)W
%\T*K?hk%%QQYl+=UM7hugUgP'V5rdQf"W4Wk-_S.#tW.R#/d[V,p-3h[NkIXKt;LMWF$*=[Lia[Bc-X@J^s4D0r%M%]fJ0#C-?FW
%aQH2JO^K7.e+=t`GjF4-1AN[fo.Tok]O:Tg]YOM!4XoruHhOQph0\:_[.FK"&en%:(>+C6ML=T9inGJ,J"J\gO84km6`tfURA!bm
%+c7eS#CK*@c5=4g&4>SIb0nc]>aA:r@c;jT@6"^8P&ePrna>]2#r]?*-L7s_^=%Om[s?m.m2VuX<Od@>=%Hil!h7CZdR'JJ3FYA%
%9O];C_6aiQ^g;jr.!d=;l'nM/_^O3&gf1C9>DD\oO"mCh-hT>[Kh"8JLF$@Z+'+>>q676j(m_k2QV,h;!Q4Si>C%!,>g(jLUQbgd
%o/gHjR=r:6.+tihpnasrl+s`0+<EN6$caETaG\FYIIdir%+7-M_g-nunE0p#53RD"61\8:S+?E_;\Ve"-L@KQ6"+BbgOhn#WB(q>
%05AbNS&MSAa:es\JA=!*:6HBH]a*T83n_s2CLRZC@_q[s/6:1jMD^rLT8m]]ho`ENl0.XH?93akM<cRg4.2m8B9\ql^Ql"g1+^4B
%GSqA19S*@uEgTU!fU4^k_ML!H_Wn6315ljL$q2_k#Yn8,^"eA1["Lm:2?ZTR\5euDI9.R`9Y2Xo+Z`&#AE)9"AA"NHS9VcT+k+G<
%jH+*9=I_:&h;]hRHKO(0nDX1fLU?]/3eS]^d(.%L:+%Lggc;"PC#YrI,Mgj)^?&(+'MKj5TK['\OctNja%><pFNaUQa1Pt)'%7^k
%P`s*9$9Jpadt2Ya"nhH_P!J83pa+7LQtBkAAaZEo'Ua4/5pi\:029+g^PJ;FILr7OFA>\D13#Kg_?]#9gu2IWe2;_RN[j9i:gTm!
%k+p&^^okT!iS/G%eDHZ-P/K]M%a-PsUi8+EmV:`W2?f64FXIg\.o>Sk=;[C?c2pS#<V@K0_?Zj3l$+4@-or(=*iP%Gkm99^j%Ug!
%r3O.AhCNSoo@oo9ebS@2s5qRErhU6Uo;d?Gr*S3niBOCAk;Vj!bl2AG&(Z:ObJ@$SeXhuYh^7(q@-)+%mhQ[V"1d80AL5bg/D`nk
%;oogR6i=S"El>WR&M!'bV,R-2Q?GD>@Lnl2SYG!45fVO1POh:+iQoV/i44^5s8&@;qlB2"s80"WJ,f31^O>k4J%k`T@6Y%IO*+KM
%pU@p:lJ4C;rqbI&^\m2Cq<"0Ms8<I8rUQ<To(?q9s4uSFq7k<nIIjrJq!Igb#64JcfAD)Vm[O7Ua*5;smbPA0Zg$BGrqCVG:Z)*L
%rVu_TYQ+)lDm_^oo%1YVrZ-afX)J%*Rh*"+DdS"e?bZL+8%&5ln)&Qf]s]JkXA*l!Ie!'\\)2].h>c\U59QSJq!.0pqq^3,3i`"n
%=+-Y#DgKn4Vu>rQf73Y^T76P&h_E2rhn=C46iUftl/0/LgOK)!]<B!J\*5:?nF#&gIe2*6s6mRdY?iA6@/S?srp#P/ql?@h&_"g5
%<*eSYr2/mGlgDE'`9JH<[G_(b$<NR6W@D-P\Dn+aWZ+_6gQfdsgMg#hh.!BRD](3"*;eKcQ-nfom/V-S-!q#2rEAm3djY+*T=0+Y
%_jMuTqmN[JE'@0*"T+GpJIt]42nKDQHHNjR*rBpG\#1or+>)unmR1.2[Gr')_G-/u.8doNs$k1?+74-&SM>:S!BcHOhqPpAH^/+_
%_6R%B&Y?]97C+*B[\[u#03*W90HDS#0Mm>pKJZ%Xr>D.KRao.e^Zjn@%)^utWGr;"`S]_(rXd077kjniKYs,lfQm.MR[o]3>5I>@
%O^G_sp%*Z^]Yq0KnR"N(SCk.OKb./T$#uQW0sKg^4C$0R%W&PI#Q7,'HFmGL:7Pfg'I1UQi7k__(_PUNmr,!@I+<:@hoKI8oG#;.
%d.Sd7gFJUjIX^5gUKn1907q.r3FEs.F+g)_G1=KNQXcL#MbOSk'QB!4OOi5\K_Om$<a**3>'4:R^o]dsERFnOnKSA:g^b$<3OH'E
%(\fi@O'oe=3?5.:iB$A2a-2NkF1*rm2]RuJntcJ+?YV:;hbtZSNBk==bnB,[kt?d,/*F>73*)ROFPlDmH5!e/K!dpM96sh96_WqQ
%N9[n_B6[-`J&o6!bidjN1.p_iNJLC'`=?aBm"`0N#Ej[Qmt?+ZUaYTRS-Li%@k2C-04VJ7Sq:!\ZZB@-0's@,=;4GP&T2NRm-c6m
%4l'oq>0#Lok[)9(8^d72Ii?N@MSsCQES/<'P/>Phq9oSnllZ*ErZ%dN0(lq14m0tf<"48W'.F6(]>SenXZ!e3fUb%*MpjE;WEsQP
%]ug5S'>TjY8j&)'^2mW)gTImFoYTJPZf*X=iu!L7ZG7blh>75c[c]K0XL4EN>W?+Hg#M5DdS&=9gHJpD4tge1QclJJKp!-?YD@M5
%&=!E<lkXj5o<K@.K$Dn%i^9(OakkBKEAtIAQ7pG<^Mr"soL#KeD6Hms+qkK?p1!1qp".6poEU:4SG-$bp:]Q,<Z/O'3JFH\%=Z%-
%<HGGt,Kj*]Of;82>O'mj:^:C4$JY"'Ut![m._N0a7h^kf>:DXOGiojKg=@V2'q#Q,Ci'&\rIsRdDA69F\<]k"oL,?B$MO,W*qcj!
%&$)6Gju1p6pe-.^8o8@)X012d[\/)#jZIrLDM!kmluq+/fsGWLpTapb`4YiLRiO18]WZ`>S.7XBX*nlqMr,-m/rQ,tl)qSoLk*gJ
%28pa)=BNoGfhAC1/A$5i>T=rWK3Xg+b-neK>[<=elY%m)LsK5+W+P"4Rh"'_kHai[f_]`YJmE<\Qfsc3B/-mGmZ0U(S#I7D\KHfJ
%*)kTXo-*UEKTCbi&:"Ep,-NEEkAj,HB1B&D54LGe)aF#-3NN=4$k&1>io`T1a6DY"Fh12VNR?]E`b_&s*>Tj&^d@*PN=l$rAB`lL
%38iO.f8HjCjtSDT?5[7l/fF,5@q0.H^&2MK!0B1qC(VJ/`Rq7ZLG=ekb7$"/s'eXj1tiQ=JSGU:<$*(2Tr)kmf3t^9G;U.I+KrRI
%jBjc8d<r%eYYp#%[V_u)JZ<WA#,?hVK(9CQ%&\V86f.+#[cK1OjTCGHr97t>^j.Io8T$WTEWl.*7+?74C"\RNGrD`Rc37"[1&EiF
%gQke^9i3W[Ks`-oS;=(ko<*Gt8E-mn\r790Y2F:J2d99o\>'PeYID[K\s1h[Snm!]`N=;ta76G+X\RKE;6@aCnlk3[f>;VNNLdXL
%2[l2KAT1srgFV2hE;nYOC3ah28B'l2fr:k6Q5S3CAfB14'SDbNeo4!NerAO4V!2)7\=OL+<3_DA6C3-/.h.X0d_L-=Fb?.@lH5C>
%Z@7ZemnLSZI)e9`l69[de0aga=0=[DW?#3":$\gJekJ^W3'UX!/aD8&IL3;&I$=lK3:jl+bYd2dj"R<1^&b.;P^CkYAMbZhrACg-
%7ng!W\+n9.]7qDsY#jKK,hM_;hOjYj"i_F[R/hJmLnln&![lO*AF/R+TlDS*e)C9!2%D,udQZD^j!-pN&"W[L/62F,D)thdkLG(>
%&Y0G,nMNua,['l"9>8`pj'7]PVA>jt]h[&s719j9\Q8UZW:jc0]q[EdQLmf.o--/]`>8-L;>+^<b3=OH0qR[Y"_Odf3KW`Miu:FL
%;Nt!8W<MbG.`EFkAU3QgLS*+QNaZh(d^b(b/B0j:!T?X-V/>Zo5rFBelbC@,9Mgqg3^Q82.,;Pp8bE#$:f+-NBWJb?AtmRW^%FXR
%j4ULso!<<=WT*,DP@gB78,JD)1f]5[bnu$XqF7Jt1FLn#Z@g>##C57ac#j.qW!*9=>#<n\:l[HQo$qRJTNIQ2la!?_]0:5WC;uBP
%=.cP=Z7YPig95=f$@'[t.?:".V$)siTj5lIk8AZ:'u_RU\2p$T[V]+u/@B4d^gP]`D@M]#RS.=N\J*'C'YRc5ehK)%k7Y>.-8[Zn
%kaYTS]_7ANl-"I,leZ_6Bf*5:Z.a,(rC.R\ZsWQna)W/DMO!f3ei=M,X*HDUoN\E7/I.g4S4iM\I;L'bgUbq%)2MtH$<ID&b<!SO
%a!J&`r93HcQ$>;eCg'8FGs%m)=8NYBlXJJU20LjHl@[lr)%;*2s$O=d"\q^4Q'QQ9AinudK%1sc0IO,@P\%DZN:4+36r(R!G+CJL
%GNo#dEF=.sCL_6d.@8=53-V:^Aq[=,U:hYbXMA8G)ji<neDF6>l`+qIdo2aqT_>sk+O?".bg!#U2JJ4>8"!G3iW:c8!7S*FGj;GP
%LP+&uU6M=RbguUCD9-[DYRA4ao5SZNp"Y/>G](2MPBt`BoA0!SKJ$#Z:u;!o'!@-u53l"0E4*SbfsX.j@.0jl02:9'-V8XWU\C6^
%O7U!L9[U&!VU^ZInEW/ZpZoLArHaX&@uoKIa*;gp3D_d1AB6-!@%E=kZuj?['^=8*cKWuVFPi4@kh%-,\K0)&?]ia*-HEj,IWt-a
%,3%7Y8H62Fp:ttS8j%H;3F$p-3*^h/*9,\!;nD]#*:DPdJ^Cl]ljtNYf,c-E11daJ!6a\OGO;6+]CplOGkS.minF8Xe[HXUW,F>J
%X)G19LMsr9Ump;sS(+ph\(@Lp[o\a1M=9*Q[tf_!A+K"gUf-Ws[l:/$H+>p/qDlL)G?#FAhGmn;)kA#/ge1RimRbitqp7?oH[ZLq
%mTh$rh<XeHn(sPFG>F*<mmH8[ml=(QpLK'YCuF+)HYMa44Xngm&"V1_k;^GqGBUp>='ZBiMLXd#Im7?6n*?XHbF=*9T<LR%PD<M)
%o4g_%`PYJQ]9/cg\bt`Iq"NX,m_.#SY3Fi!Y3FkcPk=IeNG(Z!DB?MKFUt)il/IKTl/RtIqY8?sbQ2.B*kjS/K26f8n3bh"n1dPR
%mDZmH1YK2e@T$%s2'$lO?^c-Shs&P+%mAC\k9/U"G?3qd/'i>,[:/gu!?Ec-66fgAF<*=?5.'\U]b9]"^%<l4rFdV)]e^kX^%*`2
%]h'TJi80q3EQ:Gu9b[8DGOMB-]D!RBs$$'M#G2*@#N+4.)^9+I^%Z^BmR`DpIH['d]h\h%msW?Ws!>!Er-N/Cr]Nj$_%46._rj;L
%iB'9`H4&^)n%Bn#Hd\[9+1e>!cV_9+:M.P/n(?I4=6GJO^:QUOnEKqrT(mY,iFp:"5OL'oA;4%RdVH[Bl)k*R=/bG+LAs.q(ku/3
%D"eOrpU5!U<7gD3fp7ma@!/)=F'[:,@.!-[=_ueKYQU+`=jt'.l88f]l6"Z`=b9j7NjU;oVN\CZ=\!dTJfaZhgK[L%PkhQ>^WlSj
%c#qAq$uA._Gq_l(=uM#>"cCP_h>;(j/.T!(]2RApZ`&h,".JXPS"0_I=1Zr&^m7B8?IHN`AM)^DY5;MeD:&XY=Bp%2VQW@2D6rp#
%\?6u!o>tiP)p3?k>QJ-kW@re1<j&-->>fYkfG<BAp[7?h%\r**:2\e&J*4Fh#]"6jSj_YO3?@:roB)Zu=XJTV:E=G#FI%c-`2:e;
%$5AuE[GO'DCPHg]Xf6SbOn7`$X`r?c<u>/Qo17/rT6XN2mZO_]S9/&Y:@iK@F6@a'Z\,;!B@W2a#&JQO><sh[;h_f.^Y8KtfoU/s
%ZpE6udjeI(.LIZTCX[3<%C#"Y!en?@N1OG.'Z6Td#j;g@/3J-V9A;AP7(0KQWDmD2$aue3J8;A(>U[SR:WpZQEK%"ies9$4h'+s[
%!GUQqCRlF3A@fGk<s1DkQ5(oV*Pr-uJUMrq9]T=ho8[SVf4=ooT'QQAW+/O/O$5,.kne,@I26XYSf\XAE%:D@b]0]`<[WRr">)4)
%XgkSRflD,Aj`nC)%GU\AmMX\S(Q6(i@su!<"0G\/JgBX2ch/[>?$P!cf>S'E^*&Wrl%og7KJ'8B6A00:_4Db7.]DODA^f:44frrY
%@(hYLGP8:8Udq&e2O;T-XAuZoSj[jg]pC,#n2t8n[>,n:>-Td(JrT:a"G""DGo1[D4L^oDrda^ll[$E?$s!`gc,-4V]NeMb*P9C.
%X`M4?G9Te2%!/PZ^M\0ds*S=DX/2AHo.n_pf7Wi05[>D2eniB$!)@h3afg[8:@<8;q6fMg&`FY>0f3UXCn\HidTY8B3n!W&8;$Qu
%oY<g;B(qF/[IqDO#anrBUa"92lY5Gcik(,:W>1J3N-""dmqk@I0G5(:%p#6rXYa'#FVuH4)s8mlPCUUR_I+qVEkQ[#dApE9#TnlT
%*;?_^4o/+rZQlKXc]4sT5!,KBqojt54k',NJWrB?9S\%@EClULK7,FF*pIPam,OKA0D=?:mEmF*S(We#^ao?[b?VZpC\8"b`VcUK
%CYDtCm>]_cp?35OS-L%hl=Zlr%9&c4UioeKI]7+Ma:%gS=:02RRdG#"_CLX!7e516g>;.ge&F0R5+GC.Fh<cMXDV>8I#,clb!&!R
%-9\\M`\UtG<m<<?qjg_Cb[\mCX(Iar"bHudk?cE_m#utELolkkc%rLf]iR""qg%XQd%1AF^HLjPPad3hE`k!P=G2c)>&:U_-9[p3
%9DH:]Y!asFY":C$p?8n:p?AfCe9^%UYf80jcXrNDgXpl.$aNd]h*Bn0&e!"g1h#4Lm6iWI;fBtZNbV<Cf%HW-979sK5^QR=X$,"a
%!Yfb1[ar$=llfRYg)tF?U12D.k1r`.\R2M-dKa?K;+H/[=)\;PHj*#j$Wq?N-IR;V5LNsaGDAV&qA2OSK`t\n3r8\)a+@M9<i^;O
%U1Tfh9:+CIb?)F$D,Bq+4sPdW^>R^HBs95"7NH]&_LcRA9=cdd'BKaPWmP,E'YV-B.=-J`-1LoN684W&4Q"<33Ngi6c>fCE.X4%k
%%9'=EBe@droWK!BgtZK@M!)AA;lH?K3)rXV;k.AY6d;(Y@UW34K^DqFldWDqWe9.j+T1LpCa;[t]5kPDKlajT7iN?LU>"#7[[6<W
%G;JL0ndU<;@:W[gdpcieRVKWCS8,bZ;"d[b4U4B7iei5[qCZZf`"i;WOfNcgqhi-(Pd=J1/,fY)F0E.`9!>f79!;Y@A?WQQ5+k&b
%7<Gki'6T<X^q$joI[q\hO`&onGH=TP]UA1dk=dj0h=$BsK.b2P%`As6b>"l>1BUeuS/sL>Bj#@L&#-b,h9lU)cNDU(@ToRJR&ZLO
%rG&C3rP<3Ep'3DKJ@>25^0bF$^L(C!5@7sO<?ne1P9-:koS=U$:QP:MC]Dp"^McpK?b;k("k`!Jr7#eC@ji;=Kqrf4MM51a/ft:M
%XHf(d&:1Ht3bG`k%Rp#-A!q[c[6q%^^:-Ln:u3+5*=ANDWDV8BlYKm3=>Rg@HW'8iQDqnZ'FR"VM-!L]HPP70]MpIZ.FSXZ7CCdK
%$/No"Xqig-mrZn_DEm@g\"@c:g[@K<DZ9gmDL!cQHJ:cDbtuH32C$L:R].t[-dr!j(O52(9(gIjUX`o9btRJH[[W`5P!o9s)RBGT
%@\a#8A8&c2(hpd<(h_PT`bk']i,)f6&<nK/=agc[kp;\p-Et")cU</P@R@LgK"-5rH2DJ6mpPU#lL">,B/B!9mN6?om@B7T*4@5b
%_/XUARh=7r)e.N=gQMlLVn(t`C6Kq:U#q[X<*ERk:P2or%Di;#/ap0j(ROHUFteRr*;/_KSG8d_mcrW?fVAI);gs00/oSd%Rk7sn
%m<okg2+6pc:4TmG8,*(fA0oF6GR[s_54Lh17?Rah2o3e2V/Ru2Cn0h0D'sub]Q+G,\)$&t56.=/O]8gXmGaMM1RB_S+1_ULRI3\u
%6"-o)NUPWX*JpftI1GIU<S=s=>;s?rrH'sjXkLC2\B_tRI3V\sj&`Jo2U)?+-31NG'sa=.G5`]LJWs(Q$LKh;\SO(5in_ZQVN&=_
%JSIWaf6./,Su.[$QSQPk[70p.?j&aH*Ja'\KnucI1'26&&J'`"Jmh2SAM.8sfCu/`BjT@&K/r95'4`':7;d:/0`aK.`-Hu.^D)^0
%M%^12N@VYaNWb-KDqZ,uFgG-N-;maKM\E[Kk%77/Fkf#E&r5;UjTfNF_W>dlRHWfJpc@0Sr9#g6&&Qj2SKl@/*0JM&E/&RdQ+gjH
%#R\!8O$d<%Y'RuodkUPM`U^h['6]5,aph8-9Ea`\5>JG+Cc,:`9Pke;ZH:s=]NJup:A1sdIfCH2Fh@"0V?`_Xnaf+HE]XV;dkeIr
%"%I9KqJ85Gqk2Mc5$aj89LBb3Z4cC`c9&Y$,7&b\JE_.eFNA.A=8fjKEEOVrHRhfUYs3q6*^8"7pKtBnT?H$>IFHWi;!S0ZY.gRr
%<A3&<qEUYTML5Lr8Ku#_jDb]4bo$!_/nF2r[Ph]EMA@jRk^AdI,'jD67.)bAMTbX#D:Pl3gES.0I;-fA.!F??'ijhZGuQH4N]'l/
%Rn;'eI6MC@F`OCI85ipOo,bLGR[2Q5Q);FYlf$cNDp\:#_SO$Z,/:-)&&dtKdbC`acaDroeIGNLXrd2VHf(ag$)G&:H%jde_SiVR
%P=hI`<<E5(iU@UG","/G8aOuEWQa(YCVi)Z23RhtMPS%hY7'oVp8&C*O++f^V1)ca8"C3<1]]ekZ6K*c8%Fs%77Te0"%iG1>^m`f
%<eHFT[sLb1WR_W)eSR*^[0m?m7!01_-k`+0A70<E?qWRi\*H40*<U!eqnDf,muC'\;l6jhV*]#3e1S.oe)DbE^WS?\D7ScqJ1S)B
%BNn(EF6co>qU1J+V=/<0O*1-QQKEL1G^'_!-LLr3ZX;`G`A@iR<9.P3*UKggMKAQHYnK&\<iB;=#qN6k\4s25Id2b'J[8uTD@k!"
%&_Vc:0KJlMA@5]'.WI#<,dpbjHG,d@+_]95hXP9%lJSr+ZHA2k_NnAb"IRY[i338:2B6D\deMZr=(<=2fWO"g%QsTakK[.S'OYl,
%Cr;8B0WoK(T,0%KHf(8:UWf0u8)KH:N1:-Ara+lR6"eftP43PCL40V9^J3O_'SWSm0G0sOk,]f<7'UTa\K%X90HSQ_\9^W-d)?[e
%N(`W"27[>cQ=Ej,8SPFh-V5l]:7)-+P/>SiHUpL]"-+pi"*k#'irt^+?q;'_,?rEMmq4u\6+>AJY7d<[<ninK[b9GT[+E`HWjWs]
%Y:G7VFViH3"04f=(SerkX_7SQI5CnRoYV^%O'Z[N9Q3o7#;W1Abb(_MJ7VQUD7kgMJc(shg/GU)d/F<cjj3f*R$.8Yl&;Po2=qbX
%[[)JO-c&^#:']C&lnpRmbi?io]4#X*P`\InB4[YVPPu2%?q39OQ.+*;p#o%I_3N,![)-*#gu)mjjIm@di!^KKlT-l*(VtA^qhof]
%YiXJJBdh`a/rA8O5c07;2q;di*]710Co6RGCI<cUmf7@j1KgMigMH1tGj?=90@*FZ>UcLN"fO1oY/?PWn"lr=VetpUS]4fYp3l?A
%[oFq1CTmKk.e\Dd:V`$P&2M1PgQsldq`\NEb7WJ&\ba+`]mZO=\8slJs-3Fh\QjIa9).'I8qX6iIWhMu/EP1'N[_=$GCBb`0@(.V
%$Jm+%CU7\0;%WJ/Vg3jqF^#C6aZN_mAZjm9-N+UF""XN@W!uh#9E.,0SN<,?=^B9.N<ukulrH3680]3l6]o::9JPr9Up7_Z["!\R
%F5"T:45$V$GQ0^YT)H0>_8W[6R3r2TLCJ$$]*="3SNZ_7'.PO\1Z.otZ*Bboq?]?PJ!\mPIN?<epifm,b'C/Ora!CNq-@$k?OuHV
%e,JoXN!8eg>8ech0A+o7rrtBt%L!5X6QLSt`E&Z(I/(AIdWkY@MI\;B+O!%mr=cEq6Q*&L9,ri!.`u=AK:L-C"jNim!o&^H^NS%Y
%%Hh`5e2CF,#33D:L2B(0E3kWK&H=>*_G<Hr!S_M[q/K2;raTd]P\@c-epI)?0&,$YDnYTfAS9;fqUUoH3,\QS><eeZ'7;CUp3,K+
%MRI]^9fZh_g*:P(3*=&idP%sLQTKBCWc,QV`/4)uL@nF^'t_WF0h[#&CP91u`NQoIOpP^S&$\K1A=n:J+aqin[>i>cjF5"cN1S#A
%9O3Qre2arX=dCucrXM]4Hlr>1rC-F+mLn2U.a7HVFGUdFQF>US,/fJ`<Q8-r98%!.k)Sdrq?q-4I"LQo>:,/D[Uk&Dbr-rACpkFI
%rZYR[l<,3ac&&^>1_,gkm4YOo.h3sY2C.T]D2kP=[b2-`f1c(b)h_J]P0koVX$OP'KpK4]/4*\56tG`7r&FT/`PXFR]&'@W9`+EW
%BcGGJF-[ERHLVT,qIS85:=(\hI.^ZSl-+Qe!OjYE#,+rPB[!iuLe=eJ%GuK`8V%F][ThBm;HOg+(')`R!WR7WG:dB(bbW#OP0!`Z
%-'JE>9.!.GQ:s%UQHYcj:GYA,cA[b+9@Oj4\>[]+9bI%QCl2iY?_3mQh^3J%>I\al/5J2`F/t=%8aTQ^pmDDn,>J1RD4;sR"ME[;
%^p`\(9lg+h="CQj2T[JNWeHc!rjs01p3bMBc_Q%_G![1%m"@>(fa2X0ne:"*1[Ufb+!9H\98jr4EFB2R:EuY"g>O8=C]t'VT6T"d
%;s;kk>geM'SFncqlKUSj^XAsSrl_&kI"=`-BD:%^^VneG[aqf*@;AT\+^=8&[(hE,BiE_:lWEX``g"d#ID(EDB\*s9H>hB/Pqq<E
%s+p;CWHi!=I#2o3cY5?rA<kYY(QO#XdU/RdRcg>O1s\J(BV'j.%J(RhCSq#.R^j#<^R;VD@&LX`^oj:b"Rg!W5JbtAcO`2AIYQc(
%N6`(5"+H!_+3]sVkN5&JK[1;5WIJh4'6"cQ3(EZPCtK2q#59qZchGLpZ#g0q1um*qI,8r3YJ.dW>]T+i`<Jif[a<3@oI@Oc6P?/B
%o&JLgf$G'X:^=r0'9R*mn-GLpp[s,kFZX;?)4$t_RRKQ&SE9+PhYeWXEaUFS%[dj,V:aDej]QUsC&%_^qmKg(O5mhG!;[5h7=]3)
%<8TA"PB<nA$B?,sFrU`Q@#PUDdNgV9@lTXEJ"L&JWqu;RIAe;Xg.lJ:&BQujmV?rh>utSI;BDI'_%2@R8J4GI)9PC-\jQl$C8/lA
%imto0c6u,4T>K$@CtZ1s*Yk&*-iqbKe2_OPH4]KK^[=9hUs0?Op]MduACi"<"<e20PAl2'6s+EpY\1kqhl;D6'?NUHs1$>lr=,A$
%@P;,KPR:,+gK#1*iL#b^,_e#SR#&Ku,$&U/Jo+>B&;mQBpEHi%8_3O\]&kgmC92/Ma$2gh>`\q*L2,/u=ZrNk7["<b-pD6%#0]V(
%e,lo71U2PD$/C*akL:?\l3rB0q6Z-DBS0`.;<`jEh\)#JN9*r-:2-&f2&DF$D#r]PH:L[pZ=,'3AXH=&@L-bN",)\DdO8,^Wfq+X
%i*l%IH;n@YfHZ.qX86O&?ocT>-PP6C]6=5s2\Zn;6FhuM'ugBa-f[%[a9YHa$g09AI.3%=E'?*_?gX$!aBB?#G8:_OXN4OP+Ks](
%"9>kc,d`&m4RIT-Pao8^ge7!9-sEBCim\f,'8)k%%*fPi'p5.-^r\8dQOIb7ISQKp(*L*kU#nHs6iQ,SA6CkOk:W,0fG?qUJOu\_
%j1&+oF"o]f!CC*4#e4pjcO]07EVo!uK4Pq.!Z7c.HD_uA;j>Ae+SniPMI[E`ZPf/CRu'lT,qdTge<s:!]7^W=6*hFK)8.6U,94cd
%)GPVnhNSSFOu2I]'f%V_?Vo'ZS-N:IeW(=6;Mhk[]e2&A.>G3AC#+>+91V((El=%`+1-7[<nA`[!Mk^r<0>s%s*9mQJ\YD,iekK6
%l[qHA+(RRR/l?\">p[-",/<0<K:e[2O4L7@d;\!%EG>\MD^e7#?.-rb-se9X?:"68?BkO7C<u`ON[ohP,YEfhWe#9+.U%gEX;4M@
%<UNG3O(N`u][eIK=^c/4O*?H,jaMYrO4rV9_WpsGmh2fo_k.W-0UHCF5$ac77HTf\jaE/jc?Rb_pe%0S77MSF%)Q54I/EWaYIr9D
%^bh\p[,]VoB8?e)27[CImi-N^F>^TUFD(%=27WTfShkMiH"7PpN@NP4k&.M+:cN./fG5?=5Ua:X[><=tS"V9*(+','qY1[_,<FN2
%i1_6?0Cg%DCiR_^G2@_1-f*CpffFO@k&B2AA1lr@PO,RM"V5RjN`+j-9T/P`0TGdNfsN;?BpJI$4*_p7-T5.V\2W!B%IX4uA7AP=
%2#Y#(?j_B%QY,\*R6I!-s#MDS^7PW>f^&BOD.Hu&]Q.&:.$OsNA+/5ec`.R;7'uBS63j3nC27k;Nnu_c*9_-XS']F8%rl.Y)+cR>
%2",20'.92Vc*e%jTdb&$Zt!ec);uB#,m%kfh%%_Dc`0>BZ(W/0+tHFO4.G#=a3lO0*9btL]A4=!IJm<Ul>#5,oAGekeNq2EqWGHu
%'a5M>>^)$ue]`#q_06@E?Sm*L6?eblL\/skhVq:nY+J^"0rfj+n?BCB&f:*)g1Y[,l6thnqdd(QgK@0?n.5QXa$9Oln^$)TIsgkL
%qc=kgs6p]MrZD4SD1D?N042J?/%+eprq>`KJ,8I':O_llhL+k`f37\#5Q(9mmlt,Bpr3+h+5a_Wqd4gDlAH1VhLAe&rp7f]YDk]Z
%rUTdar9hg2YOsDi\'&--q=,1hpXAlOHMdABrq2c45C`^P-[k_J+('Hk\:7X#b(u%B]D$rufC(r<rp\h<e!F/!04)EheZWi8X`l.>
%qJqdLYM]>Ir:T=!DdWOhY@%5A`q\i:X*7q8TD+uWahs2>k2V4UmsfKOPJ;A8ren7h5Q''4GHY@ef#[V.I0NgS0JH^ag+&VE1Y=RC
%q+,U0X+qnH?_ZsTI:/KGK%HE.<h/5s;_N0r.Er[2(_?0KUV2iLm1L.+EjC86k/R)aGPj9?quBtb'W3!(r#g9=U'4q`F1fkn6Ut;u
%TZuS]*pu]o058W\HHFAMVlhK*"Ve)]6l$cMOt8I>_<Ss>.e4UkKQT]Hhk]AX3Fo4AP(k#o+`TkX9I(jVYK\N3\t>@tf:Y9AilP$J
%Wf1[DCO!?J;O^$cYQ_d26;gQWjXm1l3j^^g9B,-QLLZ4>B.bV?bd'D`=00eu,T3XK<jj1G;:;KPYSrm&31bdeUI.iu+j((H1WLfc
%NgUJM1j."q]cH@mL[d]!U@+]:C"7;POB_*E%\iTS4\oqK8<PC]_/unIF$O'iBTXo?EuVZ5g4qq29oUe9aHE?AcRjot>M8^^:cdB6
%<S_-%biRd;!_Zg-ni]<mWl7,3<rH%(K2$=3Jh5fP0bp5L)o+3YP<'_iOfB`6G#>1ES-<;P\+b[IeclALUaj!EP-X^3p$&8!M.%c'
%EqXM$)O#r<dTQCW'5'dM0p:l/cS3Edb(hRi_#[G5'iN:R8HBEAnltDDb4]]9i=AWFV@Lf`1,OY.VQ(d$3.PEG<aC!I0e14d:X+H)
%7THu,[\ggg):H7FUMk)OS@>"8^ge/)&>'>0OV`1Rc&>r5j?]/[E"Gp]7'%Vj&[.rXQ-%:iQ1R+o0KEh[Rr_:[E5u_S#BaoqV.&IB
%6k&a\)2^7QL":d"OM-Sr!%G=6d5^1'+g$XLpi`aY`@,dOT#ZXLD2f;s[T=g`3A]To;c^_G2A_O12e.T1:f,l-%\L_M;d<20Y&;u_
%S4P%>&lCW%>Q`Dj$'bp>&9DIeE$u75ppZ9YHuGZ9"aIBnh^,(3j#jtQb>!sn)&AR,L(lM<[jo9b7rr3_K&'0?1V7)e.KnB)WCF#A
%KU@`M.K@K.C>NDo^b15)>`m.+8Ws2a`*me#6J`4&-K/Y7D"<p+&L%O<A%[>#<_Crt=F2bBK3ZNq^;5i`KU,&d%^6M",d^IV5WERV
%;L)OPAj?\57AIrgS-'E*JQa8;1T$b3_0d?'9`Pc1;&dau1_k<3o'XN*n%.WXJ;:c+\0HSeP#fUq-_ViPd:4)(nTkrhb_;c7GKU43
%?$1c?6c`LY?n'0VWM;/Z2p\g\H=EG5ldp^AGt+JRicB_aICDJY4q:V,atK`^/%!3-h@)D1n/+4%,-"pi9gnk,l)_PmMII[C)8m^Z
%i8qW2'VbA%KZ.*Y$Ej>tCU^(sWP[MNeE/GQbTM@dn[7t678emh%loUAQ=#=sf6Jr0D_@%#Bb:RgD<HoHp_orfB')h=QomQ$)=D6&
%3DiUL#qf==J4;65NA#Sl8o/sZle$XI3#$m>S$m3:X&0O=0CuOcW5QV*npXJS&C7,,c)h9sVU/BM8.tT;O@,c@*ub-30QjDL_K.3T
%&K47k#ussAioZ3FS3c#iXs_!ea^ajdf>@qGTHN_Rn5d7Dlf1\^__(?bo>8*E>N/+bQon2t1!^?bX-<I'OC9bJjOqT^jLp]U`HL%M
%?<^5"H<oU<q:WgsjD1s$[Ca,\Hc+X[8+WdD(W\PKesiLHYP$a+2tGXL]t<cXg4&lDZcF5,&aAq/9OegcrlI.[riM'>Y2o-",KB[J
%&@R,B4"9YJ!8O%;^a'!P%^O]"/?2JI/t2o\(nMUBmhQ@&W$-LfZ2#<<hM\nn!%(^@[P4NKd:u$BZkK5uBGc93C%//qi]M+RU5m.r
%,H?t>EmS&25=LUG2eY$Q3;be=.*U(^8UX'FL^mQ==fb,L#H@qsbpm*%OG"]Pir[O7Ii_%CkF<*.?)cpCPh488PG:GOi!35D)77dd
%&_[e`Z<#"_6dQ^fOW*RaK``-l,ZP,,XF`JeK8/#l$L'8AWMT@GrX*F8p&9u*]<T^Pdu^T\92T"CU1Dotgml22<`61&otW(<_f;eY
%:q`SRheUtA(lV]JZ?>CHJ.TgFS[Voeo$+hW4'g<3V$7Nf@LN*4Z"THMS[PY%6jui+`mlT8cRLpc&V?cP$3mk<Y(O9%`3)WA;7i/f
%o4,JRRe`FE6/HG=?f4S&<R=sIhG-#thuTs7E2RE>;eBmnG+B9Y]48NW8LGgDa&JOmomG2_R(C4',2bi+,k&*W]g<t;q1`[BZf6[O
%YCuTtimerk=IT\'6dd/`]kN;XS[Q#Z+A7!IUK7^s4iWst&V@h).WD<Yfmmh9AU&eMf\L8p2Kc*bn*7_ALnrt##1s<n]S+mWBg#uj
%BSo0u)RT_Y.*6KI(AXilfdC5qK4\(_Y>IbP!8C+<`phXXaW%'YeXP+c:_e_4Gh_IWgX[nFjJnN5*3G,GdSZZ1O=)HYXiId2IdIgS
%37-?$oQf3^m$!l9\EkVEVRYs20fT7C&B_E0l;^ipoQo![lkQr^QE(A>;MqV1'V3=mLEJ!5G)HgCr2/'M94Vit^#$+ZG82#r\DDKO
%@&WnpFo[\$^ZcG+)m#:O[])2[^Dn0$$P^)=!T_3HLXH2m9OhFRnlUp&_FWJpbdkmnT:p/j-bsDCffB1/UniZlg(;T>[l4WIYP_42
%n871D>oe`;1*lJK?cKQ=]p[#]0CRjA-W&dUCg#+p]_D]gW<?/JXHZ+q)WF4bZtMjtHAWiLOXe(bJsI\q#XUYc%%;`3,aD2+q?d47
%kDstl$7*c)C\]iF)cVgR(n+o2kp\!6UZK6">5qjA)N'PVWuQrP)u)FUlmU6m6]j]("PiVD(BbpS3=:Nie2YF6e7e$#Fcpa'>U"n=
%_MK,/n2H.5XAB*Xdcc'WGn<dpe>iU5jBJ+7a3ak:B.RG5Gd0.&Y/)Fco9fk[1f.VRLi&JE,ljN7-lQ=*g0lQ_4r'nN7M?4L^ndJQ
%$0s^rc]LYdXb$eZa[5UPj?^GJCpJmR"#[,r0-^h:AW<1ABVQp+P3rls3Kb^)pg,4@:4<Y"9<8"6Fhb.LM)CO&m:1paaJW/js#DH(
%LVaC;$+Ccp&X=)O1[ZHO'7V'Lf;$D$a_)?"'e@R"M,36WA%2;>XNnlbBt\4hNNR!='V;+\6#Zm@3$eTNP]/JK4Hh+hm-V=<SuhB$
%W3.?n;p'k">&<P*R,fu7P+P]h$<efJa^[Q+`V2D-`C(R4:'2o37eJ>g@om*[fpY;g=D48:PP%+RO2mod5`dOLW]87G,EJGem"n3J
%YgY4WRUcd<gmXb6Ec7d\hOPH)RL!]>@_+JMe)]W2-'/k)\0)f(h")Om#Pg.%a4>kVRj((<?%\+.*E7eR)atK?A?F2qN&'])g4MX;
%IDb(.k?C<m6-0OO*FGPd,ZQE]`%armj#Ao*aPeI=Eq?#"asO>c"o9G5Tord`7sg4]c.jJl"NLeECO!(&:B[!L_RW!H4L'ooTW@L3
%,)9g]=s)sdPbWt[/^p!g3@jU.#RY<-(gtB^MIDSfr;\9Na+u$]]ZOC"f'u[<ZSt+>A&NE*DQ$>d6UOmsR36BII5VRUbb,E"Y&o<3
%nI(Fsat5354Z>5e*,LGI-$11jXcAh?X`uGk"'8a/dNl0cl,f\J=scGOjrU'Sm5eMq%6G@C$;-+\fH_U2<s`.;l=s>760PU76k/)b
%O`qrK>.``]9@Q.s.iJp(1YoF@W[Luk0'>J]KBPscA'Vk./4ON8^i=EIlUH<NSHt?hBuUP?&g&F<ctF?od&RO]DIc>:?8gNDEl$*(
%b5&$RSI5m]Fc[kI!Mg:,nIRU1?V3L#QE;OZ_;`Ae]GHTgJ[S7I4f\pQ]kbZdhD>?@':s."7Y>j&=8hee`=!k8-Y=3o3Y35q)raRV
%(DB<Q>a?"[;G;Q:;A?S#20[>74>OEtZ8d.k61X+Uk]B,<m,&@^bPML"R9eCab8Y`i!dciink];\*&Ps!?:-j?/L\u(/4'X^q+8\m
%_\SYt7>fBbfm3$R-d2cgaC*;+<>AI(#.$mc:=+_PV(5d/N@)n*.tCdjgA3g\:`2etq]SM:HmS:$:K$h]YM[KdB+U<`6`.4?0-9h:
%j1CjoC5"%jjSH6C;d('pNYdm6.H#(meI8>Dn39++dOu#h$:]uUkH2og)P@DH1!Y`DY!Qg07Ao1aR39Pe%XL*U0A7ZR5^?]-,03R=
%i(n@mX?uX?&V=*jB&lD9Zu/s#?WE.J,\a7Il^3$UF,`<)daHD@HI(Z3`j<r@a\\i]$T31G'1;_"$VW-Ear%PXP"X3@FJS2DNR3Aj
%WH<G+)_/?dPN#Qg#JpJ+4?T$3UB4)o"j%\+0<t5\Q$Ji+YVNBUUpMc4Vi9G&?0_]I*5o[Pa%%Cd?l_e`#I?X`O@i4c&CT\cQE-k2
%A5p>%jTh5%(D4+kNZ@t%KP,Uo>d64!3gmp,?uDJp_?2+A$*R%!-3]U5E+'q/X_MYX&'.loq'F4%-4.PRO:bH?PF#Ii)uM[L-DeV/
%gnT0`$c<Kh&!L_I^mlBi8<O8rE;sY00N)tX+U\Q<8]$5`4rf?#CNF]mZ=XPZ"?DYX!pW!04tg*lJ2B-U,A0kO(T?'Al+s4<,7ku6
%5u`OP_uL&,VbsQ@kU$fO]_X[+#[:<)RHX=e5.$ZJeQk5#$<ej@JE';L<=8G8o)g4^5#BIW/OR[_d]*_L"i$@n(cp6[-EWC]Lb\D$
%2r9i107QnBHn3W*OunoXk?E][EDbQ/1!='.OEI:;,JD9#9+YIl8VBN+!Onu$&U1q;bRr8s-F:$7r`AW=+nA%2!p$VV:/;Q=OI=#K
%/\uG"JOuZZ*:1;s9Y<"KJI:T2$5-B05A`uV(:hqnhtQ9?o,HtYC,3_2=-pr0hr!)^+ZQA^k_j7YHE<gaLUoHtHlb3MhfM-VgWc01
%@aP,h^"8Lccnph%<lq#6o-gIV\JS=V&[loUp*JR*]R)mbRZnu;gI",R29AXohi'()-e$d@0nXL;p"Y+S\f>IE@%E$beX;;H'nN8n
%EH(MJ:V\b&AJJTUMRm2si;0N:O?ueX8Wb[(I>3>JdOgH)8&IquN;$_!n1$'nYmciDdKBQHAqU6=8^0,k2k[_s<f,Lo,Y%h<;Mc>c
%)H6\a=ulB78I,uK^3qgm@GDV2>"*'qY9FL'RVU%*E1i:>7G3frA_A;m-H.eEZmTIen^f4)TJXR@##,t6K'Ir"Z#rj$Ju31C!Ku8]
%Xg`n$W0!0K!os"&J?eMVi>X7Wmu5%K5S\nt@)X+#'5:%5\#=baY3KYuhGhCQ5T,PJl)e$t'Sem5jT]44UAR,PFb(\ffpP:a3)/rV
%AEBR7[>l%-m8MLB"uf"CLQ!cQCj+Q@*!=r'U5m`R78+F?i1r7GOa)Wl)Tl6`U4Wf7,3H['k)bEhEMtmWI#OZ3Y)JA-1A$MDh9Th\
%pB"9cVZ!R4WbM=>QmaB[#b_J:8!'u&'gWM,PL3+@l&p2]9It&e!:<>[+D7hi,UA@bA$*-gH<cV28H_Qt9f8XHTLNNo]KPh$)OpD[
%AcOSk>,dCV3\F!UdmHNBc"e/2eF[6!e1pLD5^dC0BJC;VjV*h?j8?&7i=_K+#atf'1<XJ>Vn:f],JF.ODoB;e:[?2)=>!06&U5,Q
%$,s*##X)mZ<aCoH)\Z\WedG^_B'f^`^4a?(lpEnkBei.fjh`-<V:H@c.i$="7]ZB_,JpJ"0"mHe[d.tUYES[Y?6IL]gb2og;Ft1g
%p^7q$!uWI4d4h4gM2X6X6\:]!$WirI$We[jidRt2B.CoA<5>/.rPWAiEtD-S+.j1'hZRL/>ja]tO8k`L1>pgGV:8HU\bP!/nlq<%
%RF>qN9#am/s*-WD0"bkVhU'Gf,JsdgMHN/u(f<YKR;@kq4is`hYcJNp?fS_g_=Jb6%eHH&]`7B"[r9!jUgEuip%-4*80L9Zb&?-d
%1&g[O^IKJ;[&b'CHjE57anD2eQ)80s)e7+d^HJnl.c-k*L9gSs?X(+aO+-qd?[_bD2]o5k,;0Pahb2\VS%kcdI+.0`qE)W6+tE6a
%,`Z,uD`e:!a^]\qo#(@V+3p"ZQPPnErpnSUDgq<.qDrM>:ts%b1SJ3[4&^`;Cu=sF7t:3nLNfrYIbGLk\+u0d"7t@_V7sbK^>1-S
%DmTi@)e;di7_ZJS.^@8h)GhOY3K9Z@6[l)9[rX-=AB"g#.JO3l]Tdln&>s9SpEIN<kCSD!i$=R(WRf#BP<(dXE5lkSD,@_%s4;aU
%egP&-`&e[T)#o&=rqdH,moS_fkS:*XW)1ApD6GK)m8Y.^aXfIj1q4#mFJ4-mRDfG"GhpH&_kZG_5[tO#PrKIXN-FQ"JT[ig1(Nl.
%_6+(#-HTo>\fU]@3(RB*BD\f/iDl]d_?#M8BjbIaE6T0DB=)<BI4,L_gHJ%[@uj-D)f>%k,?$0"iZRO3-:8:jI7CTd@bM!ZcITP%
%]PrRd]<Q8Z<g(O%GBWEDM/dQ20GGIWGVmDO;Cp'$PK^FK>1sDTo1_a_'*RW@C<Q5*UBJO:-H%3-aI4@/15cR=-5I65P;8ReOgG2E
%p*k%D==@`=$-*\;E6d<+p+g_1-4D.pA+sdt1kemHUXI'fNiK`[38-P"^9U^TQn;nPA37@lFj;2s0h2P6?1dBK9f9QM3H;]p>5`Ji
%$KS3fN[E`/M!_'`(bh=r\].2H0lks9%VunUl;6n)#On,q0AAZ"=tb&7dEcsiqkh3+T)40$AEJhfdp[F]5!s<+GqnhBZ:&kKX,;iK
%isP)"R>dWqKo.S<I.5_p`4Ru:US\n,f>q@lQ^Y3!ds?);Sc%l;_^2XnPMd24Aj7uYB5=tTDbP\]N>TSqFlH@9;4_=P6>XhQ;cjI`
%']6#lbm869FZM`5cis/[27_#(d?Z.L8ugRBo],/$40>*`cRk$jo2/RY,:sjPo3soO#sM//0Gp69l4$Yci(.u],cPf82jj"aS<f:?
%W<[QZjfpk]2=[KnN1T@l)3'DXC96-Vp+ro^+"(`o.2NMf.eJ1.Mg)dU?Z.%_/n)2+O3kK\bX;M^iUi+G,CMW,\51qLpqC89Wc@o"
%)]7Ld@F)i-e:#hN'/,IIn8)tuqn>6B)pjPX^p9C0!ECte'8[/.&c%=n)$_9&XWu\:Op/Z(/,*2$*i6(XMh]C.L0&UG)ccsugL-WO
%H?)l1Jjm-I+t^0HRb#":bj8\-],WS&_n#XIp!Pk98VHe/l=D2p.brn<X+'<IBDiG\=T,'Vr-t_QIdN[*?ViDj_$'`HW0]0M.pI2X
%rS&-MVNGTO3A>^..M3f)#Ti%uAm.1cAI$I)fi,/:,LiJSK4A2<PMn6Wn24hhD\R:P4=CB@V[!\2V@!:H-3AlrbJt\qp3Ch#5u$p6
%OqS4WJ/fDY72d2(UbT`<1^M5L<H[2-4uN'_,Kf%%Phbqf!(r8W650(S:`=fn+(mW!9H#t+2$iHFgiNuT$Ys[5/:a>Zq3VS("e*uP
%*'bdkp?>`jGjD\a>o\Eo)(F-ReNL`C*MUa"AUi',DZ/3Z"=1<;bI6H?bjkT[,o(<b%$D8k^eZ9jkc/fJ#oE\&@YMh@6M)9"[?X]"
%)Os*=mIFg7<pnW`]oL,Q#T2F`0f:D2T&nG3/;^kdq6GO$1Elh=[a[Qna??%TJuH08Y'ZT[9sers;a^\/,:ch@Q7k:d#:)9u078Kl
%dEY";A?Z[HckA\k1&@&:3L>pBVZMklPI9N4;^=MOI_(t9c;F%R%cR1qmn?05(#_EQI``cKSPN(Nldl;+dLqZ'0+3ARH0,6'ZDZeS
%[N1e/R>XI'C"8F!'Z15a3n?p@kTeRL6*!$2N*6d?/4Aprb1O0_,29HbK,F[?_pHAd^Fm1tXj0I*868*q(><c-.+HI4%TX@NZ`f?<
%UgR94MjSB-SoX9h1H9Fk@D)CkGWSX#77&j`)LkHpO?YsHaJA>G&<N4jC)%["a18@3b>e7M<.E:aX:dXPZnC-GCm#W,7+Xc^4!,'s
%J;#tF\MDD@qkpY^b,;R;"O8]AQ+_sUpsT3o@CY,Od*fsk#j5q(EN@*.SNFp:G<\;daj&p8N$;qtKi<)M([-),/R:RM[.'V\%Xl03
%Zq()j7Kum'RA"j.($bRLNn=NM.Q//X6>QmXbUZ*YHJK-E7X89%1'7T4@^;i6`(XW45;+CZn](qn&nL%cVhe[Mnm5LX9WYelRT]2=
%*P7G9WZ`AJ!DK8+O42elKE;eNBE&ZC\hP:$,$R(MHai_j$k@WDP7SW2Qq]g\V<kB!%o,El[SL<>@rB;$&BJ&%eLt3T7GX0p6#MT'
%CO&"kOp`&=RtkCqYSb=68Y3E.+9uLID!SorK5S'K(%]'3BI=WOKktmn>H.StC!EIr9fef2K4[@*aMj7fJBLsXR[+a8=0J>DVluau
%Z"I:?H!jKI"grR*RK>o9qKshW/!?,00=sX--"$9>.:O'(94j*05g#pAQmB^d%m)GLKL"0c-4ti>4mm!G3K]qtO+Rme3RH]q[5]J`
%SO5;lFcLJU=Qa3Q&T+07'NitB;dc0`9mQEq\1euZ/e0?"MW=aZon"V:g-FF!FsQTaM7@knNAEl'QU;4NUtr.c-qIZt/[%<>JJV5S
%f2#<SrRtfK[9e%YaRf5oSFmbI4#UOS<l]eC_.p\:]3o3Rcn8F;&(W@8btj[6[@1?Pe\Ql*3p@seA"X+#DO7=-,U4UbSU+ZUo6UAB
%dXSW1+j`h`f7Z=i+QqPNp!\"8ZHtpuQRh#][Ke<R,,eBChD+*;kPd7"*L&6JjPcMk-@q-@oLujAJjP'I`!.@k&6(PUNR,RaL8Kd%
%r-:5uG;'3+Vi3_<rk'tTDdO#cOZ!BE7#H:)[`QUE;!G;4]Abm\IYUT'EEFI)GG,YR-nHgSKZ],3QdQA;dV,NKW5<Y(WX9DQ$prc0
%OgO-2cW+I95#mm4BMqj-ZhLFSD4`GGBhi>?RJ+0IpEXlc-5m&n@c5@CVL%)!=EoP37BmS/gA,:^(dU,"h"9F9mnMc3_d!Q;Ra/K=
%O-qY:aSL"bL<Lu'CWP@ZD*#\`'tQS_U>/q!bNBP51jOU,]_CC_'VKmFUs15*5fVRg]-/Ue?J#_&O1q2)^)kUKg3@q-83ZWDJSLOf
%>Ea`mN8_A3^g-5bfB,=;-$=kc38<sUQ'=ZTZ(pH>id#hqLBtZ=:Hbb8*A%amMIgWWS\s,6b24*b$fA@:b\'Lka4,Yn;1(Sm7?%"X
%OVWBkBN:6W<p,"G#VGIKKR-KAbGh_Jgr7uaf81N;:'MlMBT;+e1')DSht0*Cm8W.dR8Y1OGnqQ5c"BW?a4-6m&bEP*j7lWH%n;/*
%On0%.YlmrZECOh5<8,KkfpV!)\SFaj"Ue.;:[lI(e':)IXhflSo:)m[=?'Q1Za.eQ5%[_jY:nb:q]Lr8^Ks,6D6aSRbY9hJDc`$a
%S:]eM,ZisPA3TF#du'&JYBD>@V&qW)o^&9>h/#*AiWSgW=(+KdJ+e<*13\)\\m/`X$E?rJ:KhC&fl$7(NuA"';YKg[<lN5L=jgsU
%oqa@'Pac2]Ukc1jDQ4Pppn5YiH]PS&qM_nOj6V*cUKH(7)+YhK84*bcHBu6)a[q-WQ_@u-b;-Fm])TpXYbYEeY%_Q0^/RJCd@qO_
%:7di-QAm8hT`p$VB9UNc_BOi*nZj$9in,F6*c-RsaQ3"%5:_!+`R(o=3Xm[Aa^o-on!`1A)-YTVQ_@tbBGk!6\M$=nnYmF1A3&[i
%NQAsi4,k.^N_e3PE\sa2'r,%C/`[KqLV4R/BOtSJ`FW_>@*@+26d)_Xe'N]c.g-GjQ52#l57K2:]%C0JLWdoIg08`dUZZ3$=du\_
%/8I8sK61qLZEnA>:-6X6EnOTUhNsdE%<NLlk&e%uGanF_ZcirHQ";h^bUc91bKPR_ksYGVAer,;\K5>u9X(@627"9H_D8I!j]H+1
%E_KSeNLet$#go-0jnMg"/=WRqm3r9YT&c3[e]]5d.YjFGdm&dBa'i7CQFWf\Q,QdQQP7sdD)R^QiA@fUm7ePChXtJjR=)AX/5&B:
%!qIe.:E.J(R84dFC2qs0G4sR)/8LWra>.D7Ba*7uc,?nORhh=?g,-&SrD""6[KVe:]86[rX&7,K[M4(f/gcmT.lS-b>)Hm#R1IZA
%@-pb?An!ba<>3R'UmbDGNL2&Y9fJRhQF.7H`,[EM19o&IAM^U8pLdQD\#3ssZ)g`fM.JQT9IpDV/ecDHkVBEE#qZh61%f*e3BgFV
%bC"dtPJ[;uD'kS/e(!\XPA3bDYCd59SgrGNC,^/D?-FQGRcomaD?9eJ&f;3t2Njks&jecbhZgj?1A?TNUM@,leLhNPbWfjo[3Rp!
%LkLu.q\o,MpaA@6lbTlBrb>o)T-"ga65HHICBp)X@MR\f<!A[KlCc5EiH(6g"5d4>2CNGg=*shW,Q.+0)6m,Q2QAcLZh?U&86&MO
%[uQd9iu$7NHjJ_@gFXM;A.@_<jEfmfl!sU4RQac1bOfdrN]_/+b;mV"qFO\USF[W-=4$\h?]`E>54uK2.-o,olE(5?HrYBnaKgUA
%K;s7I6Y>/LAJ)`mBgCG@HQc\]+m[$[%U&0NF3)`Z1:$#tS`:ZM;TWs=cZsW,c^)aHcl/W_[]K[=<*.i%!XhrfGc^^Q,h^5F)+f?C
%l(u\]1m6d%`NWT*o<9WDiasH=T2$WQC2k+_Nm9e&a[epCS6hlhp\FT%+Z[T#+>56EIpJ1VJ;5g[B++@S3J9<Og!a@k3QAFB-Z_L2
%gPKeE/u^K&fISEA_dtf1m4H5td5?db\9K\]"R9#l4dKRtrM92E^)SQ(jS\]AJ2.]./tX_+i5(*,QJ1[Sa.S_]A_qj)4iOSF>n>XA
%e'4Dg^/SmjC2R3RNfGXMOj5Z_cRGDD.<InCDJi>j2"Uh)=$n)cNiP!'grh]"4Y9%A0rS[IQl"Xlka31IY)dLF.EKbV>;u]!_>Y#D
%>e*nb<)L;Dp9Ihh,R".fTPkr,KLiDoK7Yt3B$V3`e[g4"PJ5,kZ/deo05dckh/"naqo#tMF)2?`/a-q*n')]8h7RC*0"ZCI7E#[P
%B\XFr_ql[.#okuOf+j04]fJb<fb*AaITZ%:#kOb$>`C:S:SagpYttjVg=5CNn7elP1D4U:@'GI#I6G$c^-.!TI_%B%e`>/[O3U&"
%#ULL'U?U[-%W&H$VsArQNXB(Di',q!Yuj+%@jOua/86MsKiIL6hee90oC(JYAcCLDrJ!P.^K#71k'>k[CcN#,Q^dSS%W-8.Cm+kW
%XKQ]Vgju0Xk+3?\4\/kUT!%U+m"[SUkH]]0B7M=-$:tWV6:`sR9(F%_[OK<KjDt\tR%^5.K'Y4f>:@AbFR$tPP>b7@!pi2/6=$@6
%)+9EfnTDc92V)"3G!J5cf*-`ljCeCl`oMaElbR5GGA.GHgRLnm5]/TK<e/sWIs`b1gT:)RT.R,Bij34(\'WJbRVW?Uh2M()QYNik
%)U(^ElG[AM^0ESnal/`6IcKo%(a7q:(2,RDN*b#QO$mj&McZ&F<jlm8GO10F;SjQ?F<jtL.pOhBa>7'3#dFqE]'ogDYoR8pUq%]M
%FgF"K=5gGDcY1]hYg9%9pT<'L;"qc>p$&hBY9oULq)Fof]7(_2MCWh=:G<BXh-:ftOp\$k=/5h%Xn:Xj6Q2r6Ph$e`*)bN,DuQ]W
%%*K`8E7]fM^YK4L,1ZB#Z@&(@bN6pcaA@(gpLS5`5R;7Fj`kuY'J-ucH&?mZ7b=Z7)o@<"WsZ.Rk6oCh,-;rG[d;*@UFgi`HCe3r
%hL*;Ojk([Q/T>WW\kL8I`FVq23X8f>7:_og57O_8o77"Tht!30T@`LLSgGOV3+FS?(H"rq2n(/RF*;JK[/%9\T.OFE[coaKnM6_b
%O,8aVKs5hG9!-j9E[")07MVsN'#o4&PfbJt;R/6V&@8;%FjZ#U3Q(1oimUI%-6"3k0tn:"3AXfj-AaSu+['.$*p+:_m##=e^ZI!6
%jNuT%7U&6=Ooc;X+`>4Y60&Z=$asp<E4_'9X!di0GI;dF;+.76>InMt8dXI[)qdQkqEae;HL002dt=#7-S;R,N<ZU<Z3Q<jS/SFs
%3-)=RcoLLJBTM=INGL4QVjERS&:9V00O%$dD'.4rT#9HSSC>-W:6/W%qEF$gUNi]f:EkEDZ5?A[EIu\T4_Vlf9lbpCJEo'sKGgVq
%F2<fY=YM)DJiQ,RhHCIb3nLL/NHD>T,2;=j(?[7Ch.g^=n#Y!e5?iRr$;j;Jj#]L,/,h+5XXX]-%W+[#QH^h8nU6]'VqAB1'jO^u
%aXN(t9<F_5Vs3Y56_&:-)b$Z73WRO(D?$+9N$',oh)V+a'H-P5cY_Foqg;LW</bnqI%[DEr9Z3\4K+62>K;+n@N$og0qCC#J,dt`
%$"lSrBV-Wd3C9[uCp[A(CH>n;FZ*EUR^gaZ:+,6=FkcQ_5FmIk97>aN*S>%.F6)*s5gcplb.0Tae<F,(]5ua!f1tKjHi&PbT;("S
%.WErbO`AGQfka#$Ml;aP3-CB1[^Jd()FC5d4)&$*CW.`;jFgE9EQ65OJs)R$"FGBp9?h=K4fVp`OMN;IKG?nppq6^n+2Th?UI@8a
%[$,A%&8YH]Cn'RXKfU9iD9,jL+no_OKT/PM@Y:ca*:;VO[*+%QEY)%]]'0>_*fn#%_:l%O#Bu+eY$H]$]K8]oN,s;Z/q`i(duG/9
%F)c'p[,8n<p3H)\Q.IYF=fFX\r1,M!*BheoW>G&,!kpDkkMPP&GTf:WaA>bk;b7=QUbNP>-<+e`.s0,X/I#Z?KCsi&-e*WEpD+p[
%"q<Ij.Ajgm30S(,@TP=940j@gRm\8TM,mlP%n48OU=hG"i.J(.V3>?<FW03t>5GmuDE1br8q+@5]+g$q!]KZXn1DkkXQ9plNU`Eh
%#2<@lN[UT#@V#LI:(l4NrZE6)Z&rGtWTRS1/qdi4eTEKrlYL=1Nfo`D<lNZKf*_l24neYo%Z#*^Z];oEAteB<q<:4H2M1ur&G;%-
%?st=*pVCIG7:m("l!cGN/Y0O1PKe:)[]UQpZJ!giA@&E0S^"T_.[t:=R;B=\FuER*FKjFf2E$3K-!9Dic!Xfl[.Bj5[Ll4lKDjIM
%WGK#*Noep7`b&G5`b&H,4.C)^>\pjR_ITuWp@rfI`lb_R?#R%dY2lJgfkrS["^j&*AMZ!*-cA)RDDP8=5\eetRj"J]8ab>M[aFg/
%]?':r>>;9TCit3^Ao!oI1Ocp4ZgP/Z[PQW@Vh<ATo"<;9\=_5iT>;(09TS3tj-XkYN97%gY3u&;,+T+IaR_T"/IJ97U[R50>Jj^9
%[W04GZs+#cRF<eX<BGBS+/sW6"Ogq?_2,e)lo<*)\9F;nj<-+1*CakqBod!Jm<KSFnj\)/6CumUAd]3ISlmOOFgTP49TSq'qXcY\
%<Bp>=q0BN+%F=0L5Ps^:o5ELao#m)tnF7m"eXTGnT+<Q)lN6D/`bFD:7g<2g>kV84U5`,pb-9f<Uaqr\mk.R)Au7CB^(S@:p];=u
%*sBc5VkWUE,SF+M876^?"Y;@5Q8Rc;W.b106jp7c/-&D&$mM`e`QaBKIn#TW"a\QmLS`=(.lB[CU05V`@$^5(7!q&,+2Z[XNUX$5
%0+tA#IE)s=iFm/Wp7=2mdY2ruTHm.:\YM^R5@@>:*Q.@4Zi,9!+Q<2(77J.0^[26jW4;D;BA]RT]&,T3:Hod,o[@1.J,&j:0:lMK
%rq2&m5#]>E?N9<8H]i>]jo=D<L_!tra8[AXfKEaVTDn?cs5?ItnbUcPY<Vs,_peK!&_[0_0;&700E1n.-P,h/5C<1Q:Oh?Z5E)ed
%?Z%!8nNVO']C5IUE&s31o'c*Us(VDcruSQ)4a?_jQOj,VJ%CCgIPCcrbL'r+NbbJ#N,lGn!D5bNgo4(2Pl[@G1%/]^pSiKIrrP`7
%.-(+0+Ee=Q&r-9T)!MnlTh(mU,S7S+3:_PWN-(@DH>sQFMVU5Xj'OBoh5<-t^X_hgh5%dlK&*>arnd^#h/>1rSQqUB;LS[804'ba
%5I/cpn$NMmR*jiJ(+Wic9IM>98-M(4#BfC-"iIiU<7l2\U/aJDXURnOI4?`8T]EbmON&..Q!.U$o7NK`eES4m"m]:;m.e"jfK6uD
%e7/oq%!RQ:2TnET@.K8V?4sBm:]a"aOlqZg?RF2KJV3\7"kQj^)7ZQbrq+E(6*]E@_Xe71(tNU)cnX((X^sgI9M0,S)WhQiL@BDO
%P@IOJL"i"$=SFG5_B1,?9I%,hI[4,o]^0Lk9_<Td3bFFD1TD\ha9W0)Qo"\u)WU2C!VDdgp.brMDF61BN%#rb@fHoe0:D#=*PiFa
%8BFFK%FjL@5D9CV2$I,`'n@d?2*u^9^O,Wg,[#I5hYPU:`X#jnZrZF`]:&$W_%X0dqVq%FHR9+&$UXp[$d=qCWq4FRL6c!_Wie\Q
%#N&CIbJ;Lpjj-NXi/$r[%:1-:UX5tU02b*lfY/b13[PI=N*>1VrRe&Q(Q1,j@O-o/&1/Lo+S.ro\2$Koo$$J>*'Ajo`!R,4rgIDP
%<e!U#=?@:jcnn?86U6g1`:Ut";2(fC,HQ=GFfZW!k/W5`8AV7QJEB05[YACVp3@S@nJJ#uTC.a;kmdqtU`(?XDJfV<T[Q$N()8D:
%Pf,-dAGCFGl5VFA5iDGalHoZ4Eg2-)JQ`V-*K!a7JneE;d4!GU9&DQA[2F&"mQ;to,Hbk>W+2R;RIWHsZiDZ"=RkT4Ui-hWK&QMC
%n-3kbR2^lcW.NaMJ_(<@Xt&sWgJUKI,^m89^eYnrX^sh-1tV@":25IN`-#@7S*E:.ZALUVPR;AW^a+$94ff[/P>KjrNAlbV:.%;>
%;e_9KHlLG`YE9mpNr1MVTirgaQf]W(I[,a&WLk-DW&o'"4A#Op1+1W/_2>PBcH@bsf>Q<14^-bS@sa'D?UAnjmjXNBU!C2;ejm@a
%\#JVtN2rh(c9Nprk1rc8hK`(/V4^@oK-0MFFW\XuX3+h65.I7cT?c:;i9=O[[!SE[%6WH^p"EX>-tV&Vh@T>A<3TNmhPXNZ:\S%@
%]!2bCL9*3!3ab+e799$nX/!XgPKjO0\BI30%msIiX;bJe@*rsb:L8rM=-W=sh`[XF_74EK1G@#=S87[L_tF>rWhg97>6cBFHKZdA
%jiZZ9!';,ub91=p\GPb.!VuhOP!Q(!7tc+)bo*LF)$UnN^?E)8UbUH3*BX?RIWuIF:EaT+"Nks]lGN#9eGEEPWd%'=6hk^V$Za;h
%2-Pe#Qk?cZT]6rX0aU0<]EJ<;Jr7klV:k4@%*5,9r1*hmJs'Oo#DM^@TN'ulA=/-fctTbTj[6#G=/8J'7h5Tt6E/-2WMUll#iZ@e
%['4LH7Ck='&'/Jm+u\6#a;>Q/BT\uj:ier^V]bMUgiJ!i0Sam]Xn$Jp,E2gC;9"V-$3lF\TJ,S)MoGrg9^=*MSn[p4l+/W;W.F*#
%Y;2ROb`cjfO##a8Fe]:\;>_A>+M__@aA:5C"F4^c[\:^E/4<tGmu3)ka7h1EiZ9:OaigH-1GW1(+]Y3sDaPRDOoZA0#U#0?^b=6m
%Rq"jN:9&X!1r'U.P@cD``GHF4V&/M]_3?eOHZ3uC8Y[K]3YnVW,h,#3b`c/A<[`rpOjnDJapnVEV[*_<q>Y=dgphu"*%I\1F[;$T
%&bM#0&[;fH^*]X!U3a1:O@^;8(H`7'Jig.<S)ZqRE6\t+Tlid]:M=Bs)FB`MOpO7`q[n,_1=-=W0r,$/h;r'aHUN5a4$g8!>RNnX
%NN"MCOA4c>0VAu@7IpfJUHX8%(kQ:FJ5nP)Ua*S^br?@/A.d%Gk]QQR<C07d0bE'DLdXf*L4i[?A>A`?E(JMeMI;Z:5.l^UY*f^3
%,O$5%aN5Se4M^JRAEE*aZtkDYQq-%pPpj-uL'HWOCC!;.J4j9X]tLW0\K2[t&nQ(pd[2%(e8VQH;AgK\<+#i:!MP6gVD+)VAdD3n
%6"Z#><oZ"\';K0-BYgNr16L)i34Qr3Zm\OaLE>V<i]9Q':Om&26e,"]&ljDojHUYB+tWY(f"\a5R[q-P'ao7Z``&Q4O[DUV\-P0u
%jsi>W0eHll`:0E*MmS;F50-kr.ArZD*j#f\N/u-aLBBE7h\gDRCLgQJJWPOIUt:AoDkKuhY!o-W[%K']5[Lt\WjJ`!!bA;2QK`oO
%8[?260+\mFU+u"$J64WV*`7-BpI9>:O>8:Qol=A0Lk,$g]T7doi1+KgqI<JU#6`#pSHeIhGTQC.rdFIZ01KJ$EbmH4GfD`\f7md@
%DGUrYRi5bA'SrNgmZTD;1U.M-LG4hMeaa9q5s`ck;WPun8l<D%\>q!h!;0jWF/UYm(mcTr_@c:Q/:,X)fi[cd6I*63OrY"eCkF)R
%o;$N+#h9ZmO#?Ha%0F73<2hE%Ce*;*=K:k>ad[t%T'jFd@h&'<U`^Hj[9gAI+EIr/JIb*VPT#qG#Tc80+@V+"%W%_p"K*Lur8a+H
%&:o]HFDOXGZAus30(;D!:D-8=cSr!l34g5+M1_[[[kn59jtH,VmEY!<j'2u]6e:E+0V)^e+UoV+FAS^]SqhWP)j_8Z-OU2:WTnO-
%iXeG<gPjbM8Vprb3o0nbZ4[7n)rHMQ3.jN=\2D<$%a\.^Ltmr+E\XB,Z%Nkf/'YT6+Bg_a\9NOlaGl/*![;UjY5i<Slu!!:Je)q1
%)JhkWDh=sj=mfb?3f,53.'a=V;i#fi2JuWnED&AUqKe!)a#7L?A-S&qF\'AZ8QG7"i`0gcZoBX,<\r3dfW)!4@f*\(?plI%oM4o]
%([]kn!]9p+<-Ggm14hKK.>f13L^0&rl%M\HND;36"fGj<HANi7UZ6'%#Vns982DIT+pM&`'3c;\TTWGY"3;\G;!:8je#"jnI6;ar
%]I]el+@`.,huq*B^pM^[GDZ1fVooc^8b/k^0&k^h]YVZC]%\b=YG_i?L]Lt239Oin>mF2WLJdq/!8-h'X`u[\@WK_[PDE31T$uAZ
%[<_-I496S$UG$:!V-[>b;_D?D\A5d]")aR7X"(ui0Wl3+S1^i,,/BXbdjDkL:Btm0]:=fc&:o#QZpi&ra=VbMdu,4l_E<f87aXEM
%29%!InN7+kK=+CuDdf/U7.iCaV`G7K%oL"aK9.7hnJ[8r4!4-0VmJA]=^3o/8qb`rJX@ZkC*49+=S7g*;+7A!C-eXrMQ)C<&1$"C
%@uaqS-A,-BJnt[NE_s>>*?"]#eA`Z/GEqK.+Ta3D7P%6,$4m(?+squ=7`qtuHC-KI@Q\T9O_mBYs+I/N=CACUAPSX#7KY,t7ljot
%1+t&LRCUiWM%I]i+=Kh-$N(f1?NUlHOW[I26^r`ob"QNqF]-."!XtljpWii>d^(im@A-e>?q\bD+GC5n'X?a"rD=m-AsUn(1R^XN
%-4kclR@Sp03PbEY0j.D9RE@QYZu\S)LV?o!rHFt^NJ!$.q6iaa,8dfX3asOO'S=4FG8;=`pkE%0[7&P@,f:8g6V[Q1(r>;NkZQ)D
%\Akt9%m`V-##3boVm7leTS=R@*G\fo1N?dFM@-_r-]+u.fEGcK[?WF"R3hb;!2kWbNWKe33HUT#Br],B5UXBZ`"^D\Z9DVJ,15o6
%GnDco/_S#B&a46u^`tjGj*DkTg75`gQG_O/G,$?nTUU,G)\%m7A1;3,<"gGdIWehUg-Eb_/\:Eg20f61artgZOHp6XVP.Z_!/5^:
%[PqT5F9:o^!-d_<&dBMSGk0n.EEt53TZ'2-37\;T,i)borp`dAi!1tP_<cEXf;A4pUe&9.UQf[n/I4a'Fq17UUYck2JIPK\Qop0p
%%PVhkJ\X>sf&/M8Uma[2lAB/*AV=1tZqM,c0J?hOl3Nu5c(^DM\6),^PI7r]laf!Z8R\?'D%]*KioRG&"MQm16'4g4mPUtLA`PA>
%EOVU\EmX_g-6>Ni%Zir6pd(C%V!c(h@&-%t9R*dl)7bVc&-g-eJ2(_`'1%loe5QeaMC<Pm_g$"<]oWl?XEXu#S(\I5(lS\Q"1&#h
%/$K*+D_S75.5Ds-_])IUMXY53"phc-QS@4E_M,O6Ca63?J^+>\SJlX\*[7hDmE7j_i_3LR*'r=:F]j\,]Jh<+dGBIr>T;u<9esj9
%U]jIY%%UitEsNB`JJs!WKc>qH)Eu".g/2TA=_@0$3<BiF^J]Q?@NC%XX3ms,\tf34#-flt"<p5k0&DP&.RER`O7D7=`NAl046[b4
%9\d@dI'DA!b<I[.g[&ZoSnGR[oMS3S"n-A,Ss0lrP#02>_j&8u)A*VSK*(0ij1,2eab^Pta$&8ufj*Jg?n-C,`n,P,_*Nq4Wk]^k
%N.DE^D5ZSa?#),1?5m@Ji$Q3QmI:n_+R:k,?;4:6W$eehMPrGo"GfKJR4c@1E)4ie(6-(+D&4]A@Ajq7Y0`TW\cBZC>X8M6TSaR4
%._o@VUW=sA+EP;I"]O4g'gRWHhrFZMr,9R.8)eiHd1Rcl%?2603#3"MBsP>men.<pN[%M[?^5V26K8';5Z$OFb@E4lF%.T^'1.q<
%PVf;kfi)KP*V3se]+MkX8Hnp*Mc]-_E^n;D8$M96kg)/\2eJ%j>XTEte.d+Dd5l<Xjh!2t%Ng$!\1a(Tkj4?".NXr==Dp/F)'4;.
%$UbM<ZE*Bn/R&5`=^9?i#tEiR\1=qaA>l&DBlM1@7nO=;*WXlW[WOA[j"fC"&7]-$/t-('/M(JGLlCu'k82k]ZU<eXfd0r,Da#oM
%]^@Nt[LdM3S%U:uB7c%m'O]W4s'61f&MUl78.F4'_>gHQUL&hI@G1K$UB%7p?qtXV.=g`93L-i'G,es4K>i#@1_WIh*7KQ?.Mc4j
%Y\oo:Q%Af4U(Mq\MZu]QL_QO"@_^M4H>m8?@!*@C-4cJe8oYSN9Kg8OZBN-0G_kju+^B&!RVH"bS^)'j=8!3nWO[.G'?HOo!m6%D
%gU[SN`EoL5A/]h,d7&ks7&RQ/G6t<3?EcsS)O4P?%-us@`"6#i%e3O>B,a#JH:rfod@iD7B2Z.)dEU<[bj\Q[5/n39HA01R3`Mp\
%_PtB;!^)BE`+YH=4[.?`lX>2j>miS8'$>jc,E9f'j9T70K.OoL"bVs<P"Ruu8LBQ'&<#JLf%P7[dn.uLAAR@LpT%@K8X3s"&Dbc9
%""=l]=,F2D(.ApC9ul*S6`G/Ui+QJ>k4.q[eJ%N@dr_dt('4tk=Pf=Jr"32b4G-Wr-Qs:CU[l]fjGfK\nM23Tc"XM2%l'ZqJ.Ai4
%H6",,Z31_:=CKTEAgNPtM1Z)/?NL-Z66Ch=,<g_7@&nrX+Bfc-3!Aa"+o-oq'.=k%F[.Ya5aN>)iA2D]KgN80pI7&2bj\-:;M3*O
%ZuMs"eqGE6C6Ndkd>gs\\rP^9K)5jFP"=.X'B`JmMW7dM-IBZK8WQVs@5H9K$.NP<E'#AuLcPKmQnY&kVCB&76^sAZKZa\V(0<$o
%!CImf8[RqrKQ*s/gCC91E!HR;SFY-(KBf*D]HaY4ZjWS+2G4-9p&V<Y_hNrE3@XFD;BMARD;],p5p^ao*%CN"5Mhlk?-MGb_-L;F
%I@*F@_kuZRLI2^p5Fs7!^sia=4`(NA=a"NKg<mEQL`(V_KL!m%/>ab3=MdnZ8r0^n%&jrYLEYX@?Ba!Di$NSJ(DJ@@FqYH!Ka'Z#
%6`t3%nAS/^V9Nd_K1A)]pS0BHhDLZ.*<pE]5dW/7!;";_?,KYOV)JiY4\tUujCOT,%Q[6a3HAAE78-GWV7@g+<82#b;M&#N!#\l7
%nIZbhq!Z#^6nru/Y@98bHBdVD5`KD>H@Qm3n-t+#Fru%V!t\su_FJf2%N.Ce#c:O+k[m#eTI.(+B>"fZm^1'p<LhgIU0NCTd0'WJ
%76%uG9`_#?2['tsDGEVmE8tn&.7k;LPTUZ!C(i>B;i7sP>fV]R9]-R*j2B&Y(3fjL7Zf&XW(k;c0W(PR>mI6k=fSWA?MeIgrmT3-
%)W#Ro^P#^Ek/9W!$\cB]1"WZ@YT09`=e!EDoKu\L]0pT#e3aQUS[;KA'LZ;3%Y18)&;U]d!qS]Q9AUk5gCP/$]O4/=1>Krihn^cu
%")^EjF:>Rq=@>3>`?gcoK@'G=3"edB"cCI/r=GZCYjSbS&SBDEpd#+o<-YpDP,X-"=RNEAGu\@ILCIDM?9l_?Rf7KQ\ImtNg8#Vk
%br0:rL-IZV4];Q<M5uUVWj(u\:E3cI0NsEXDPcUJF)BBL$FXg("tQE:P@XePBS7DG%eK0'[k(qeOhSm-%cL#s*R.M+]f(%:UPakh
%W7RNdi)-\Eqf,l4[ASq@+%X`&T.=P+:;167A4<O^WWiZ:+"@hS=>Jp73u']/P7S(iP_)R8-pM"BZD"kK4J'0i\g\Q8_Y?=U.XJ.O
%b6LXi_j?)]B[k#k!&`O>/uYo6Ao+p1Kj]L4(e^XP`eocq'\hQrnlkOmj7rr:8iPJ6+gC?qA=H"jSaB]Y59+u@1HlQd@:@j71nk<:
%iVDMh]r##nhW,CL7r(r$;(TXP$:-4fV;TCfT,!TDP7%q7U7Hm&!:Yqd/VP;l<Z5!T[dg!tGXbdP;Z@AGDbM5rLsXdb'Fqt-P8PC(
%bop-(If=S1CfA<)Bme"0E:aBnlA%Y@??s>U,3]l.[,F<KM6UVAEYWhrNIbt2Bp<4!+=7NKi4Q'"i%YGqa[0+,Es^tcpsib"G7;&P
%Ql>$D0OlkricSd16Z%Dl5d&DDb"QlU%%24eYE2kEE'r-P!S`]&G8oM\MYUPP\BT!7<BYSp&>ip</u\0Wl$J'kF<JfuIYA5p02R:D
%dIc)7d,pG;20],+>F'Db&L)6$Q3+uun`ODW!X2)\Q'/B-);*/EmUUkZW$))a]P_]](S9s6'H7T%]Mge3,*ZVA^\GC\Bst^8Cbrs4
%>e8SDCj'E\F'tgGT<=A0(]`gA(1Z@f\&!VQ()1/e>lbb=D$F$PB5GukgH`Y3EB.^^JS1Y^n1m$o`\[stC.X_\Oj+gV+;P6lBS)s1
%2^%HU\Ak8Qh@Sil)+?s2/:DbrH3GR*1ptVCnNI('GVbK`SJul8V@)jJWB_?cF/Z^ePDq\oMVuW#X-B\lNgkUQJ/Nf!<i?W"6'iEj
%aO$k(TpD'OKS[.VpgoKp$SGB%&l'@iA^qY8:a@6&3[8XR,<jX.?7i>>N/C5`^.)fEk11dX/`S;R)ZP";[&6\'M>473`F,)\J22_E
%dS+[$D]aS/5(g\;),e[t6jVdb!WpulFhfaV7Y.(n:uW7AJY^:V;`AfF+?gqE\2'5>;)EfhJ87&Wa_ainlt2m+495+!S*S!`L:5aG
%p'T[W-lG<gcTeYp7uWhWO,TBV<LUF^N)`-cAt!CiYRtVB$AaA9q2Fl7He96(N(OQ5W>+S/MG;V9J^_'RO?1BJ1JS<6UtiAR'_:md
%3jA*^on:tt5aBfc(.:?/JqcN%EB=+HAOmB%eCA%BLeM8'),(k/h`eEL9h7'N8/Vt%WZW/[W'Rm$c3ZTaT-XVjdtq17CEqaPh!?dT
%JClb'q4`"AJS:hJ7(@NXqO!bmeVF\"crimX(N5K(7Tdj?0#Gu:^d(I"fNWDj$c+'r\-uL5C!BZY7ZGR/g^^.+c_:H_8JE/kV]l_$
%/UmT6nP<f_C8rfjdas`?*E7^A($9:kCEXj]@2f?mM?'"2(bMloD"d_.,>8ZF:)V9H]T<2"SljkaS9f)C@,kje<-'aQ;sDCf))9N\
%^+oD8qp/Nd2&IQX0TG:NIK+8F:C:2I+H;P.l9XbjkTRO7OlSYsB(9M%N`0p-hp)>">i1ordcG/X*kRJ&8MV2g_tDtlIt1hJhHm[%
%:RHgL?O2Vmje,dB-)cp"Z!jUd712^=Q[%=\CVuA^UU%jD+4dUA;,CPHo+1`TBYTUP7s"6fA>p`HLKmQ$'2??5`!C"Bl<;k<j6SEs
%!K:qMrG:C5Oj;?n-,R#`c,pou1oa/G-?@2"+_&3L`$b`epZI<f]2!BbdHN=E6d-!1;,86hEZW7s>;W6">Xq)[%3Q$&MfgFpQ?+ga
%fES[e&&KKIJDdUA=k+j;fA9!F-'6LkF^H^;JTROQ;iaY?/_m0,KW"H`]ktM;QO`ViM>YXSa$lgSG^OL>I"m$`W9-'qOo^7o:?"7a
%aMXGUQkmS+1C"N2OW<<VNX"ul2Djn)Fe<,Rj[altAf*Ac#&?p825+:b]casYV+J>D(?EFqLri7(d%7?IMHYC*H=80fT'u'p!6gao
%m!2E9>SKTOXT^aQCV!F8`0]4_J8?$/VXF$bd#RC6'`o$0e!7%%JpXi:8DX"Fr.K$h$PeL3l+67`(44cAc<9VjV:DR?,HH\]kN9V&
%QEEX*Lt>^G)tgVl]=/qk:uVC:\URN)O4lT3CZ*Bo6t@:j`NjrBQ[8";iFUDDU)kmsPP\*)b[4?kC3?Z,cQ$'$r7HjqkoMo@41/79
%@blPBL-sYV]uG8WBYV<oj:0DdmJOWOM%KP9W?8[Pp(lL.7bC#Ora7t*913;U\.D#kfL/S7")g^I>f;Yk'g0u:@Rqf<M*F2*MN&+<
%^R<tId"QPkC#12]FM)^G1tFP\*t9u:*E8]b.h4n+\qEc5a'diD>,5f][l]2^p(($\)V%jic+nTPfbuuQ>-?A'\[jqP02T,P=:O%1
%*fPL&mE>*RV!#<RDsn/[cu2(B8<a1c3M`c/MDZsDXTcg<QQ(9K;jD/kU#Hu6,#0EC+M`l,"[u2Z.[WeA);istfEl<L5B7Cp"I[7Q
%Joi@l\T+C]G=>mUCC:2)$iI+JNPo2LOf],pQcB/I:guQ'7-6l\.U!8T7c!LQRt]a<K#1nk,&_Cga@91cO`lu;ZDrS`0l+mq,STBf
%;6CEWaTS2`nk,'VZVIq>D(%*:dJ.iGk3%(>0Mohm2JP04'KD6fh7Cf?,u49RbRT?+O$9(WLOt0(b.^eb08P/;[4ptXL#n,aQgAl#
%:qNW2_!DO70/H7aRb`PNMLN"e*AD"QLbe?-n821VT:0p.]"<b(^)J+Y*Qi&$L54=5AEp\)<\2N$J8:=R(&AdMk&T?YYS'o#g?fA(
%W/L5UgDpViTq43T"1m\NmcFW\-,QL+fH%1^=u'c>BU_(0E0+65q(t3ag4KCQWo4!'FfrhC4J6&JM2Jq`*X]&rkI752a[mY=Bm:al
%Y/nlW5cT$B1H_c$VVttDZV?e,!*L:LlLKXF#^acP4Hue`8.NPT/^n'F@9fijL/TU-eDoP=EB7>nn;Y"n03\g.WOlWL;,&ht"K88J
%e+aIef2=,sC02,:NR7D1O\")%fi5l+,*;WI%,lO);PeB^%.U0hRP?ZeF>5&D[OHUY=>nD8o8m,jgP=2C>a$fWC"!J,ois-eYu&"/
%"mWf4X+e189f'H<oIEuWghcd1W\*N0pm6TmI@ml<'AIHo;`@9b;5^>spKp;OnWLZp%#`1F5"%9HNSrsP^WVda2'oX3%fmZ.LSRu7
%FfhR7L?8V^IL9fn(-^,l:&`"+`9b)DC@LA_7+#q%=KDY^'\!n4(XtA.^0Hr%$Md-U^'CuqHc/9B]%QF#2_`"FM8>HC0^fKdUm:Y)
%aB=Mri,ta0V+<\=Ogm.e+0+h*+2W;UfX98`Ufahkdn,6L`UQ<2D&p7Am;Y>Qpst49C9tI?g$XU0EP1t!51X1@Og.WF5=iP:B9mA<
%embu_!G8,BF(r^N'rI#>\(2nf=GoV%H(JtKZaFL]h:?$kafb09&(f<CF#UG=.p9\_>$\nGM,A+[X+Qfapheb9A$WC)q#eI-@]>sV
%!Hsp>*bJoGZ7j<h[JcVTbtVQ9mbG':\%#pBCba[eXughMo3<R4I3fZZp(N5e@tjYOhc=4HN_2^VGd(%Hr;+AQPB*7Z8[[qjXj'St
%emd["288bBRbDTGB"%HD""6]6;`P7<Mn37a8C]:`cg;`f@So`lPD/4!A1g6=MZR#op`c)aMEp,3g="V!L,k\[ffhb@>)MMT5`i"U
%P;Y:9;'Q,<rIa5@fA/$s?Af`NVA*)L+ImW,%Aj[VV)(*+?$b/c\gqfZ]%_=E=*E3VJ/IB?hV;Z1:+@G`$jA..^Su(?6&_Y4RN,`m
%]IFHg+U7))G0*Q<;a3h5o3B!.eu2Ma6ZYXEU2]/8hQ9[d]52`X1Rj$!d@JB3<r?PPlTb=5=20([[i\qiGmfH$?[_V4\$$l[]mgQ?
%s4@9-rq,]\&$NbEpuR:_%q#;3bMRl&+3bo*n:s7.ci<M?s5EtZTQ^`N~>
%AI9_PrivateDataEnd
